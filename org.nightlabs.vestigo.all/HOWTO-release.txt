1) Check-out *all* projects in trunk: https://dev.nightlabs.org/svn/private/main/vestigo/trunk/

2) Determine the old and the new version number. Look in a "pom.xml" to see the old version number. For
this example, we assume, our old version is "0.2.1-SNAPSHOT" and our new version is "1.0.0-release".

Do *not* omit the suffix (in this example "-release"), because it is required by tycho to match the
".qualifier" suffix used by Eclipse. Therefore, instead of version "a.b.c", we always use "a.b.c-release"
(it is possible to remove it, but requires many more changes, hence DON'T!).

2) Replace "<version>0.2.1-SNAPSHOT</version>" by "<version>1.0.0-release</version>" in ALL "pom.xml" files.

Make sure, there is only exactly one line modified in every "pom.xml"! You can easily see this using the
"Preview" feature of Eclipse's replace dialog.

3) Run the main method of all programs in 'org.nightlabs.vestigo.release'.

5) Refresh all projects in Eclipse and wait for the build to finish. You might need to right-click => Maven
=> "Update Project Configuration..." on some projects, if they still have error markers.

6) Replace "0.2.1.SNAPSHOT" by "1.0.0.release" in all "MANIFEST.MF" files (the Xtext projects are not
completely mavenized and thus require manual adjustment).

NOTE the DOT "." before the suffix - instead of the minus "-" used by Maven.

7) Check-in and wait for Jenkins to build all. Manually trigger the deployment of the stand-alone assemblies
after the main build.

8) Create a tag in svn.

9) Repeat all (except for the tag) for the next SNAPSHOT version (svn trunk should always be in SNAPSHOT
mode and only temporarily have a release version).
