/*
 * Vestigo - The JDO/JPA Query Tool And Browser - http://vestigo.nightlabs.com
 * Copyright Â© 2011-2012 NightLabs Consulting GmbH. All rights reserved.
 *
 * This program and all its libraries in the namespace "*.nightlabs.vestigo.*"
 * are proprietary software. Their source codes are trade secrets and therefore
 * must be kept confidential.
 *
 * The use of this software is subject to licence terms.
 *
 * Please see LICENCE.txt or
 * http://vestigo.nightlabs.com/latest-stable/about/licence.html for
 * more details.
 *
 * For further information, please contact NightLabs Consulting GmbH:
 * http://nightlabs.com
 */
/*
* generated by Xtext
*/
package org.nightlabs.vestigo.xtext.jpql.ui.contentassist;

import java.util.SortedSet;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;
import org.nightlabs.vestigo.core.oda.ConnectionProfile;
import org.nightlabs.vestigo.ui.editor.DocumentContextManager;
import org.nightlabs.vestigo.ui.editor.QueryEditorManager;
import org.nightlabs.vestigo.ui.queryparam.QueryParameter;
/**
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#contentAssist on how to customize content assistant
 */
public class JPQLProposalProvider extends AbstractJPQLProposalProvider
{
	@Override
	public void complete_FromClass(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor)
	{
		super.complete_FromClass(model, ruleCall, context, acceptor);

		createCompletionProposalsFromCandidateClasses(context, acceptor);
	}

	@Override
	public void complete_ParameterName(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor)
	{
		super.complete_ParameterName(model, ruleCall, context, acceptor);

		QueryEditorManager queryEditorManager = DocumentContextManager.sharedInstance().getQueryEditorManager(context.getDocument(), true);
		for (QueryParameter queryParameter : queryEditorManager.getQueryParameterManager().getQueryParameters()) {
			acceptor.accept(createCompletionProposal(queryParameter.getName(), context));
		}
	}

	private void createCompletionProposalsFromCandidateClasses(ContentAssistContext context, ICompletionProposalAcceptor acceptor)
	{
		QueryEditorManager queryEditorManager = DocumentContextManager.sharedInstance().getQueryEditorManager(context.getDocument(), true);
		ConnectionProfile vestigoConnectionProfile = queryEditorManager.getVestigoConnectionProfileAskingUserIfNecessary();
		if (vestigoConnectionProfile != null) {
			SortedSet<String> classes = vestigoConnectionProfile.getQueryableCandidateClasses();
			for (String className : classes)
				acceptor.accept(createCompletionProposal(className, context));
		}
	}
}
