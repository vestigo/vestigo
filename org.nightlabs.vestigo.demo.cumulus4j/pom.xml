<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>org.nightlabs.vestigo.demo.cumulus4j</artifactId>
	<packaging>bundle</packaging>

	<parent>
		<groupId>org.nightlabs.vestigo</groupId>
		<artifactId>org.nightlabs.vestigo.parent</artifactId>
		<version>1.0.1-SNAPSHOT</version>
		<relativePath>../org.nightlabs.vestigo.parent</relativePath>
	</parent>

	<repositories>
		<!-- Repository definitions are necessary for Cumulus4j. -->
		<repository>
			<id>dev.nightlabs.org-libs-releases-local</id>
			<url>http://dev.nightlabs.org/maven-repository/libs-releases-local/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
		<repository>
			<id>dev.nightlabs.org-libs-snapshots-local</id>
			<url>http://dev.nightlabs.org/maven-repository/libs-snapshots-local/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.cumulus4j</groupId>
				<artifactId>org.cumulus4j.parent</artifactId>
				<type>pom</type>
				<!-- Important: When changing this version number, the DataNucleus version (see below) needs to be adjusted! -->
				<version>1.1.0</version>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
	
		<!-- BEGIN Cumulus4j -->
		<dependency>
			<groupId>org.cumulus4j</groupId>
			<artifactId>org.cumulus4j.store.localkeystoremessagebroker</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.cumulus4j</groupId>
			<artifactId>org.cumulus4j.store.crypto.keymanager</artifactId>
			<scope>compile</scope>
		</dependency>
		<!-- END Cumulus4j -->

		<!-- BEGIN DataNucleus
			We *must* re-declare the dependency on DataNucleus with the correct version, here, because it is
			essential that the DN chosen here is compatible with the Cumulus4j used by this demo. Unfortunately,
			it does not use the version of the transitive dependency (via Cumulus4j - IMHO a Maven bug) and even
			the import of org.cumulus4j.parent into the dependency-management does not solve this problem :-(
			It seems this is the only way to solve it.
			Thus, we have to manually update the version numbers here, whenever we change the C4j version number!
		-->
		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-api-jdo</artifactId>
			<version>3.1.3</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-api-jpa</artifactId>
			<version>3.1.3</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-core</artifactId>
			<version>3.1.3</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-rdbms</artifactId>
			<version>3.1.3</version>
			<scope>compile</scope>
		</dependency>
		<!-- END DataNucleus -->

		<dependency>
			<groupId>org.nightlabs.vestigo</groupId>
			<artifactId>org.nightlabs.vestigo.demo</artifactId>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>javax.jdo</groupId>
			<artifactId>jdo-api</artifactId>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>javax.persistence</artifactId>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<scope>compile</scope>
		</dependency>
<!--
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>compile</scope>
		</dependency>
-->
	</dependencies>

	<distributionManagement>
		<site>
			<id>vestigo.nightlabs.com</id>
			<url>${distributionManagement.site.prefix}/vestigo.nightlabs.com/htdocs/${project.version}/download/demo</url>
		</site>
	</distributionManagement>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<includeScope>compile</includeScope>
							<!--
							<excludeArtifactIds>
								org.cumulus4j.store.localkeystoremessagebroker
							</excludeArtifactIds>
							-->
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
					<execution>
						<id>generate-jpa-demo-data</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>org.nightlabs.vestigo.demo.cumulus4j.jpa.internal.DemoMovieDataGeneratorJPACumulus4j</mainClass>
						</configuration>
					</execution>
					<execution>
						<id>generate-jdo-demo-data</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>org.nightlabs.vestigo.demo.cumulus4j.jdo.internal.DemoMovieDataGeneratorJDOCumulus4j</mainClass>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-licence</id>
						<inherited>false</inherited>
						<configuration>
							<skip>true</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/site</outputDirectory>
							<descriptors>
								<descriptor>src/main/assembly/bin.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<executions>
					<execution>
						<id>clean-after-site</id>
						<phase>post-site</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<fileSet>
									<directory>${project.build.directory}/site</directory>
									<excludes>
										<exclude>org.nightlabs.vestigo.*</exclude>
									</excludes>
								</fileSet>
							</filesets>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
