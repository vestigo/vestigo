	---
	Data source
	---
	Marco หงุ่ยตระกูล-Schulze
	---
	2012-02-16

Data source

	A <data source> is a set of coordinates telling JJQB where to find your data and how to understand it.
	If you ever used an SQL query tool, you remember that you had to specify host name, user name, password and
	similar data. With JJQB, it's the same - you only have to specify a few additional things.

	When you set up a data source, you give it a name and can then re-use the same data source for every
	query you wish to run: You can execute every JDO query on every JDO data source; and every JPA query
	on every JPA data source likewise.
	
	A data source consists of the following coordinates:

* Classpath

	JJQB starts a {{{./jdo/persistence-manager-factory.html}JDO PersistenceManagerFactory}} or a
	{{{./jpa/entity-manager-factory.html}JPA EntityManagerFactory}}. For this to work, you have to
	tell JJQB where your data model as well as the JDO or JPA implementation (e.g. DataNucleus,
	EclipseLink, Hibernate, OpenJPA, etc.) can be found.

	Similar to the "{{{http://en.wikipedia.org/wiki/Classpath_%28Java%29}-classpath}}" argument of the <<<java>>> program,
	you specify a list of {{{http://en.wikipedia.org/wiki/JAR_%28file_format%29}JAR files}} and "classes"-directories.

	Note, that you can put {{{http://en.wikipedia.org/wiki/EAR_%28file_format%29}EAR}} or
	{{{http://en.wikipedia.org/wiki/WAR_file_format_%28Sun%29}WAR}} files into the classpath which contain other libraries.
	JJQB will automatically include all the nested JARs.

* Persistence unit

	A persistence unit groups (persistent) classes, settings and other meta-data under a name that can be used
	by the application to tell the JDO/JPA engine with which entities and which database it wants to work.
	If your data model is accompanied by a persistence unit, you should make JJQB use it.

	You can override
	settings that do not apply to the environment provided by JJQB. For example,
	{{{http://en.wikipedia.org/wiki/Java_Transaction_API}JTA}} is not available in
	JJQB. If your persistence unit specifies the usage of JTA you'll have to override this setting with the
	value 'RESOURCE_JOCAL'.

	See {{{./jdo/persistence-unit.html}JDO persistence unit}} or {{{./jpa/persistence-unit.html}JPA persistence unit}}
	for further details.

