/*
* generated by Xtext
*/
parser grammar InternalJDOQLParser;

options {
	tokenVocab=InternalJDOQLLexer;
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
	
}

@header {
package org.nightlabs.jjqb.xtext.jdoql.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.nightlabs.jjqb.xtext.jdoql.services.JDOQLGrammarAccess;

}

@members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/
 

	private JDOQLGrammarAccess grammarAccess;
	 	
	public InternalJDOQLParser(TokenStream input, JDOQLGrammarAccess grammarAccess) {
		this(input);
		this.grammarAccess = grammarAccess;
		registerRules(grammarAccess.getGrammar());
	}
	
	@Override
	protected String getFirstRuleName() {
		return "SingleStringJDOQL";	
	} 
	   	   	
	@Override
	protected JDOQLGrammarAccess getGrammarAccess() {
		return grammarAccess;
	}
}

@rulecatch { 
	catch (RecognitionException re) { 
	    recover(input,re); 
	    appendSkippedTokens();
	}
}




// Entry rule entryRuleSingleStringJDOQL
entryRuleSingleStringJDOQL returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSingleStringJDOQLRule()); }
	 iv_ruleSingleStringJDOQL=ruleSingleStringJDOQL 
	 { $current=$iv_ruleSingleStringJDOQL.current; } 
	 EOF 
;

// Rule SingleStringJDOQL
ruleSingleStringJDOQL returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSingleStringJDOQLAccess().getSelectClauseSelectClauseParserRuleCall_0_0()); 
	    }
		lv_selectClause_0_0=ruleSelectClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSingleStringJDOQLRule());
	        }
       		set(
       			$current, 
       			"selectClause",
        		lv_selectClause_0_0, 
        		"SelectClause");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSingleStringJDOQLAccess().getFromClauseFromClauseParserRuleCall_1_0()); 
	    }
		lv_fromClause_1_0=ruleFromClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSingleStringJDOQLRule());
	        }
       		set(
       			$current, 
       			"fromClause",
        		lv_fromClause_1_0, 
        		"FromClause");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSingleStringJDOQLAccess().getWhereClauseWhereClauseParserRuleCall_2_0()); 
	    }
		lv_whereClause_2_0=ruleWhereClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSingleStringJDOQLRule());
	        }
       		set(
       			$current, 
       			"whereClause",
        		lv_whereClause_2_0, 
        		"WhereClause");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSingleStringJDOQLAccess().getVariablesClauseVariablesClauseParserRuleCall_3_0()); 
	    }
		lv_variablesClause_3_0=ruleVariablesClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSingleStringJDOQLRule());
	        }
       		set(
       			$current, 
       			"variablesClause",
        		lv_variablesClause_3_0, 
        		"VariablesClause");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSingleStringJDOQLAccess().getParametersClauseParametersClauseParserRuleCall_4_0()); 
	    }
		lv_parametersClause_4_0=ruleParametersClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSingleStringJDOQLRule());
	        }
       		set(
       			$current, 
       			"parametersClause",
        		lv_parametersClause_4_0, 
        		"ParametersClause");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSingleStringJDOQLAccess().getImportClauseImportClauseParserRuleCall_5_0()); 
	    }
		lv_importClause_5_0=ruleImportClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSingleStringJDOQLRule());
	        }
       		set(
       			$current, 
       			"importClause",
        		lv_importClause_5_0, 
        		"ImportClause");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSingleStringJDOQLAccess().getGroupByClauseGroupByClauseParserRuleCall_6_0()); 
	    }
		lv_groupByClause_6_0=ruleGroupByClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSingleStringJDOQLRule());
	        }
       		set(
       			$current, 
       			"groupByClause",
        		lv_groupByClause_6_0, 
        		"GroupByClause");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSingleStringJDOQLAccess().getOrderByClauseOrderByClauseParserRuleCall_7_0()); 
	    }
		lv_orderByClause_7_0=ruleOrderByClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSingleStringJDOQLRule());
	        }
       		set(
       			$current, 
       			"orderByClause",
        		lv_orderByClause_7_0, 
        		"OrderByClause");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSingleStringJDOQLAccess().getRangeClauseRangeClauseParserRuleCall_8_0()); 
	    }
		lv_rangeClause_8_0=ruleRangeClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSingleStringJDOQLRule());
	        }
       		set(
       			$current, 
       			"rangeClause",
        		lv_rangeClause_8_0, 
        		"RangeClause");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleSubquery
entryRuleSubquery returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSubqueryRule()); }
	 iv_ruleSubquery=ruleSubquery 
	 { $current=$iv_ruleSubquery.current; } 
	 EOF 
;

// Rule Subquery
ruleSubquery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSubqueryAccess().getSelectClauseSubquerySelectClauseParserRuleCall_0_0()); 
	    }
		lv_selectClause_0_0=ruleSubquerySelectClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubqueryRule());
	        }
       		set(
       			$current, 
       			"selectClause",
        		lv_selectClause_0_0, 
        		"SubquerySelectClause");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSubqueryAccess().getFromClauseSubqueryFromClauseParserRuleCall_1_0()); 
	    }
		lv_fromClause_1_0=ruleSubqueryFromClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubqueryRule());
	        }
       		set(
       			$current, 
       			"fromClause",
        		lv_fromClause_1_0, 
        		"SubqueryFromClause");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSubqueryAccess().getWhereClauseWhereClauseParserRuleCall_2_0()); 
	    }
		lv_whereClause_2_0=ruleWhereClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubqueryRule());
	        }
       		set(
       			$current, 
       			"whereClause",
        		lv_whereClause_2_0, 
        		"WhereClause");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSubqueryAccess().getVariablesClauseVariablesClauseParserRuleCall_3_0()); 
	    }
		lv_variablesClause_3_0=ruleVariablesClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubqueryRule());
	        }
       		set(
       			$current, 
       			"variablesClause",
        		lv_variablesClause_3_0, 
        		"VariablesClause");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSubqueryAccess().getParametersClauseParametersClauseParserRuleCall_4_0()); 
	    }
		lv_parametersClause_4_0=ruleParametersClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubqueryRule());
	        }
       		set(
       			$current, 
       			"parametersClause",
        		lv_parametersClause_4_0, 
        		"ParametersClause");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSubqueryAccess().getImportClauseImportClauseParserRuleCall_5_0()); 
	    }
		lv_importClause_5_0=ruleImportClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubqueryRule());
	        }
       		set(
       			$current, 
       			"importClause",
        		lv_importClause_5_0, 
        		"ImportClause");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleSelectClause
entryRuleSelectClause returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSelectClauseRule()); }
	 iv_ruleSelectClause=ruleSelectClause 
	 { $current=$iv_ruleSelectClause.current; } 
	 EOF 
;

// Rule SelectClause
ruleSelectClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getSelectClauseAccess().getSelectClauseAction_0(),
            $current);
    }
)
	otherlv_1=KEYWORD_54
    {
    	newLeafNode(otherlv_1, grammarAccess.getSelectClauseAccess().getSELECTKeyword_1());
    }
(
(
		lv_isUnique_2_0=
	KEYWORD_55
    {
        newLeafNode(lv_isUnique_2_0, grammarAccess.getSelectClauseAccess().getIsUniqueUNIQUEKeyword_2_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSelectClauseRule());
	        }
       		setWithLastConsumed($current, "isUnique", true, "UNIQUE");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectClauseAccess().getResultClauseResultClauseParserRuleCall_3_0()); 
	    }
		lv_resultClause_3_0=ruleResultClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectClauseRule());
	        }
       		set(
       			$current, 
       			"resultClause",
        		lv_resultClause_3_0, 
        		"ResultClause");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectClauseAccess().getIntoClauseIntoClauseParserRuleCall_4_0()); 
	    }
		lv_intoClause_4_0=ruleIntoClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectClauseRule());
	        }
       		set(
       			$current, 
       			"intoClause",
        		lv_intoClause_4_0, 
        		"IntoClause");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleSubquerySelectClause
entryRuleSubquerySelectClause returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSubquerySelectClauseRule()); }
	 iv_ruleSubquerySelectClause=ruleSubquerySelectClause 
	 { $current=$iv_ruleSubquerySelectClause.current; } 
	 EOF 
;

// Rule SubquerySelectClause
ruleSubquerySelectClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getSubquerySelectClauseAccess().getSelectClauseAction_0(),
            $current);
    }
)
	otherlv_1=KEYWORD_54
    {
    	newLeafNode(otherlv_1, grammarAccess.getSubquerySelectClauseAccess().getSELECTKeyword_1());
    }
(
(
		lv_isUnique_2_0=
	KEYWORD_55
    {
        newLeafNode(lv_isUnique_2_0, grammarAccess.getSubquerySelectClauseAccess().getIsUniqueUNIQUEKeyword_2_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubquerySelectClauseRule());
	        }
       		setWithLastConsumed($current, "isUnique", true, "UNIQUE");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSubquerySelectClauseAccess().getResultClauseSubqueryResultClauseParserRuleCall_3_0()); 
	    }
		lv_resultClause_3_0=ruleSubqueryResultClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubquerySelectClauseRule());
	        }
       		set(
       			$current, 
       			"resultClause",
        		lv_resultClause_3_0, 
        		"SubqueryResultClause");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSubquerySelectClauseAccess().getIntoClauseIntoClauseParserRuleCall_4_0()); 
	    }
		lv_intoClause_4_0=ruleIntoClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubquerySelectClauseRule());
	        }
       		set(
       			$current, 
       			"intoClause",
        		lv_intoClause_4_0, 
        		"IntoClause");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleResultClause
entryRuleResultClause returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getResultClauseRule()); }
	 iv_ruleResultClause=ruleResultClause 
	 { $current=$iv_ruleResultClause.current; } 
	 EOF 
;

// Rule ResultClause
ruleResultClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_isDistinct_0_0=
	KEYWORD_71
    {
        newLeafNode(lv_isDistinct_0_0, grammarAccess.getResultClauseAccess().getIsDistinctDISTINCTKeyword_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResultClauseRule());
	        }
       		setWithLastConsumed($current, "isDistinct", true, "DISTINCT");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getResultClauseAccess().getResultSpecsResultSpecParserRuleCall_1_0()); 
	    }
		lv_resultSpecs_1_0=ruleResultSpec		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResultClauseRule());
	        }
       		add(
       			$current, 
       			"resultSpecs",
        		lv_resultSpecs_1_0, 
        		"ResultSpec");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_2=KEYWORD_8
    {
    	newLeafNode(otherlv_2, grammarAccess.getResultClauseAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getResultClauseAccess().getResultSpecsResultSpecParserRuleCall_2_1_0()); 
	    }
		lv_resultSpecs_3_0=ruleResultSpec		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResultClauseRule());
	        }
       		add(
       			$current, 
       			"resultSpecs",
        		lv_resultSpecs_3_0, 
        		"ResultSpec");
	        afterParserOrEnumRuleCall();
	    }

)
))*(
	otherlv_4=KEYWORD_8
    {
    	newLeafNode(otherlv_4, grammarAccess.getResultClauseAccess().getCommaKeyword_3());
    }
)?)
;





// Entry rule entryRuleSubqueryResultClause
entryRuleSubqueryResultClause returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSubqueryResultClauseRule()); }
	 iv_ruleSubqueryResultClause=ruleSubqueryResultClause 
	 { $current=$iv_ruleSubqueryResultClause.current; } 
	 EOF 
;

// Rule SubqueryResultClause
ruleSubqueryResultClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_isDistinct_0_0=
	KEYWORD_71
    {
        newLeafNode(lv_isDistinct_0_0, grammarAccess.getSubqueryResultClauseAccess().getIsDistinctDISTINCTKeyword_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubqueryResultClauseRule());
	        }
       		setWithLastConsumed($current, "isDistinct", true, "DISTINCT");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSubqueryResultClauseAccess().getResultExpressionConditionalOrExpressionParserRuleCall_1_0()); 
	    }
		lv_resultExpression_1_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubqueryResultClauseRule());
	        }
       		set(
       			$current, 
       			"resultExpression",
        		lv_resultExpression_1_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_2=KEYWORD_8
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubqueryResultClauseAccess().getCommaKeyword_2());
    }
)?)
;





// Entry rule entryRuleIntoClause
entryRuleIntoClause returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getIntoClauseRule()); }
	 iv_ruleIntoClause=ruleIntoClause 
	 { $current=$iv_ruleIntoClause.current; } 
	 EOF 
;

// Rule IntoClause
ruleIntoClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_35
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntoClauseAccess().getINTOKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntoClauseAccess().getResultClassNameClassOrInterfaceNameParserRuleCall_1_0()); 
	    }
		lv_resultClassName_1_0=ruleClassOrInterfaceName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntoClauseRule());
	        }
       		set(
       			$current, 
       			"resultClassName",
        		lv_resultClassName_1_0, 
        		"ClassOrInterfaceName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleResultSpec
entryRuleResultSpec returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getResultSpecRule()); }
	 iv_ruleResultSpec=ruleResultSpec 
	 { $current=$iv_ruleResultSpec.current; } 
	 EOF 
;

// Rule ResultSpec
ruleResultSpec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getResultSpecAccess().getConditionalOrExpressionParserRuleCall_0()); 
    }
    this_ConditionalOrExpression_0=ruleConditionalOrExpression
    {
        $current = $this_ConditionalOrExpression_0.current;
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getResultSpecAccess().getResultNamingResultNamingParserRuleCall_1_0()); 
	    }
		lv_resultNaming_1_0=ruleResultNaming		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResultSpecRule());
	        }
       		set(
       			$current, 
       			"resultNaming",
        		lv_resultNaming_1_0, 
        		"ResultNaming");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleResultNaming
entryRuleResultNaming returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getResultNamingRule()); }
	 iv_ruleResultNaming=ruleResultNaming 
	 { $current=$iv_ruleResultNaming.current; } 
	 EOF 
;

// Rule ResultNaming
ruleResultNaming returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_23
    {
    	newLeafNode(otherlv_0, grammarAccess.getResultNamingAccess().getASKeyword_0());
    }
(
(
		lv_identifier_1_0=RULE_ID
		{
			newLeafNode(lv_identifier_1_0, grammarAccess.getResultNamingAccess().getIdentifierIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResultNamingRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"identifier",
        		lv_identifier_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleFromClause
entryRuleFromClause returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getFromClauseRule()); }
	 iv_ruleFromClause=ruleFromClause 
	 { $current=$iv_ruleFromClause.current; } 
	 EOF 
;

// Rule FromClause
ruleFromClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_34
    {
    	newLeafNode(otherlv_0, grammarAccess.getFromClauseAccess().getFROMKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFromClauseAccess().getCandidateClassNameCandidateClassNameParserRuleCall_1_0()); 
	    }
		lv_candidateClassName_1_0=ruleCandidateClassName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFromClauseRule());
	        }
       		set(
       			$current, 
       			"candidateClassName",
        		lv_candidateClassName_1_0, 
        		"CandidateClassName");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		lv_isExcludeSubclasses_2_0=
	KEYWORD_63
    {
        newLeafNode(lv_isExcludeSubclasses_2_0, grammarAccess.getFromClauseAccess().getIsExcludeSubclassesEXCLUDEKeyword_2_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFromClauseRule());
	        }
       		setWithLastConsumed($current, "isExcludeSubclasses", true, "EXCLUDE");
	    }

)
)
	otherlv_3=KEYWORD_95
    {
    	newLeafNode(otherlv_3, grammarAccess.getFromClauseAccess().getSUBCLASSESKeyword_2_1());
    }
)?)
;





// Entry rule entryRuleSubqueryFromClause
entryRuleSubqueryFromClause returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSubqueryFromClauseRule()); }
	 iv_ruleSubqueryFromClause=ruleSubqueryFromClause 
	 { $current=$iv_ruleSubqueryFromClause.current; } 
	 EOF 
;

// Rule SubqueryFromClause
ruleSubqueryFromClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_34
    {
    	newLeafNode(otherlv_0, grammarAccess.getSubqueryFromClauseAccess().getFROMKeyword_0());
    }
((
	otherlv_1=KEYWORD_41
    {
    	newLeafNode(otherlv_1, grammarAccess.getSubqueryFromClauseAccess().getThisKeyword_1_0_0());
    }

	otherlv_2=KEYWORD_10
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubqueryFromClauseAccess().getFullStopKeyword_1_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubqueryFromClauseAccess().getFieldAccessExpressionFieldAccessExpressionParserRuleCall_1_0_2_0()); 
	    }
		lv_fieldAccessExpression_3_0=ruleFieldAccessExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubqueryFromClauseRule());
	        }
       		set(
       			$current, 
       			"fieldAccessExpression",
        		lv_fieldAccessExpression_3_0, 
        		"FieldAccessExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSubqueryFromClauseAccess().getCandidateClassNameCandidateClassNameParserRuleCall_1_1_0()); 
	    }
		lv_candidateClassName_4_0=ruleCandidateClassName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubqueryFromClauseRule());
	        }
       		set(
       			$current, 
       			"candidateClassName",
        		lv_candidateClassName_4_0, 
        		"CandidateClassName");
	        afterParserOrEnumRuleCall();
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getSubqueryFromClauseAccess().getAliasAliasParserRuleCall_2_0()); 
	    }
		lv_alias_5_0=ruleAlias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubqueryFromClauseRule());
	        }
       		set(
       			$current, 
       			"alias",
        		lv_alias_5_0, 
        		"Alias");
	        afterParserOrEnumRuleCall();
	    }

)
)?((
(
		lv_isExcludeSubclasses_6_0=
	KEYWORD_63
    {
        newLeafNode(lv_isExcludeSubclasses_6_0, grammarAccess.getSubqueryFromClauseAccess().getIsExcludeSubclassesEXCLUDEKeyword_3_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubqueryFromClauseRule());
	        }
       		setWithLastConsumed($current, "isExcludeSubclasses", true, "EXCLUDE");
	    }

)
)
	otherlv_7=KEYWORD_95
    {
    	newLeafNode(otherlv_7, grammarAccess.getSubqueryFromClauseAccess().getSUBCLASSESKeyword_3_1());
    }
)?)
;





// Entry rule entryRuleAlias
entryRuleAlias returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getAliasRule()); }
	 iv_ruleAlias=ruleAlias 
	 { $current=$iv_ruleAlias.current; } 
	 EOF 
;

// Rule Alias
ruleAlias returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_23
    {
    	newLeafNode(otherlv_0, grammarAccess.getAliasAccess().getASKeyword_0());
    }
)?(
(
		lv_identifier_1_0=RULE_ID
		{
			newLeafNode(lv_identifier_1_0, grammarAccess.getAliasAccess().getIdentifierIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAliasRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"identifier",
        		lv_identifier_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleWhereClause
entryRuleWhereClause returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getWhereClauseRule()); }
	 iv_ruleWhereClause=ruleWhereClause 
	 { $current=$iv_ruleWhereClause.current; } 
	 EOF 
;

// Rule WhereClause
ruleWhereClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_47
    {
    	newLeafNode(otherlv_0, grammarAccess.getWhereClauseAccess().getWHEREKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhereClauseAccess().getFilterConditionalOrExpressionParserRuleCall_1_0()); 
	    }
		lv_filter_1_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhereClauseRule());
	        }
       		set(
       			$current, 
       			"filter",
        		lv_filter_1_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleVariablesClause
entryRuleVariablesClause returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getVariablesClauseRule()); }
	 iv_ruleVariablesClause=ruleVariablesClause 
	 { $current=$iv_ruleVariablesClause.current; } 
	 EOF 
;

// Rule VariablesClause
ruleVariablesClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_88
    {
    	newLeafNode(otherlv_0, grammarAccess.getVariablesClauseAccess().getVARIABLESKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariablesClauseAccess().getVariableDeclarationsVariableDeclarationParserRuleCall_1_0()); 
	    }
		lv_variableDeclarations_1_0=ruleVariableDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariablesClauseRule());
	        }
       		add(
       			$current, 
       			"variableDeclarations",
        		lv_variableDeclarations_1_0, 
        		"VariableDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_2=KEYWORD_13
    {
    	newLeafNode(otherlv_2, grammarAccess.getVariablesClauseAccess().getSemicolonKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariablesClauseAccess().getVariableDeclarationsVariableDeclarationParserRuleCall_2_1_0()); 
	    }
		lv_variableDeclarations_3_0=ruleVariableDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariablesClauseRule());
	        }
       		add(
       			$current, 
       			"variableDeclarations",
        		lv_variableDeclarations_3_0, 
        		"VariableDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
))*(
	otherlv_4=KEYWORD_13
    {
    	newLeafNode(otherlv_4, grammarAccess.getVariablesClauseAccess().getSemicolonKeyword_3());
    }
)?)
;





// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getVariableDeclarationRule()); }
	 iv_ruleVariableDeclaration=ruleVariableDeclaration 
	 { $current=$iv_ruleVariableDeclaration.current; } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDeclarationAccess().getTypeTypeParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableDeclarationAccess().getVariableNameVariableNameParserRuleCall_1_0()); 
	    }
		lv_variableName_1_0=ruleVariableName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"variableName",
        		lv_variableName_1_0, 
        		"VariableName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleVariableName
entryRuleVariableName returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getVariableNameRule()); } 
	 iv_ruleVariableName=ruleVariableName 
	 { $current=$iv_ruleVariableName.current.getText(); }  
	 EOF 
;

// Rule VariableName
ruleVariableName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getVariableNameAccess().getIDTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleParametersClause
entryRuleParametersClause returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getParametersClauseRule()); }
	 iv_ruleParametersClause=ruleParametersClause 
	 { $current=$iv_ruleParametersClause.current; } 
	 EOF 
;

// Rule ParametersClause
ruleParametersClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_94
    {
    	newLeafNode(otherlv_0, grammarAccess.getParametersClauseAccess().getPARAMETERSKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParametersClauseAccess().getParameterDeclarationsParameterDeclarationParserRuleCall_1_0()); 
	    }
		lv_parameterDeclarations_1_0=ruleParameterDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParametersClauseRule());
	        }
       		add(
       			$current, 
       			"parameterDeclarations",
        		lv_parameterDeclarations_1_0, 
        		"ParameterDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_2=KEYWORD_8
    {
    	newLeafNode(otherlv_2, grammarAccess.getParametersClauseAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParametersClauseAccess().getParameterDeclarationsParameterDeclarationParserRuleCall_2_1_0()); 
	    }
		lv_parameterDeclarations_3_0=ruleParameterDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParametersClauseRule());
	        }
       		add(
       			$current, 
       			"parameterDeclarations",
        		lv_parameterDeclarations_3_0, 
        		"ParameterDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
))*(
	otherlv_4=KEYWORD_8
    {
    	newLeafNode(otherlv_4, grammarAccess.getParametersClauseAccess().getCommaKeyword_3());
    }
)?)
;





// Entry rule entryRuleParameterDeclaration
entryRuleParameterDeclaration returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getParameterDeclarationRule()); }
	 iv_ruleParameterDeclaration=ruleParameterDeclaration 
	 { $current=$iv_ruleParameterDeclaration.current; } 
	 EOF 
;

// Rule ParameterDeclaration
ruleParameterDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getParameterDeclarationAccess().getTypeTypeParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterDeclarationAccess().getDeclaredParameterNameDeclaredParameterNameParserRuleCall_1_0()); 
	    }
		lv_declaredParameterName_1_0=ruleDeclaredParameterName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterDeclarationRule());
	        }
       		set(
       			$current, 
       			"declaredParameterName",
        		lv_declaredParameterName_1_0, 
        		"DeclaredParameterName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDeclaredParameterName
entryRuleDeclaredParameterName returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getDeclaredParameterNameRule()); } 
	 iv_ruleDeclaredParameterName=ruleDeclaredParameterName 
	 { $current=$iv_ruleDeclaredParameterName.current.getText(); }  
	 EOF 
;

// Rule DeclaredParameterName
ruleDeclaredParameterName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:

    { 
        newCompositeNode(grammarAccess.getDeclaredParameterNameAccess().getParameterNameParserRuleCall()); 
    }
    this_ParameterName_0=ruleParameterName    {
		$current.merge(this_ParameterName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    ;





// Entry rule entryRuleParameterName
entryRuleParameterName returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getParameterNameRule()); } 
	 iv_ruleParameterName=ruleParameterName 
	 { $current=$iv_ruleParameterName.current.getText(); }  
	 EOF 
;

// Rule ParameterName
ruleParameterName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getParameterNameAccess().getIDTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleImportClause
entryRuleImportClause returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getImportClauseRule()); }
	 iv_ruleImportClause=ruleImportClause 
	 { $current=$iv_ruleImportClause.current; } 
	 EOF 
;

// Rule ImportClause
ruleImportClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getImportClauseAccess().getImportDeclarationsImportDeclarationParserRuleCall_0_0()); 
	    }
		lv_importDeclarations_0_0=ruleImportDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportClauseRule());
	        }
       		add(
       			$current, 
       			"importDeclarations",
        		lv_importDeclarations_0_0, 
        		"ImportDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_1=KEYWORD_13
    {
    	newLeafNode(otherlv_1, grammarAccess.getImportClauseAccess().getSemicolonKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImportClauseAccess().getImportDeclarationsImportDeclarationParserRuleCall_1_1_0()); 
	    }
		lv_importDeclarations_2_0=ruleImportDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportClauseRule());
	        }
       		add(
       			$current, 
       			"importDeclarations",
        		lv_importDeclarations_2_0, 
        		"ImportDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
))*(
	otherlv_3=KEYWORD_13
    {
    	newLeafNode(otherlv_3, grammarAccess.getImportClauseAccess().getSemicolonKeyword_2());
    }
)?)
;





// Entry rule entryRuleImportDeclaration
entryRuleImportDeclaration returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getImportDeclarationRule()); } 
	 iv_ruleImportDeclaration=ruleImportDeclaration 
	 { $current=$iv_ruleImportDeclaration.current.getText(); }  
	 EOF 
;

// Rule ImportDeclaration
ruleImportDeclaration returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(
	kw=KEYWORD_60 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getImportDeclarationAccess().getImportKeyword_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getImportDeclarationAccess().getQualifiedIdentifierParserRuleCall_1()); 
    }
    this_QualifiedIdentifier_1=ruleQualifiedIdentifier    {
		$current.merge(this_QualifiedIdentifier_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleGroupByClause
entryRuleGroupByClause returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getGroupByClauseRule()); }
	 iv_ruleGroupByClause=ruleGroupByClause 
	 { $current=$iv_ruleGroupByClause.current; } 
	 EOF 
;

// Rule GroupByClause
ruleGroupByClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_44
    {
    	newLeafNode(otherlv_0, grammarAccess.getGroupByClauseAccess().getGROUPKeyword_0());
    }

	otherlv_1=KEYWORD_24
    {
    	newLeafNode(otherlv_1, grammarAccess.getGroupByClauseAccess().getBYKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGroupByClauseAccess().getGroupingConditionalOrExpressionParserRuleCall_2_0()); 
	    }
		lv_grouping_2_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupByClauseRule());
	        }
       		add(
       			$current, 
       			"grouping",
        		lv_grouping_2_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_3=KEYWORD_8
    {
    	newLeafNode(otherlv_3, grammarAccess.getGroupByClauseAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGroupByClauseAccess().getGroupingConditionalOrExpressionParserRuleCall_3_1_0()); 
	    }
		lv_grouping_4_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupByClauseRule());
	        }
       		add(
       			$current, 
       			"grouping",
        		lv_grouping_4_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*(
	otherlv_5=KEYWORD_8
    {
    	newLeafNode(otherlv_5, grammarAccess.getGroupByClauseAccess().getCommaKeyword_4());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getGroupByClauseAccess().getHavingClauseHavingClauseParserRuleCall_5_0()); 
	    }
		lv_havingClause_6_0=ruleHavingClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupByClauseRule());
	        }
       		set(
       			$current, 
       			"havingClause",
        		lv_havingClause_6_0, 
        		"HavingClause");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleHavingClause
entryRuleHavingClause returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getHavingClauseRule()); }
	 iv_ruleHavingClause=ruleHavingClause 
	 { $current=$iv_ruleHavingClause.current; } 
	 EOF 
;

// Rule HavingClause
ruleHavingClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_53
    {
    	newLeafNode(otherlv_0, grammarAccess.getHavingClauseAccess().getHAVINGKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHavingClauseAccess().getHavingConditionalOrExpressionParserRuleCall_1_0()); 
	    }
		lv_having_1_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHavingClauseRule());
	        }
       		set(
       			$current, 
       			"having",
        		lv_having_1_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleOrderByClause
entryRuleOrderByClause returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getOrderByClauseRule()); }
	 iv_ruleOrderByClause=ruleOrderByClause 
	 { $current=$iv_ruleOrderByClause.current; } 
	 EOF 
;

// Rule OrderByClause
ruleOrderByClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_45
    {
    	newLeafNode(otherlv_0, grammarAccess.getOrderByClauseAccess().getORDERKeyword_0());
    }

	otherlv_1=KEYWORD_24
    {
    	newLeafNode(otherlv_1, grammarAccess.getOrderByClauseAccess().getBYKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrderByClauseAccess().getOrderingOrderBySpecParserRuleCall_2_0()); 
	    }
		lv_ordering_2_0=ruleOrderBySpec		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderByClauseRule());
	        }
       		add(
       			$current, 
       			"ordering",
        		lv_ordering_2_0, 
        		"OrderBySpec");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_3=KEYWORD_8
    {
    	newLeafNode(otherlv_3, grammarAccess.getOrderByClauseAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrderByClauseAccess().getOrderingOrderBySpecParserRuleCall_3_1_0()); 
	    }
		lv_ordering_4_0=ruleOrderBySpec		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderByClauseRule());
	        }
       		add(
       			$current, 
       			"ordering",
        		lv_ordering_4_0, 
        		"OrderBySpec");
	        afterParserOrEnumRuleCall();
	    }

)
))*(
	otherlv_5=KEYWORD_8
    {
    	newLeafNode(otherlv_5, grammarAccess.getOrderByClauseAccess().getCommaKeyword_4());
    }
)?)
;





// Entry rule entryRuleOrderBySpec
entryRuleOrderBySpec returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getOrderBySpecRule()); }
	 iv_ruleOrderBySpec=ruleOrderBySpec 
	 { $current=$iv_ruleOrderBySpec.current; } 
	 EOF 
;

// Rule OrderBySpec
ruleOrderBySpec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOrderBySpecAccess().getConditionalOrExpressionParserRuleCall_0()); 
    }
    this_ConditionalOrExpression_0=ruleConditionalOrExpression
    {
        $current = $this_ConditionalOrExpression_0.current;
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrderBySpecAccess().getDirectionOrderByDirectionEnumRuleCall_1_0()); 
	    }
		lv_direction_1_0=ruleOrderByDirection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderBySpecRule());
	        }
       		set(
       			$current, 
       			"direction",
        		lv_direction_1_0, 
        		"OrderByDirection");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRangeClause
entryRuleRangeClause returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getRangeClauseRule()); }
	 iv_ruleRangeClause=ruleRangeClause 
	 { $current=$iv_ruleRangeClause.current; } 
	 EOF 
;

// Rule RangeClause
ruleRangeClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_46
    {
    	newLeafNode(otherlv_0, grammarAccess.getRangeClauseAccess().getRANGEKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRangeClauseAccess().getStartConditionalOrExpressionParserRuleCall_1_0()); 
	    }
		lv_start_1_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRangeClauseRule());
	        }
       		set(
       			$current, 
       			"start",
        		lv_start_1_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_2=KEYWORD_8
    {
    	newLeafNode(otherlv_2, grammarAccess.getRangeClauseAccess().getCommaKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRangeClauseAccess().getEndConditionalOrExpressionParserRuleCall_3_0()); 
	    }
		lv_end_3_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRangeClauseRule());
	        }
       		set(
       			$current, 
       			"end",
        		lv_end_3_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleConditionalOrExpression
entryRuleConditionalOrExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getConditionalOrExpressionRule()); }
	 iv_ruleConditionalOrExpression=ruleConditionalOrExpression 
	 { $current=$iv_ruleConditionalOrExpression.current; } 
	 EOF 
;

// Rule ConditionalOrExpression
ruleConditionalOrExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConditionalOrExpressionAccess().getConditionalAndExpressionParserRuleCall_0()); 
    }
    this_ConditionalAndExpression_0=ruleConditionalAndExpression
    {
        $current = $this_ConditionalAndExpression_0.current;
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getConditionalOrExpressionAccess().getConditionalOrExpressionLeftAction_1_0(),
            $current);
    }
)
	otherlv_2=KEYWORD_25
    {
    	newLeafNode(otherlv_2, grammarAccess.getConditionalOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalOrExpressionAccess().getRightConditionalAndExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleConditionalAndExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalOrExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"ConditionalAndExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleConditionalAndExpression
entryRuleConditionalAndExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getConditionalAndExpressionRule()); }
	 iv_ruleConditionalAndExpression=ruleConditionalAndExpression 
	 { $current=$iv_ruleConditionalAndExpression.current; } 
	 EOF 
;

// Rule ConditionalAndExpression
ruleConditionalAndExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConditionalAndExpressionAccess().getSimpleOrExpressionParserRuleCall_0()); 
    }
    this_SimpleOrExpression_0=ruleSimpleOrExpression
    {
        $current = $this_SimpleOrExpression_0.current;
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getConditionalAndExpressionAccess().getConditionalAndExpressionLeftAction_1_0(),
            $current);
    }
)
	otherlv_2=KEYWORD_19
    {
    	newLeafNode(otherlv_2, grammarAccess.getConditionalAndExpressionAccess().getAmpersandAmpersandKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalAndExpressionAccess().getRightSimpleOrExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleSimpleOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalAndExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"SimpleOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleSimpleOrExpression
entryRuleSimpleOrExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSimpleOrExpressionRule()); }
	 iv_ruleSimpleOrExpression=ruleSimpleOrExpression 
	 { $current=$iv_ruleSimpleOrExpression.current; } 
	 EOF 
;

// Rule SimpleOrExpression
ruleSimpleOrExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSimpleOrExpressionAccess().getSimpleAndExpressionParserRuleCall_0()); 
    }
    this_SimpleAndExpression_0=ruleSimpleAndExpression
    {
        $current = $this_SimpleAndExpression_0.current;
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSimpleOrExpressionAccess().getSimpleOrExpressionLeftAction_1_0(),
            $current);
    }
)
	otherlv_2=KEYWORD_16
    {
    	newLeafNode(otherlv_2, grammarAccess.getSimpleOrExpressionAccess().getVerticalLineKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleOrExpressionAccess().getRightSimpleAndExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleSimpleAndExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleOrExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"SimpleAndExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleSimpleAndExpression
entryRuleSimpleAndExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSimpleAndExpressionRule()); }
	 iv_ruleSimpleAndExpression=ruleSimpleAndExpression 
	 { $current=$iv_ruleSimpleAndExpression.current; } 
	 EOF 
;

// Rule SimpleAndExpression
ruleSimpleAndExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSimpleAndExpressionAccess().getComparisonOperatorExpressionParserRuleCall_0()); 
    }
    this_ComparisonOperatorExpression_0=ruleComparisonOperatorExpression
    {
        $current = $this_ComparisonOperatorExpression_0.current;
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSimpleAndExpressionAccess().getSimpleAndExpressionLeftAction_1_0(),
            $current);
    }
)
	otherlv_2=KEYWORD_3
    {
    	newLeafNode(otherlv_2, grammarAccess.getSimpleAndExpressionAccess().getAmpersandKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleAndExpressionAccess().getRightComparisonOperatorExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleComparisonOperatorExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleAndExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"ComparisonOperatorExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleComparisonOperatorExpression
entryRuleComparisonOperatorExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getComparisonOperatorExpressionRule()); }
	 iv_ruleComparisonOperatorExpression=ruleComparisonOperatorExpression 
	 { $current=$iv_ruleComparisonOperatorExpression.current; } 
	 EOF 
;

// Rule ComparisonOperatorExpression
ruleComparisonOperatorExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getComparisonOperatorExpressionAccess().getAdditionExpressionParserRuleCall_0()); 
    }
    this_AdditionExpression_0=ruleAdditionExpression
    {
        $current = $this_AdditionExpression_0.current;
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getComparisonOperatorExpressionAccess().getComparisonOperatorExpressionLeftAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getComparisonOperatorExpressionAccess().getOperatorComparisonOperatorEnumRuleCall_1_1_0()); 
	    }
		lv_operator_2_0=ruleComparisonOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComparisonOperatorExpressionRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_2_0, 
        		"ComparisonOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getComparisonOperatorExpressionAccess().getRightAdditionExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleAdditionExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComparisonOperatorExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"AdditionExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAdditionExpression
entryRuleAdditionExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getAdditionExpressionRule()); }
	 iv_ruleAdditionExpression=ruleAdditionExpression 
	 { $current=$iv_ruleAdditionExpression.current; } 
	 EOF 
;

// Rule AdditionExpression
ruleAdditionExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAdditionExpressionAccess().getMultiplicationExpressionParserRuleCall_0()); 
    }
    this_MultiplicationExpression_0=ruleMultiplicationExpression
    {
        $current = $this_MultiplicationExpression_0.current;
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getAdditionExpressionAccess().getAdditionExpressionLeftAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditionExpressionAccess().getOperatorAdditionOperatorEnumRuleCall_1_1_0()); 
	    }
		lv_operator_2_0=ruleAdditionOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditionExpressionRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_2_0, 
        		"AdditionOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditionExpressionAccess().getRightMultiplicationExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleMultiplicationExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditionExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"MultiplicationExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleMultiplicationExpression
entryRuleMultiplicationExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getMultiplicationExpressionRule()); }
	 iv_ruleMultiplicationExpression=ruleMultiplicationExpression 
	 { $current=$iv_ruleMultiplicationExpression.current; } 
	 EOF 
;

// Rule MultiplicationExpression
ruleMultiplicationExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getMultiplicationExpressionAccess().getUnaryExpressionParserRuleCall_0()); 
    }
    this_UnaryExpression_0=ruleUnaryExpression
    {
        $current = $this_UnaryExpression_0.current;
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getMultiplicationExpressionAccess().getMultiplicationExpressionLeftAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicationExpressionAccess().getOperatorMultiplicationOperatorEnumRuleCall_1_1_0()); 
	    }
		lv_operator_2_0=ruleMultiplicationOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicationExpressionRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_2_0, 
        		"MultiplicationOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicationExpressionAccess().getRightUnaryExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleUnaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicationExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"UnaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getUnaryExpressionRule()); }
	 iv_ruleUnaryExpression=ruleUnaryExpression 
	 { $current=$iv_ruleUnaryExpression.current; } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_4
    {
    	newLeafNode(otherlv_0, grammarAccess.getUnaryExpressionAccess().getLeftParenthesisKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getCastTypeTypeParserRuleCall_0_1_0()); 
	    }
		lv_castType_1_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"castType",
        		lv_castType_1_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_2=KEYWORD_5
    {
    	newLeafNode(otherlv_2, grammarAccess.getUnaryExpressionAccess().getRightParenthesisKeyword_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getRightFieldAccessExpressionParserRuleCall_0_3_0()); 
	    }
		lv_right_3_0=ruleFieldAccessExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"FieldAccessExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getUnaryOperatorUnaryOperatorEnumRuleCall_1_0_0()); 
	    }
		lv_unaryOperator_4_0=ruleUnaryOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"unaryOperator",
        		lv_unaryOperator_4_0, 
        		"UnaryOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getRightFieldAccessExpressionParserRuleCall_1_1_0()); 
	    }
		lv_right_5_0=ruleFieldAccessExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_5_0, 
        		"FieldAccessExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleFieldAccessExpression
entryRuleFieldAccessExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getFieldAccessExpressionRule()); }
	 iv_ruleFieldAccessExpression=ruleFieldAccessExpression 
	 { $current=$iv_ruleFieldAccessExpression.current; } 
	 EOF 
;

// Rule FieldAccessExpression
ruleFieldAccessExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFieldAccessExpressionAccess().getStaticMethodExpressionParserRuleCall_0()); 
    }
    this_StaticMethodExpression_0=ruleStaticMethodExpression
    {
        $current = $this_StaticMethodExpression_0.current;
        afterParserOrEnumRuleCall();
    }

    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFieldAccessExpressionAccess().getParameterOrFieldOrMethodExpressionParserRuleCall_1_0()); 
    }
    this_ParameterOrFieldOrMethodExpression_1=ruleParameterOrFieldOrMethodExpression
    {
        $current = $this_ParameterOrFieldOrMethodExpression_1.current;
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getFieldAccessExpressionAccess().getFieldAccessExpressionLeftAction_1_1_0(),
            $current);
    }
)
	otherlv_3=KEYWORD_10
    {
    	newLeafNode(otherlv_3, grammarAccess.getFieldAccessExpressionAccess().getFullStopKeyword_1_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldAccessExpressionAccess().getRightFieldOrMethodExpressionParserRuleCall_1_1_2_0()); 
	    }
		lv_right_4_0=ruleFieldOrMethodExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldAccessExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_4_0, 
        		"FieldOrMethodExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
;





// Entry rule entryRuleParameterOrFieldOrMethodExpression
entryRuleParameterOrFieldOrMethodExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getParameterOrFieldOrMethodExpressionRule()); }
	 iv_ruleParameterOrFieldOrMethodExpression=ruleParameterOrFieldOrMethodExpression 
	 { $current=$iv_ruleParameterOrFieldOrMethodExpression.current; } 
	 EOF 
;

// Rule ParameterOrFieldOrMethodExpression
ruleParameterOrFieldOrMethodExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getLiteralLiteralParserRuleCall_0_0()); 
	    }
		lv_literal_0_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterOrFieldOrMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"literal",
        		lv_literal_0_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_this_1_0=
	KEYWORD_41
    {
        newLeafNode(lv_this_1_0, grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getThisThisKeyword_1_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterOrFieldOrMethodExpressionRule());
	        }
       		setWithLastConsumed($current, "this", lv_this_1_0, "this");
	    }

)
)
    |(
(
		lv_id_2_0=RULE_ID
		{
			newLeafNode(lv_id_2_0, grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getIdIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterOrFieldOrMethodExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_2_0, 
        		"ID");
	    }

)
)
    |(
	otherlv_3=KEYWORD_12
    {
    	newLeafNode(otherlv_3, grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getColonKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getParameterNameParameterNameParserRuleCall_3_1_0()); 
	    }
		lv_parameterName_4_0=ruleParameterName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterOrFieldOrMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"parameterName",
        		lv_parameterName_4_0, 
        		"ParameterName");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getParenthesesExpressionParserRuleCall_4()); 
    }
    this_ParenthesesExpression_5=ruleParenthesesExpression
    {
        $current = $this_ParenthesesExpression_5.current;
        afterParserOrEnumRuleCall();
    }

    |(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getMethodMethodExpressionParserRuleCall_5_0()); 
	    }
		lv_method_6_0=ruleMethodExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterOrFieldOrMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"method",
        		lv_method_6_0, 
        		"MethodExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFieldOrMethodExpression
entryRuleFieldOrMethodExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getFieldOrMethodExpressionRule()); }
	 iv_ruleFieldOrMethodExpression=ruleFieldOrMethodExpression 
	 { $current=$iv_ruleFieldOrMethodExpression.current; } 
	 EOF 
;

// Rule FieldOrMethodExpression
ruleFieldOrMethodExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFieldOrMethodExpressionAccess().getLiteralLiteralParserRuleCall_0_0()); 
	    }
		lv_literal_0_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldOrMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"literal",
        		lv_literal_0_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_this_1_0=
	KEYWORD_41
    {
        newLeafNode(lv_this_1_0, grammarAccess.getFieldOrMethodExpressionAccess().getThisThisKeyword_1_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFieldOrMethodExpressionRule());
	        }
       		setWithLastConsumed($current, "this", lv_this_1_0, "this");
	    }

)
)
    |(
(
		lv_id_2_0=RULE_ID
		{
			newLeafNode(lv_id_2_0, grammarAccess.getFieldOrMethodExpressionAccess().getIdIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFieldOrMethodExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_2_0, 
        		"ID");
	    }

)
)
    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFieldOrMethodExpressionAccess().getParenthesesExpressionParserRuleCall_3()); 
    }
    this_ParenthesesExpression_3=ruleParenthesesExpression
    {
        $current = $this_ParenthesesExpression_3.current;
        afterParserOrEnumRuleCall();
    }

    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldOrMethodExpressionAccess().getMethodMethodExpressionParserRuleCall_4_0()); 
	    }
		lv_method_4_0=ruleMethodExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldOrMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"method",
        		lv_method_4_0, 
        		"MethodExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleStaticMethodExpression
entryRuleStaticMethodExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getStaticMethodExpressionRule()); }
	 iv_ruleStaticMethodExpression=ruleStaticMethodExpression 
	 { $current=$iv_ruleStaticMethodExpression.current; } 
	 EOF 
;

// Rule StaticMethodExpression
ruleStaticMethodExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_0_0(),
            $current);
    }
)
	otherlv_1=KEYWORD_72
    {
    	newLeafNode(otherlv_1, grammarAccess.getStaticMethodExpressionAccess().getMathAbsKeyword_0_1());
    }

	otherlv_2=KEYWORD_4
    {
    	newLeafNode(otherlv_2, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_0_3_0()); 
	    }
		lv_number_3_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_3_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_4=KEYWORD_5
    {
    	newLeafNode(otherlv_4, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_0_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_1_0(),
            $current);
    }
)
	otherlv_6=KEYWORD_87
    {
    	newLeafNode(otherlv_6, grammarAccess.getStaticMethodExpressionAccess().getMathSqrtKeyword_1_1());
    }

	otherlv_7=KEYWORD_4
    {
    	newLeafNode(otherlv_7, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_1_3_0()); 
	    }
		lv_number_8_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_8_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_9=KEYWORD_5
    {
    	newLeafNode(otherlv_9, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_1_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_2_0(),
            $current);
    }
)
	otherlv_11=KEYWORD_73
    {
    	newLeafNode(otherlv_11, grammarAccess.getStaticMethodExpressionAccess().getMathCosKeyword_2_1());
    }

	otherlv_12=KEYWORD_4
    {
    	newLeafNode(otherlv_12, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_2_3_0()); 
	    }
		lv_number_13_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_13_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_14=KEYWORD_5
    {
    	newLeafNode(otherlv_14, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_2_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_3_0(),
            $current);
    }
)
	otherlv_16=KEYWORD_76
    {
    	newLeafNode(otherlv_16, grammarAccess.getStaticMethodExpressionAccess().getMathSinKeyword_3_1());
    }

	otherlv_17=KEYWORD_4
    {
    	newLeafNode(otherlv_17, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_3_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_3_3_0()); 
	    }
		lv_number_18_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_18_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_19=KEYWORD_5
    {
    	newLeafNode(otherlv_19, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_3_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_4_0(),
            $current);
    }
)
	otherlv_21=KEYWORD_77
    {
    	newLeafNode(otherlv_21, grammarAccess.getStaticMethodExpressionAccess().getMathTanKeyword_4_1());
    }

	otherlv_22=KEYWORD_4
    {
    	newLeafNode(otherlv_22, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_4_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_4_3_0()); 
	    }
		lv_number_23_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_23_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_24=KEYWORD_5
    {
    	newLeafNode(otherlv_24, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_4_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_5_0(),
            $current);
    }
)
	otherlv_26=KEYWORD_83
    {
    	newLeafNode(otherlv_26, grammarAccess.getStaticMethodExpressionAccess().getMathAcosKeyword_5_1());
    }

	otherlv_27=KEYWORD_4
    {
    	newLeafNode(otherlv_27, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_5_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_5_3_0()); 
	    }
		lv_number_28_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_28_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_29=KEYWORD_5
    {
    	newLeafNode(otherlv_29, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_5_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_6_0(),
            $current);
    }
)
	otherlv_31=KEYWORD_84
    {
    	newLeafNode(otherlv_31, grammarAccess.getStaticMethodExpressionAccess().getMathAsinKeyword_6_1());
    }

	otherlv_32=KEYWORD_4
    {
    	newLeafNode(otherlv_32, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_6_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_6_3_0()); 
	    }
		lv_number_33_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_33_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_34=KEYWORD_5
    {
    	newLeafNode(otherlv_34, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_6_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_7_0(),
            $current);
    }
)
	otherlv_36=KEYWORD_85
    {
    	newLeafNode(otherlv_36, grammarAccess.getStaticMethodExpressionAccess().getMathAtanKeyword_7_1());
    }

	otherlv_37=KEYWORD_4
    {
    	newLeafNode(otherlv_37, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_7_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_7_3_0()); 
	    }
		lv_number_38_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_38_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_39=KEYWORD_5
    {
    	newLeafNode(otherlv_39, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_7_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_8_0(),
            $current);
    }
)
	otherlv_41=KEYWORD_86
    {
    	newLeafNode(otherlv_41, grammarAccess.getStaticMethodExpressionAccess().getMathCeilKeyword_8_1());
    }

	otherlv_42=KEYWORD_4
    {
    	newLeafNode(otherlv_42, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_8_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_8_3_0()); 
	    }
		lv_number_43_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_43_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_44=KEYWORD_5
    {
    	newLeafNode(otherlv_44, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_8_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_9_0(),
            $current);
    }
)
	otherlv_46=KEYWORD_74
    {
    	newLeafNode(otherlv_46, grammarAccess.getStaticMethodExpressionAccess().getMathExpKeyword_9_1());
    }

	otherlv_47=KEYWORD_4
    {
    	newLeafNode(otherlv_47, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_9_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_9_3_0()); 
	    }
		lv_number_48_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_48_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_49=KEYWORD_5
    {
    	newLeafNode(otherlv_49, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_9_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_10_0(),
            $current);
    }
)
	otherlv_51=KEYWORD_93
    {
    	newLeafNode(otherlv_51, grammarAccess.getStaticMethodExpressionAccess().getMathFloorKeyword_10_1());
    }

	otherlv_52=KEYWORD_4
    {
    	newLeafNode(otherlv_52, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_10_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_10_3_0()); 
	    }
		lv_number_53_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_53_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_54=KEYWORD_5
    {
    	newLeafNode(otherlv_54, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_10_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_11_0(),
            $current);
    }
)
	otherlv_56=KEYWORD_75
    {
    	newLeafNode(otherlv_56, grammarAccess.getStaticMethodExpressionAccess().getMathLogKeyword_11_1());
    }

	otherlv_57=KEYWORD_4
    {
    	newLeafNode(otherlv_57, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_11_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_11_3_0()); 
	    }
		lv_number_58_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_58_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_59=KEYWORD_5
    {
    	newLeafNode(otherlv_59, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_11_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_12_0(),
            $current);
    }
)
	otherlv_61=KEYWORD_113
    {
    	newLeafNode(otherlv_61, grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathAbsKeyword_12_1());
    }

	otherlv_62=KEYWORD_4
    {
    	newLeafNode(otherlv_62, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_12_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_12_3_0()); 
	    }
		lv_number_63_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_63_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_64=KEYWORD_5
    {
    	newLeafNode(otherlv_64, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_12_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_13_0(),
            $current);
    }
)
	otherlv_66=KEYWORD_124
    {
    	newLeafNode(otherlv_66, grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathSqrtKeyword_13_1());
    }

	otherlv_67=KEYWORD_4
    {
    	newLeafNode(otherlv_67, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_13_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_13_3_0()); 
	    }
		lv_number_68_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_68_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_69=KEYWORD_5
    {
    	newLeafNode(otherlv_69, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_13_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_14_0(),
            $current);
    }
)
	otherlv_71=KEYWORD_114
    {
    	newLeafNode(otherlv_71, grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathCosKeyword_14_1());
    }

	otherlv_72=KEYWORD_4
    {
    	newLeafNode(otherlv_72, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_14_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_14_3_0()); 
	    }
		lv_number_73_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_73_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_74=KEYWORD_5
    {
    	newLeafNode(otherlv_74, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_14_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_15_0(),
            $current);
    }
)
	otherlv_76=KEYWORD_117
    {
    	newLeafNode(otherlv_76, grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathSinKeyword_15_1());
    }

	otherlv_77=KEYWORD_4
    {
    	newLeafNode(otherlv_77, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_15_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_15_3_0()); 
	    }
		lv_number_78_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_78_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_79=KEYWORD_5
    {
    	newLeafNode(otherlv_79, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_15_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_16_0(),
            $current);
    }
)
	otherlv_81=KEYWORD_118
    {
    	newLeafNode(otherlv_81, grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathTanKeyword_16_1());
    }

	otherlv_82=KEYWORD_4
    {
    	newLeafNode(otherlv_82, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_16_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_16_3_0()); 
	    }
		lv_number_83_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_83_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_84=KEYWORD_5
    {
    	newLeafNode(otherlv_84, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_16_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_17_0(),
            $current);
    }
)
	otherlv_86=KEYWORD_120
    {
    	newLeafNode(otherlv_86, grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathAcosKeyword_17_1());
    }

	otherlv_87=KEYWORD_4
    {
    	newLeafNode(otherlv_87, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_17_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_17_3_0()); 
	    }
		lv_number_88_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_88_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_89=KEYWORD_5
    {
    	newLeafNode(otherlv_89, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_17_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_18_0(),
            $current);
    }
)
	otherlv_91=KEYWORD_121
    {
    	newLeafNode(otherlv_91, grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathAsinKeyword_18_1());
    }

	otherlv_92=KEYWORD_4
    {
    	newLeafNode(otherlv_92, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_18_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_18_3_0()); 
	    }
		lv_number_93_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_93_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_94=KEYWORD_5
    {
    	newLeafNode(otherlv_94, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_18_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_19_0(),
            $current);
    }
)
	otherlv_96=KEYWORD_122
    {
    	newLeafNode(otherlv_96, grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathAtanKeyword_19_1());
    }

	otherlv_97=KEYWORD_4
    {
    	newLeafNode(otherlv_97, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_19_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_19_3_0()); 
	    }
		lv_number_98_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_98_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_99=KEYWORD_5
    {
    	newLeafNode(otherlv_99, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_19_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_20_0(),
            $current);
    }
)
	otherlv_101=KEYWORD_123
    {
    	newLeafNode(otherlv_101, grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathCeilKeyword_20_1());
    }

	otherlv_102=KEYWORD_4
    {
    	newLeafNode(otherlv_102, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_20_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_20_3_0()); 
	    }
		lv_number_103_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_103_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_104=KEYWORD_5
    {
    	newLeafNode(otherlv_104, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_20_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_21_0(),
            $current);
    }
)
	otherlv_106=KEYWORD_115
    {
    	newLeafNode(otherlv_106, grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathExpKeyword_21_1());
    }

	otherlv_107=KEYWORD_4
    {
    	newLeafNode(otherlv_107, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_21_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_21_3_0()); 
	    }
		lv_number_108_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_108_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_109=KEYWORD_5
    {
    	newLeafNode(otherlv_109, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_21_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_22_0(),
            $current);
    }
)
	otherlv_111=KEYWORD_126
    {
    	newLeafNode(otherlv_111, grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathFloorKeyword_22_1());
    }

	otherlv_112=KEYWORD_4
    {
    	newLeafNode(otherlv_112, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_22_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_22_3_0()); 
	    }
		lv_number_113_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_113_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_114=KEYWORD_5
    {
    	newLeafNode(otherlv_114, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_22_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_23_0(),
            $current);
    }
)
	otherlv_116=KEYWORD_116
    {
    	newLeafNode(otherlv_116, grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathLogKeyword_23_1());
    }

	otherlv_117=KEYWORD_4
    {
    	newLeafNode(otherlv_117, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_23_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_23_3_0()); 
	    }
		lv_number_118_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_118_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_119=KEYWORD_5
    {
    	newLeafNode(otherlv_119, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_23_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_24_0(),
            $current);
    }
)
	otherlv_121=KEYWORD_127
    {
    	newLeafNode(otherlv_121, grammarAccess.getStaticMethodExpressionAccess().getJDOHelperGetObjectIdKeyword_24_1());
    }

	otherlv_122=KEYWORD_4
    {
    	newLeafNode(otherlv_122, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_24_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getPersistableConditionalOrExpressionParserRuleCall_24_3_0()); 
	    }
		lv_persistable_123_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"persistable",
        		lv_persistable_123_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_124=KEYWORD_5
    {
    	newLeafNode(otherlv_124, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_24_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_25_0(),
            $current);
    }
)
	otherlv_126=KEYWORD_125
    {
    	newLeafNode(otherlv_126, grammarAccess.getStaticMethodExpressionAccess().getJDOHelperGetVersionKeyword_25_1());
    }

	otherlv_127=KEYWORD_4
    {
    	newLeafNode(otherlv_127, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_25_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getPersistableConditionalOrExpressionParserRuleCall_25_3_0()); 
	    }
		lv_persistable_128_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"persistable",
        		lv_persistable_128_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_129=KEYWORD_5
    {
    	newLeafNode(otherlv_129, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_25_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_26_0(),
            $current);
    }
)
	otherlv_131=KEYWORD_129
    {
    	newLeafNode(otherlv_131, grammarAccess.getStaticMethodExpressionAccess().getJavaxJdoJDOHelperGetObjectIdKeyword_26_1());
    }

	otherlv_132=KEYWORD_4
    {
    	newLeafNode(otherlv_132, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_26_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getPersistableConditionalOrExpressionParserRuleCall_26_3_0()); 
	    }
		lv_persistable_133_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"persistable",
        		lv_persistable_133_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_134=KEYWORD_5
    {
    	newLeafNode(otherlv_134, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_26_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_27_0(),
            $current);
    }
)
	otherlv_136=KEYWORD_128
    {
    	newLeafNode(otherlv_136, grammarAccess.getStaticMethodExpressionAccess().getJavaxJdoJDOHelperGetVersionKeyword_27_1());
    }

	otherlv_137=KEYWORD_4
    {
    	newLeafNode(otherlv_137, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_27_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getPersistableConditionalOrExpressionParserRuleCall_27_3_0()); 
	    }
		lv_persistable_138_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"persistable",
        		lv_persistable_138_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_139=KEYWORD_5
    {
    	newLeafNode(otherlv_139, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_27_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_28_0(),
            $current);
    }
)
	otherlv_141=KEYWORD_48
    {
    	newLeafNode(otherlv_141, grammarAccess.getStaticMethodExpressionAccess().getCountKeyword_28_1());
    }

	otherlv_142=KEYWORD_4
    {
    	newLeafNode(otherlv_142, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_28_2());
    }
(
(
		lv_isDistinct_143_0=
	KEYWORD_71
    {
        newLeafNode(lv_isDistinct_143_0, grammarAccess.getStaticMethodExpressionAccess().getIsDistinctDISTINCTKeyword_28_3_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStaticMethodExpressionRule());
	        }
       		setWithLastConsumed($current, "isDistinct", true, "DISTINCT");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getAggregateArgumentConditionalOrExpressionParserRuleCall_28_4_0()); 
	    }
		lv_aggregateArgument_144_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"aggregateArgument",
        		lv_aggregateArgument_144_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_145=KEYWORD_5
    {
    	newLeafNode(otherlv_145, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_28_5());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_29_0(),
            $current);
    }
)
	otherlv_147=KEYWORD_32
    {
    	newLeafNode(otherlv_147, grammarAccess.getStaticMethodExpressionAccess().getSumKeyword_29_1());
    }

	otherlv_148=KEYWORD_4
    {
    	newLeafNode(otherlv_148, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_29_2());
    }
(
(
		lv_isDistinct_149_0=
	KEYWORD_71
    {
        newLeafNode(lv_isDistinct_149_0, grammarAccess.getStaticMethodExpressionAccess().getIsDistinctDISTINCTKeyword_29_3_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStaticMethodExpressionRule());
	        }
       		setWithLastConsumed($current, "isDistinct", true, "DISTINCT");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getAggregateArgumentConditionalOrExpressionParserRuleCall_29_4_0()); 
	    }
		lv_aggregateArgument_150_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"aggregateArgument",
        		lv_aggregateArgument_150_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_151=KEYWORD_5
    {
    	newLeafNode(otherlv_151, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_29_5());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_30_0(),
            $current);
    }
)
	otherlv_153=KEYWORD_31
    {
    	newLeafNode(otherlv_153, grammarAccess.getStaticMethodExpressionAccess().getMinKeyword_30_1());
    }

	otherlv_154=KEYWORD_4
    {
    	newLeafNode(otherlv_154, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_30_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getAggregateArgumentConditionalOrExpressionParserRuleCall_30_3_0()); 
	    }
		lv_aggregateArgument_155_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"aggregateArgument",
        		lv_aggregateArgument_155_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_156=KEYWORD_5
    {
    	newLeafNode(otherlv_156, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_30_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_31_0(),
            $current);
    }
)
	otherlv_158=KEYWORD_30
    {
    	newLeafNode(otherlv_158, grammarAccess.getStaticMethodExpressionAccess().getMaxKeyword_31_1());
    }

	otherlv_159=KEYWORD_4
    {
    	newLeafNode(otherlv_159, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_31_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getAggregateArgumentConditionalOrExpressionParserRuleCall_31_3_0()); 
	    }
		lv_aggregateArgument_160_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"aggregateArgument",
        		lv_aggregateArgument_160_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_161=KEYWORD_5
    {
    	newLeafNode(otherlv_161, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_31_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_32_0(),
            $current);
    }
)
	otherlv_163=KEYWORD_27
    {
    	newLeafNode(otherlv_163, grammarAccess.getStaticMethodExpressionAccess().getAvgKeyword_32_1());
    }

	otherlv_164=KEYWORD_4
    {
    	newLeafNode(otherlv_164, grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_32_2());
    }
(
(
		lv_isDistinct_165_0=
	KEYWORD_71
    {
        newLeafNode(lv_isDistinct_165_0, grammarAccess.getStaticMethodExpressionAccess().getIsDistinctDISTINCTKeyword_32_3_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStaticMethodExpressionRule());
	        }
       		setWithLastConsumed($current, "isDistinct", true, "DISTINCT");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticMethodExpressionAccess().getAggregateArgumentConditionalOrExpressionParserRuleCall_32_4_0()); 
	    }
		lv_aggregateArgument_166_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"aggregateArgument",
        		lv_aggregateArgument_166_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_167=KEYWORD_5
    {
    	newLeafNode(otherlv_167, grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_32_5());
    }
))
;





// Entry rule entryRuleMethodExpression
entryRuleMethodExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getMethodExpressionRule()); }
	 iv_ruleMethodExpression=ruleMethodExpression 
	 { $current=$iv_ruleMethodExpression.current; } 
	 EOF 
;

// Rule MethodExpression
ruleMethodExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodExpressionAccess().getExpressionAction_0_0(),
            $current);
    }
)
	otherlv_1=KEYWORD_78
    {
    	newLeafNode(otherlv_1, grammarAccess.getMethodExpressionAccess().getContainsKeyword_0_1());
    }

	otherlv_2=KEYWORD_4
    {
    	newLeafNode(otherlv_2, grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodExpressionAccess().getElementConditionalOrExpressionParserRuleCall_0_3_0()); 
	    }
		lv_element_3_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_3_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_4=KEYWORD_5
    {
    	newLeafNode(otherlv_4, grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_0_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodExpressionAccess().getExpressionAction_1_0(),
            $current);
    }
)
	otherlv_6=KEYWORD_28
    {
    	newLeafNode(otherlv_6, grammarAccess.getMethodExpressionAccess().getGetKeyword_1_1());
    }

	otherlv_7=KEYWORD_4
    {
    	newLeafNode(otherlv_7, grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodExpressionAccess().getArgConditionalOrExpressionParserRuleCall_1_3_0()); 
	    }
		lv_arg_8_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"arg",
        		lv_arg_8_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_9=KEYWORD_5
    {
    	newLeafNode(otherlv_9, grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_1_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodExpressionAccess().getExpressionAction_2_0(),
            $current);
    }
)
	otherlv_11=KEYWORD_68
    {
    	newLeafNode(otherlv_11, grammarAccess.getMethodExpressionAccess().getIsEmptyKeyword_2_1());
    }

	otherlv_12=KEYWORD_4
    {
    	newLeafNode(otherlv_12, grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_2_2());
    }

	otherlv_13=KEYWORD_5
    {
    	newLeafNode(otherlv_13, grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_2_3());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodExpressionAccess().getExpressionAction_3_0(),
            $current);
    }
)
	otherlv_15=KEYWORD_40
    {
    	newLeafNode(otherlv_15, grammarAccess.getMethodExpressionAccess().getSizeKeyword_3_1());
    }

	otherlv_16=KEYWORD_4
    {
    	newLeafNode(otherlv_16, grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_3_2());
    }

	otherlv_17=KEYWORD_5
    {
    	newLeafNode(otherlv_17, grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_3_3());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodExpressionAccess().getExpressionAction_4_0(),
            $current);
    }
)
	otherlv_19=KEYWORD_99
    {
    	newLeafNode(otherlv_19, grammarAccess.getMethodExpressionAccess().getContainsKeyKeyword_4_1());
    }

	otherlv_20=KEYWORD_4
    {
    	newLeafNode(otherlv_20, grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_4_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodExpressionAccess().getKeyConditionalOrExpressionParserRuleCall_4_3_0()); 
	    }
		lv_key_21_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"key",
        		lv_key_21_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_22=KEYWORD_5
    {
    	newLeafNode(otherlv_22, grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_4_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodExpressionAccess().getExpressionAction_5_0(),
            $current);
    }
)
	otherlv_24=KEYWORD_103
    {
    	newLeafNode(otherlv_24, grammarAccess.getMethodExpressionAccess().getContainsValueKeyword_5_1());
    }

	otherlv_25=KEYWORD_4
    {
    	newLeafNode(otherlv_25, grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_5_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodExpressionAccess().getValueConditionalOrExpressionParserRuleCall_5_3_0()); 
	    }
		lv_value_26_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_26_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_27=KEYWORD_5
    {
    	newLeafNode(otherlv_27, grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_5_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodExpressionAccess().getExpressionAction_6_0(),
            $current);
    }
)
	otherlv_29=KEYWORD_102
    {
    	newLeafNode(otherlv_29, grammarAccess.getMethodExpressionAccess().getContainsEntryKeyword_6_1());
    }

	otherlv_30=KEYWORD_4
    {
    	newLeafNode(otherlv_30, grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_6_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodExpressionAccess().getKeyConditionalOrExpressionParserRuleCall_6_3_0()); 
	    }
		lv_key_31_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"key",
        		lv_key_31_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_32=KEYWORD_8
    {
    	newLeafNode(otherlv_32, grammarAccess.getMethodExpressionAccess().getCommaKeyword_6_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodExpressionAccess().getValueConditionalOrExpressionParserRuleCall_6_5_0()); 
	    }
		lv_value_33_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_33_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_34=KEYWORD_5
    {
    	newLeafNode(otherlv_34, grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_6_6());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodExpressionAccess().getExpressionAction_7_0(),
            $current);
    }
)
	otherlv_36=KEYWORD_56
    {
    	newLeafNode(otherlv_36, grammarAccess.getMethodExpressionAccess().getCharAtKeyword_7_1());
    }

	otherlv_37=KEYWORD_4
    {
    	newLeafNode(otherlv_37, grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_7_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodExpressionAccess().getIndexConditionalOrExpressionParserRuleCall_7_3_0()); 
	    }
		lv_index_38_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"index",
        		lv_index_38_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_39=KEYWORD_5
    {
    	newLeafNode(otherlv_39, grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_7_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodExpressionAccess().getExpressionAction_8_0(),
            $current);
    }
)
	otherlv_41=KEYWORD_79
    {
    	newLeafNode(otherlv_41, grammarAccess.getMethodExpressionAccess().getEndsWithKeyword_8_1());
    }

	otherlv_42=KEYWORD_4
    {
    	newLeafNode(otherlv_42, grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_8_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodExpressionAccess().getStringConditionalOrExpressionParserRuleCall_8_3_0()); 
	    }
		lv_string_43_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"string",
        		lv_string_43_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_44=KEYWORD_5
    {
    	newLeafNode(otherlv_44, grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_8_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodExpressionAccess().getExpressionAction_9_0(),
            $current);
    }
)
	otherlv_46=KEYWORD_58
    {
    	newLeafNode(otherlv_46, grammarAccess.getMethodExpressionAccess().getEqualsKeyword_9_1());
    }

	otherlv_47=KEYWORD_4
    {
    	newLeafNode(otherlv_47, grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_9_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodExpressionAccess().getStringConditionalOrExpressionParserRuleCall_9_3_0()); 
	    }
		lv_string_48_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"string",
        		lv_string_48_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_49=KEYWORD_5
    {
    	newLeafNode(otherlv_49, grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_9_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodExpressionAccess().getExpressionAction_10_0(),
            $current);
    }
)
	otherlv_51=KEYWORD_108
    {
    	newLeafNode(otherlv_51, grammarAccess.getMethodExpressionAccess().getEqualsIgnoreCaseKeyword_10_1());
    }

	otherlv_52=KEYWORD_4
    {
    	newLeafNode(otherlv_52, grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_10_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodExpressionAccess().getStringConditionalOrExpressionParserRuleCall_10_3_0()); 
	    }
		lv_string_53_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"string",
        		lv_string_53_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_54=KEYWORD_5
    {
    	newLeafNode(otherlv_54, grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_10_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodExpressionAccess().getExpressionAction_11_0(),
            $current);
    }
)
	otherlv_56=KEYWORD_67
    {
    	newLeafNode(otherlv_56, grammarAccess.getMethodExpressionAccess().getIndexOfKeyword_11_1());
    }

	otherlv_57=KEYWORD_4
    {
    	newLeafNode(otherlv_57, grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_11_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodExpressionAccess().getStringConditionalOrExpressionParserRuleCall_11_3_0()); 
	    }
		lv_string_58_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"string",
        		lv_string_58_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_59=KEYWORD_8
    {
    	newLeafNode(otherlv_59, grammarAccess.getMethodExpressionAccess().getCommaKeyword_11_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodExpressionAccess().getFromIndexConditionalOrExpressionParserRuleCall_11_4_1_0()); 
	    }
		lv_fromIndex_60_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"fromIndex",
        		lv_fromIndex_60_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?
	otherlv_61=KEYWORD_5
    {
    	newLeafNode(otherlv_61, grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_11_5());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodExpressionAccess().getExpressionAction_12_0(),
            $current);
    }
)
	otherlv_63=KEYWORD_62
    {
    	newLeafNode(otherlv_63, grammarAccess.getMethodExpressionAccess().getLengthKeyword_12_1());
    }

	otherlv_64=KEYWORD_4
    {
    	newLeafNode(otherlv_64, grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_12_2());
    }

	otherlv_65=KEYWORD_5
    {
    	newLeafNode(otherlv_65, grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_12_3());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodExpressionAccess().getExpressionAction_13_0(),
            $current);
    }
)
	otherlv_67=KEYWORD_69
    {
    	newLeafNode(otherlv_67, grammarAccess.getMethodExpressionAccess().getMatchesKeyword_13_1());
    }

	otherlv_68=KEYWORD_4
    {
    	newLeafNode(otherlv_68, grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_13_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodExpressionAccess().getRegexConditionalOrExpressionParserRuleCall_13_3_0()); 
	    }
		lv_regex_69_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"regex",
        		lv_regex_69_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_70=KEYWORD_5
    {
    	newLeafNode(otherlv_70, grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_13_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodExpressionAccess().getExpressionAction_14_0(),
            $current);
    }
)
	otherlv_72=KEYWORD_97
    {
    	newLeafNode(otherlv_72, grammarAccess.getMethodExpressionAccess().getReplaceAllKeyword_14_1());
    }

	otherlv_73=KEYWORD_4
    {
    	newLeafNode(otherlv_73, grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_14_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodExpressionAccess().getRegexConditionalOrExpressionParserRuleCall_14_3_0()); 
	    }
		lv_regex_74_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"regex",
        		lv_regex_74_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_75=KEYWORD_8
    {
    	newLeafNode(otherlv_75, grammarAccess.getMethodExpressionAccess().getCommaKeyword_14_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodExpressionAccess().getReplacementConditionalOrExpressionParserRuleCall_14_5_0()); 
	    }
		lv_replacement_76_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"replacement",
        		lv_replacement_76_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_77=KEYWORD_5
    {
    	newLeafNode(otherlv_77, grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_14_6());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodExpressionAccess().getExpressionAction_15_0(),
            $current);
    }
)
	otherlv_79=KEYWORD_98
    {
    	newLeafNode(otherlv_79, grammarAccess.getMethodExpressionAccess().getStartsWithKeyword_15_1());
    }

	otherlv_80=KEYWORD_4
    {
    	newLeafNode(otherlv_80, grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_15_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodExpressionAccess().getStringConditionalOrExpressionParserRuleCall_15_3_0()); 
	    }
		lv_string_81_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"string",
        		lv_string_81_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_82=KEYWORD_5
    {
    	newLeafNode(otherlv_82, grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_15_4());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodExpressionAccess().getExpressionAction_16_0(),
            $current);
    }
)
	otherlv_84=KEYWORD_91
    {
    	newLeafNode(otherlv_84, grammarAccess.getMethodExpressionAccess().getSubstringKeyword_16_1());
    }

	otherlv_85=KEYWORD_4
    {
    	newLeafNode(otherlv_85, grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_16_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodExpressionAccess().getBeginIndexConditionalOrExpressionParserRuleCall_16_3_0()); 
	    }
		lv_beginIndex_86_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"beginIndex",
        		lv_beginIndex_86_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_87=KEYWORD_8
    {
    	newLeafNode(otherlv_87, grammarAccess.getMethodExpressionAccess().getCommaKeyword_16_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodExpressionAccess().getEndIndexConditionalOrExpressionParserRuleCall_16_4_1_0()); 
	    }
		lv_endIndex_88_0=ruleConditionalOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodExpressionRule());
	        }
       		set(
       			$current, 
       			"endIndex",
        		lv_endIndex_88_0, 
        		"ConditionalOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?
	otherlv_89=KEYWORD_5
    {
    	newLeafNode(otherlv_89, grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_16_5());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodExpressionAccess().getExpressionAction_17_0(),
            $current);
    }
)
	otherlv_91=KEYWORD_100
    {
    	newLeafNode(otherlv_91, grammarAccess.getMethodExpressionAccess().getToLowerCaseKeyword_17_1());
    }

	otherlv_92=KEYWORD_4
    {
    	newLeafNode(otherlv_92, grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_17_2());
    }

	otherlv_93=KEYWORD_5
    {
    	newLeafNode(otherlv_93, grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_17_3());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodExpressionAccess().getExpressionAction_18_0(),
            $current);
    }
)
	otherlv_95=KEYWORD_101
    {
    	newLeafNode(otherlv_95, grammarAccess.getMethodExpressionAccess().getToUpperCaseKeyword_18_1());
    }

	otherlv_96=KEYWORD_4
    {
    	newLeafNode(otherlv_96, grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_18_2());
    }

	otherlv_97=KEYWORD_5
    {
    	newLeafNode(otherlv_97, grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_18_3());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodExpressionAccess().getExpressionAction_19_0(),
            $current);
    }
)
	otherlv_99=KEYWORD_42
    {
    	newLeafNode(otherlv_99, grammarAccess.getMethodExpressionAccess().getTrimKeyword_19_1());
    }

	otherlv_100=KEYWORD_4
    {
    	newLeafNode(otherlv_100, grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_19_2());
    }

	otherlv_101=KEYWORD_5
    {
    	newLeafNode(otherlv_101, grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_19_3());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodExpressionAccess().getExpressionAction_20_0(),
            $current);
    }
)
	otherlv_103=KEYWORD_59
    {
    	newLeafNode(otherlv_103, grammarAccess.getMethodExpressionAccess().getGetDayKeyword_20_1());
    }

	otherlv_104=KEYWORD_4
    {
    	newLeafNode(otherlv_104, grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_20_2());
    }

	otherlv_105=KEYWORD_5
    {
    	newLeafNode(otherlv_105, grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_20_3());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodExpressionAccess().getExpressionAction_21_0(),
            $current);
    }
)
	otherlv_107=KEYWORD_80
    {
    	newLeafNode(otherlv_107, grammarAccess.getMethodExpressionAccess().getGetMonthKeyword_21_1());
    }

	otherlv_108=KEYWORD_4
    {
    	newLeafNode(otherlv_108, grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_21_2());
    }

	otherlv_109=KEYWORD_5
    {
    	newLeafNode(otherlv_109, grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_21_3());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodExpressionAccess().getExpressionAction_22_0(),
            $current);
    }
)
	otherlv_111=KEYWORD_66
    {
    	newLeafNode(otherlv_111, grammarAccess.getMethodExpressionAccess().getGetYearKeyword_22_1());
    }

	otherlv_112=KEYWORD_4
    {
    	newLeafNode(otherlv_112, grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_22_2());
    }

	otherlv_113=KEYWORD_5
    {
    	newLeafNode(otherlv_113, grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_22_3());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodExpressionAccess().getExpressionAction_23_0(),
            $current);
    }
)
	otherlv_115=KEYWORD_65
    {
    	newLeafNode(otherlv_115, grammarAccess.getMethodExpressionAccess().getGetHourKeyword_23_1());
    }

	otherlv_116=KEYWORD_4
    {
    	newLeafNode(otherlv_116, grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_23_2());
    }

	otherlv_117=KEYWORD_5
    {
    	newLeafNode(otherlv_117, grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_23_3());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodExpressionAccess().getExpressionAction_24_0(),
            $current);
    }
)
	otherlv_119=KEYWORD_89
    {
    	newLeafNode(otherlv_119, grammarAccess.getMethodExpressionAccess().getGetMinuteKeyword_24_1());
    }

	otherlv_120=KEYWORD_4
    {
    	newLeafNode(otherlv_120, grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_24_2());
    }

	otherlv_121=KEYWORD_5
    {
    	newLeafNode(otherlv_121, grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_24_3());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodExpressionAccess().getExpressionAction_25_0(),
            $current);
    }
)
	otherlv_123=KEYWORD_90
    {
    	newLeafNode(otherlv_123, grammarAccess.getMethodExpressionAccess().getGetSecondKeyword_25_1());
    }

	otherlv_124=KEYWORD_4
    {
    	newLeafNode(otherlv_124, grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_25_2());
    }

	otherlv_125=KEYWORD_5
    {
    	newLeafNode(otherlv_125, grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_25_3());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodExpressionAccess().getExpressionAction_26_0(),
            $current);
    }
)
	otherlv_127=KEYWORD_70
    {
    	newLeafNode(otherlv_127, grammarAccess.getMethodExpressionAccess().getOrdinalKeyword_26_1());
    }

	otherlv_128=KEYWORD_4
    {
    	newLeafNode(otherlv_128, grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_26_2());
    }

	otherlv_129=KEYWORD_5
    {
    	newLeafNode(otherlv_129, grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_26_3());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodExpressionAccess().getExpressionAction_27_0(),
            $current);
    }
)
	otherlv_131=KEYWORD_81
    {
    	newLeafNode(otherlv_131, grammarAccess.getMethodExpressionAccess().getToStringKeyword_27_1());
    }

	otherlv_132=KEYWORD_4
    {
    	newLeafNode(otherlv_132, grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_27_2());
    }

	otherlv_133=KEYWORD_5
    {
    	newLeafNode(otherlv_133, grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_27_3());
    }
))
;





// Entry rule entryRuleParenthesesExpression
entryRuleParenthesesExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getParenthesesExpressionRule()); }
	 iv_ruleParenthesesExpression=ruleParenthesesExpression 
	 { $current=$iv_ruleParenthesesExpression.current; } 
	 EOF 
;

// Rule ParenthesesExpression
ruleParenthesesExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_4
    {
    	newLeafNode(otherlv_0, grammarAccess.getParenthesesExpressionAccess().getLeftParenthesisKeyword_0());
    }
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getParenthesesExpressionAccess().getConditionalOrExpressionParserRuleCall_1_0()); 
    }
    this_ConditionalOrExpression_1=ruleConditionalOrExpression
    {
        $current = $this_ConditionalOrExpression_1.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getParenthesesExpressionAccess().getSubqueryParserRuleCall_1_1()); 
    }
    this_Subquery_2=ruleSubquery
    {
        $current = $this_Subquery_2.current;
        afterParserOrEnumRuleCall();
    }
)
	otherlv_3=KEYWORD_5
    {
    	newLeafNode(otherlv_3, grammarAccess.getParenthesesExpressionAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleType
entryRuleType returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getTypeRule()); } 
	 iv_ruleType=ruleType 
	 { $current=$iv_ruleType.current.getText(); }  
	 EOF 
;

// Rule Type
ruleType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getPrimitiveTypeParserRuleCall_0()); 
    }
    this_PrimitiveType_0=rulePrimitiveType    {
		$current.merge(this_PrimitiveType_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getClassOrInterfaceNameParserRuleCall_1()); 
    }
    this_ClassOrInterfaceName_1=ruleClassOrInterfaceName    {
		$current.merge(this_ClassOrInterfaceName_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRulePrimitiveType
entryRulePrimitiveType returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getPrimitiveTypeRule()); } 
	 iv_rulePrimitiveType=rulePrimitiveType 
	 { $current=$iv_rulePrimitiveType.current.getText(); }  
	 EOF 
;

// Rule PrimitiveType
rulePrimitiveType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(
    { 
        newCompositeNode(grammarAccess.getPrimitiveTypeAccess().getNumericTypeParserRuleCall_0()); 
    }
    this_NumericType_0=ruleNumericType    {
		$current.merge(this_NumericType_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
	kw=KEYWORD_64 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPrimitiveTypeAccess().getBooleanKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleNumericType
entryRuleNumericType returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getNumericTypeRule()); } 
	 iv_ruleNumericType=ruleNumericType 
	 { $current=$iv_ruleNumericType.current.getText(); }  
	 EOF 
;

// Rule NumericType
ruleNumericType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(
    { 
        newCompositeNode(grammarAccess.getNumericTypeAccess().getIntegralTypeParserRuleCall_0()); 
    }
    this_IntegralType_0=ruleIntegralType    {
		$current.merge(this_IntegralType_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNumericTypeAccess().getFloatingPointTypeParserRuleCall_1()); 
    }
    this_FloatingPointType_1=ruleFloatingPointType    {
		$current.merge(this_FloatingPointType_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleIntegralType
entryRuleIntegralType returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getIntegralTypeRule()); } 
	 iv_ruleIntegralType=ruleIntegralType 
	 { $current=$iv_ruleIntegralType.current.getText(); }  
	 EOF 
;

// Rule IntegralType
ruleIntegralType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(
	kw=KEYWORD_36 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIntegralTypeAccess().getByteKeyword_0()); 
    }

    |
	kw=KEYWORD_52 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIntegralTypeAccess().getShortKeyword_1()); 
    }

    |
	kw=KEYWORD_29 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIntegralTypeAccess().getIntKeyword_2()); 
    }

    |
	kw=KEYWORD_38 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIntegralTypeAccess().getLongKeyword_3()); 
    }

    |
	kw=KEYWORD_37 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIntegralTypeAccess().getCharKeyword_4()); 
    }
)
    ;





// Entry rule entryRuleFloatingPointType
entryRuleFloatingPointType returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getFloatingPointTypeRule()); } 
	 iv_ruleFloatingPointType=ruleFloatingPointType 
	 { $current=$iv_ruleFloatingPointType.current.getText(); }  
	 EOF 
;

// Rule FloatingPointType
ruleFloatingPointType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(
	kw=KEYWORD_50 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFloatingPointTypeAccess().getFloatKeyword_0()); 
    }

    |
	kw=KEYWORD_57 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFloatingPointTypeAccess().getDoubleKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleIntegerLiteral
entryRuleIntegerLiteral returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getIntegerLiteralRule()); } 
	 iv_ruleIntegerLiteral=ruleIntegerLiteral 
	 { $current=$iv_ruleIntegerLiteral.current.getText(); }  
	 EOF 
;

// Rule IntegerLiteral
ruleIntegerLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getIntegerLiteralAccess().getINTTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); } 
	 iv_ruleStringLiteral=ruleStringLiteral 
	 { $current=$iv_ruleStringLiteral.current.getText(); }  
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getStringLiteralAccess().getSTRINGTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getBooleanLiteralRule()); } 
	 iv_ruleBooleanLiteral=ruleBooleanLiteral 
	 { $current=$iv_ruleBooleanLiteral.current.getText(); }  
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(
	kw=KEYWORD_43 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBooleanLiteralAccess().getTrueKeyword_0()); 
    }

    |
	kw=KEYWORD_49 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleNullLiteral
entryRuleNullLiteral returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getNullLiteralRule()); } 
	 iv_ruleNullLiteral=ruleNullLiteral 
	 { $current=$iv_ruleNullLiteral.current.getText(); }  
	 EOF 
;

// Rule NullLiteral
ruleNullLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:

	kw=KEYWORD_39 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNullLiteralAccess().getNullKeyword()); 
    }

    ;





// Entry rule entryRuleLiteral
entryRuleLiteral returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getLiteralRule()); } 
	 iv_ruleLiteral=ruleLiteral 
	 { $current=$iv_ruleLiteral.current.getText(); }  
	 EOF 
;

// Rule Literal
ruleLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getIntegerLiteralParserRuleCall_0()); 
    }
    this_IntegerLiteral_0=ruleIntegerLiteral    {
		$current.merge(this_IntegerLiteral_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_1()); 
    }
    this_BooleanLiteral_1=ruleBooleanLiteral    {
		$current.merge(this_BooleanLiteral_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_2()); 
    }
    this_StringLiteral_2=ruleStringLiteral    {
		$current.merge(this_StringLiteral_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getNullLiteralParserRuleCall_3()); 
    }
    this_NullLiteral_3=ruleNullLiteral    {
		$current.merge(this_NullLiteral_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleQualifiedIdentifier
entryRuleQualifiedIdentifier returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getQualifiedIdentifierRule()); } 
	 iv_ruleQualifiedIdentifier=ruleQualifiedIdentifier 
	 { $current=$iv_ruleQualifiedIdentifier.current.getText(); }  
	 EOF 
;

// Rule QualifiedIdentifier
ruleQualifiedIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(
	kw=KEYWORD_111 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedIdentifierAccess().getJavaLangBooleanKeyword_0()); 
    }

    |
	kw=KEYWORD_104 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedIdentifierAccess().getJavaLangByteKeyword_1()); 
    }

    |
	kw=KEYWORD_119 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedIdentifierAccess().getJavaLangCharacterKeyword_2()); 
    }

    |
	kw=KEYWORD_109 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedIdentifierAccess().getJavaLangDoubleKeyword_3()); 
    }

    |
	kw=KEYWORD_106 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedIdentifierAccess().getJavaLangFloatKeyword_4()); 
    }

    |
	kw=KEYWORD_112 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedIdentifierAccess().getJavaLangIntegerKeyword_5()); 
    }

    |
	kw=KEYWORD_105 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedIdentifierAccess().getJavaLangLongKeyword_6()); 
    }

    |
	kw=KEYWORD_107 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedIdentifierAccess().getJavaLangShortKeyword_7()); 
    }

    |
	kw=KEYWORD_110 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedIdentifierAccess().getJavaLangStringKeyword_8()); 
    }

    |(
	kw=KEYWORD_51 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedIdentifierAccess().getJavaKeyword_9_0()); 
    }
    this_ID_10=RULE_ID    {
		$current.merge(this_ID_10);
    }

    { 
    newLeafNode(this_ID_10, grammarAccess.getQualifiedIdentifierAccess().getIDTerminalRuleCall_9_1()); 
    }
(
	kw=KEYWORD_10 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedIdentifierAccess().getFullStopKeyword_9_2_0()); 
    }
    this_ID_12=RULE_ID    {
		$current.merge(this_ID_12);
    }

    { 
    newLeafNode(this_ID_12, grammarAccess.getQualifiedIdentifierAccess().getIDTerminalRuleCall_9_2_1()); 
    }
)*)
    |(
	kw=KEYWORD_61 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedIdentifierAccess().getJavaxKeyword_10_0()); 
    }
    this_ID_14=RULE_ID    {
		$current.merge(this_ID_14);
    }

    { 
    newLeafNode(this_ID_14, grammarAccess.getQualifiedIdentifierAccess().getIDTerminalRuleCall_10_1()); 
    }
(
	kw=KEYWORD_10 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedIdentifierAccess().getFullStopKeyword_10_2_0()); 
    }
    this_ID_16=RULE_ID    {
		$current.merge(this_ID_16);
    }

    { 
    newLeafNode(this_ID_16, grammarAccess.getQualifiedIdentifierAccess().getIDTerminalRuleCall_10_2_1()); 
    }
)*)
    |(    this_ID_17=RULE_ID    {
		$current.merge(this_ID_17);
    }

    { 
    newLeafNode(this_ID_17, grammarAccess.getQualifiedIdentifierAccess().getIDTerminalRuleCall_11_0()); 
    }
(
	kw=KEYWORD_10 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedIdentifierAccess().getFullStopKeyword_11_1_0()); 
    }
    this_ID_19=RULE_ID    {
		$current.merge(this_ID_19);
    }

    { 
    newLeafNode(this_ID_19, grammarAccess.getQualifiedIdentifierAccess().getIDTerminalRuleCall_11_1_1()); 
    }
)*))
    ;





// Entry rule entryRuleCandidateClassName
entryRuleCandidateClassName returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getCandidateClassNameRule()); } 
	 iv_ruleCandidateClassName=ruleCandidateClassName 
	 { $current=$iv_ruleCandidateClassName.current.getText(); }  
	 EOF 
;

// Rule CandidateClassName
ruleCandidateClassName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:

    { 
        newCompositeNode(grammarAccess.getCandidateClassNameAccess().getQualifiedIdentifierParserRuleCall()); 
    }
    this_QualifiedIdentifier_0=ruleQualifiedIdentifier    {
		$current.merge(this_QualifiedIdentifier_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    ;





// Entry rule entryRuleClassOrInterfaceName
entryRuleClassOrInterfaceName returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getClassOrInterfaceNameRule()); } 
	 iv_ruleClassOrInterfaceName=ruleClassOrInterfaceName 
	 { $current=$iv_ruleClassOrInterfaceName.current.getText(); }  
	 EOF 
;

// Rule ClassOrInterfaceName
ruleClassOrInterfaceName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:

    { 
        newCompositeNode(grammarAccess.getClassOrInterfaceNameAccess().getQualifiedIdentifierParserRuleCall()); 
    }
    this_QualifiedIdentifier_0=ruleQualifiedIdentifier    {
		$current.merge(this_QualifiedIdentifier_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    ;





// Rule OrderByDirection
ruleOrderByDirection returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((    enumLiteral_0=KEYWORD_26
    {
        $current = grammarAccess.getOrderByDirectionAccess().getAscEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getOrderByDirectionAccess().getAscEnumLiteralDeclaration_0()); 
    }
)
    |(    enumLiteral_1=KEYWORD_82
    {
        $current = grammarAccess.getOrderByDirectionAccess().getAscendingEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getOrderByDirectionAccess().getAscendingEnumLiteralDeclaration_1()); 
    }
)
    |(    enumLiteral_2=KEYWORD_33
    {
        $current = grammarAccess.getOrderByDirectionAccess().getDescEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getOrderByDirectionAccess().getDescEnumLiteralDeclaration_2()); 
    }
)
    |(    enumLiteral_3=KEYWORD_92
    {
        $current = grammarAccess.getOrderByDirectionAccess().getDescendingEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getOrderByDirectionAccess().getDescendingEnumLiteralDeclaration_3()); 
    }
));



// Rule UnaryOperator
ruleUnaryOperator returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((    enumLiteral_0=KEYWORD_7
    {
        $current = grammarAccess.getUnaryOperatorAccess().getPositiveEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getUnaryOperatorAccess().getPositiveEnumLiteralDeclaration_0()); 
    }
)
    |(    enumLiteral_1=KEYWORD_9
    {
        $current = grammarAccess.getUnaryOperatorAccess().getNegativeEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getUnaryOperatorAccess().getNegativeEnumLiteralDeclaration_1()); 
    }
)
    |(    enumLiteral_2=KEYWORD_17
    {
        $current = grammarAccess.getUnaryOperatorAccess().getBitwiseNotEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getUnaryOperatorAccess().getBitwiseNotEnumLiteralDeclaration_2()); 
    }
)
    |(    enumLiteral_3=KEYWORD_1
    {
        $current = grammarAccess.getUnaryOperatorAccess().getLogicalNotEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getUnaryOperatorAccess().getLogicalNotEnumLiteralDeclaration_3()); 
    }
));



// Rule AdditionOperator
ruleAdditionOperator returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((    enumLiteral_0=KEYWORD_7
    {
        $current = grammarAccess.getAdditionOperatorAccess().getAddEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getAdditionOperatorAccess().getAddEnumLiteralDeclaration_0()); 
    }
)
    |(    enumLiteral_1=KEYWORD_9
    {
        $current = grammarAccess.getAdditionOperatorAccess().getSubtractEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getAdditionOperatorAccess().getSubtractEnumLiteralDeclaration_1()); 
    }
));



// Rule MultiplicationOperator
ruleMultiplicationOperator returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((    enumLiteral_0=KEYWORD_6
    {
        $current = grammarAccess.getMultiplicationOperatorAccess().getMultiplyEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getMultiplicationOperatorAccess().getMultiplyEnumLiteralDeclaration_0()); 
    }
)
    |(    enumLiteral_1=KEYWORD_11
    {
        $current = grammarAccess.getMultiplicationOperatorAccess().getDivideEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getMultiplicationOperatorAccess().getDivideEnumLiteralDeclaration_1()); 
    }
)
    |(    enumLiteral_2=KEYWORD_2
    {
        $current = grammarAccess.getMultiplicationOperatorAccess().getModuloEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getMultiplicationOperatorAccess().getModuloEnumLiteralDeclaration_2()); 
    }
));



// Rule ComparisonOperator
ruleComparisonOperator returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((    enumLiteral_0=KEYWORD_14
    {
        $current = grammarAccess.getComparisonOperatorAccess().getLessThenEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getComparisonOperatorAccess().getLessThenEnumLiteralDeclaration_0()); 
    }
)
    |(    enumLiteral_1=KEYWORD_15
    {
        $current = grammarAccess.getComparisonOperatorAccess().getGreaterThenEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getComparisonOperatorAccess().getGreaterThenEnumLiteralDeclaration_1()); 
    }
)
    |(    enumLiteral_2=KEYWORD_20
    {
        $current = grammarAccess.getComparisonOperatorAccess().getLessEqualEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getComparisonOperatorAccess().getLessEqualEnumLiteralDeclaration_2()); 
    }
)
    |(    enumLiteral_3=KEYWORD_22
    {
        $current = grammarAccess.getComparisonOperatorAccess().getGreaterEqualEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getComparisonOperatorAccess().getGreaterEqualEnumLiteralDeclaration_3()); 
    }
)
    |(    enumLiteral_4=KEYWORD_21
    {
        $current = grammarAccess.getComparisonOperatorAccess().getEqualEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getComparisonOperatorAccess().getEqualEnumLiteralDeclaration_4()); 
    }
)
    |(    enumLiteral_5=KEYWORD_18
    {
        $current = grammarAccess.getComparisonOperatorAccess().getNotEqualEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getComparisonOperatorAccess().getNotEqualEnumLiteralDeclaration_5()); 
    }
)
    |(    enumLiteral_6=KEYWORD_96
    {
        $current = grammarAccess.getComparisonOperatorAccess().getInstanceofEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getComparisonOperatorAccess().getInstanceofEnumLiteralDeclaration_6()); 
    }
));



