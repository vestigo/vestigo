/*
* generated by Xtext
*/
parser grammar InternalJDOQLParser;

options {
	tokenVocab=InternalJDOQLLexer;
	superClass=AbstractInternalContentAssistParser;
	
}

@header {
package org.nightlabs.jjqb.xtext.jdoql.ui.contentassist.antlr.internal; 

import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.nightlabs.jjqb.xtext.jdoql.services.JDOQLGrammarAccess;

}

@members {
 
 	private JDOQLGrammarAccess grammarAccess;
 	
 	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
 	
 	{
		tokenNameToValue.put("KEYWORD_1", "'!'");
		tokenNameToValue.put("KEYWORD_2", "'\%'");
		tokenNameToValue.put("KEYWORD_3", "'&'");
		tokenNameToValue.put("KEYWORD_4", "'('");
		tokenNameToValue.put("KEYWORD_5", "')'");
		tokenNameToValue.put("KEYWORD_6", "'*'");
		tokenNameToValue.put("KEYWORD_7", "'+'");
		tokenNameToValue.put("KEYWORD_8", "','");
		tokenNameToValue.put("KEYWORD_9", "'-'");
		tokenNameToValue.put("KEYWORD_10", "'.'");
		tokenNameToValue.put("KEYWORD_11", "'/'");
		tokenNameToValue.put("KEYWORD_12", "':'");
		tokenNameToValue.put("KEYWORD_13", "';'");
		tokenNameToValue.put("KEYWORD_14", "'<'");
		tokenNameToValue.put("KEYWORD_15", "'>'");
		tokenNameToValue.put("KEYWORD_16", "'|'");
		tokenNameToValue.put("KEYWORD_17", "'~'");
		tokenNameToValue.put("KEYWORD_18", "'!='");
		tokenNameToValue.put("KEYWORD_19", "'&&'");
		tokenNameToValue.put("KEYWORD_20", "'<='");
		tokenNameToValue.put("KEYWORD_21", "'=='");
		tokenNameToValue.put("KEYWORD_22", "'>='");
		tokenNameToValue.put("KEYWORD_23", "'AS'");
		tokenNameToValue.put("KEYWORD_24", "'BY'");
		tokenNameToValue.put("KEYWORD_25", "'||'");
		tokenNameToValue.put("KEYWORD_26", "'ASC'");
		tokenNameToValue.put("KEYWORD_27", "'avg'");
		tokenNameToValue.put("KEYWORD_28", "'get'");
		tokenNameToValue.put("KEYWORD_29", "'int'");
		tokenNameToValue.put("KEYWORD_30", "'max'");
		tokenNameToValue.put("KEYWORD_31", "'min'");
		tokenNameToValue.put("KEYWORD_32", "'sum'");
		tokenNameToValue.put("KEYWORD_33", "'DESC'");
		tokenNameToValue.put("KEYWORD_34", "'FROM'");
		tokenNameToValue.put("KEYWORD_35", "'INTO'");
		tokenNameToValue.put("KEYWORD_36", "'byte'");
		tokenNameToValue.put("KEYWORD_37", "'char'");
		tokenNameToValue.put("KEYWORD_38", "'long'");
		tokenNameToValue.put("KEYWORD_39", "'null'");
		tokenNameToValue.put("KEYWORD_40", "'size'");
		tokenNameToValue.put("KEYWORD_41", "'this'");
		tokenNameToValue.put("KEYWORD_42", "'trim'");
		tokenNameToValue.put("KEYWORD_43", "'true'");
		tokenNameToValue.put("KEYWORD_44", "'GROUP'");
		tokenNameToValue.put("KEYWORD_45", "'ORDER'");
		tokenNameToValue.put("KEYWORD_46", "'RANGE'");
		tokenNameToValue.put("KEYWORD_47", "'WHERE'");
		tokenNameToValue.put("KEYWORD_48", "'count'");
		tokenNameToValue.put("KEYWORD_49", "'false'");
		tokenNameToValue.put("KEYWORD_50", "'float'");
		tokenNameToValue.put("KEYWORD_51", "'java.'");
		tokenNameToValue.put("KEYWORD_52", "'short'");
		tokenNameToValue.put("KEYWORD_53", "'HAVING'");
		tokenNameToValue.put("KEYWORD_54", "'SELECT'");
		tokenNameToValue.put("KEYWORD_55", "'UNIQUE'");
		tokenNameToValue.put("KEYWORD_56", "'charAt'");
		tokenNameToValue.put("KEYWORD_57", "'double'");
		tokenNameToValue.put("KEYWORD_58", "'equals'");
		tokenNameToValue.put("KEYWORD_59", "'getDay'");
		tokenNameToValue.put("KEYWORD_60", "'import'");
		tokenNameToValue.put("KEYWORD_61", "'javax.'");
		tokenNameToValue.put("KEYWORD_62", "'length'");
		tokenNameToValue.put("KEYWORD_63", "'EXCLUDE'");
		tokenNameToValue.put("KEYWORD_64", "'boolean'");
		tokenNameToValue.put("KEYWORD_65", "'getHour'");
		tokenNameToValue.put("KEYWORD_66", "'getYear'");
		tokenNameToValue.put("KEYWORD_67", "'indexOf'");
		tokenNameToValue.put("KEYWORD_68", "'isEmpty'");
		tokenNameToValue.put("KEYWORD_69", "'matches'");
		tokenNameToValue.put("KEYWORD_70", "'ordinal'");
		tokenNameToValue.put("KEYWORD_71", "'DISTINCT'");
		tokenNameToValue.put("KEYWORD_72", "'Math.abs'");
		tokenNameToValue.put("KEYWORD_73", "'Math.cos'");
		tokenNameToValue.put("KEYWORD_74", "'Math.exp'");
		tokenNameToValue.put("KEYWORD_75", "'Math.log'");
		tokenNameToValue.put("KEYWORD_76", "'Math.sin'");
		tokenNameToValue.put("KEYWORD_77", "'Math.tan'");
		tokenNameToValue.put("KEYWORD_78", "'contains'");
		tokenNameToValue.put("KEYWORD_79", "'endsWith'");
		tokenNameToValue.put("KEYWORD_80", "'getMonth'");
		tokenNameToValue.put("KEYWORD_81", "'toString'");
		tokenNameToValue.put("KEYWORD_82", "'ASCENDING'");
		tokenNameToValue.put("KEYWORD_83", "'Math.acos'");
		tokenNameToValue.put("KEYWORD_84", "'Math.asin'");
		tokenNameToValue.put("KEYWORD_85", "'Math.atan'");
		tokenNameToValue.put("KEYWORD_86", "'Math.ceil'");
		tokenNameToValue.put("KEYWORD_87", "'Math.sqrt'");
		tokenNameToValue.put("KEYWORD_88", "'VARIABLES'");
		tokenNameToValue.put("KEYWORD_89", "'getMinute'");
		tokenNameToValue.put("KEYWORD_90", "'getSecond'");
		tokenNameToValue.put("KEYWORD_91", "'substring'");
		tokenNameToValue.put("KEYWORD_92", "'DESCENDING'");
		tokenNameToValue.put("KEYWORD_93", "'Math.floor'");
		tokenNameToValue.put("KEYWORD_94", "'PARAMETERS'");
		tokenNameToValue.put("KEYWORD_95", "'SUBCLASSES'");
		tokenNameToValue.put("KEYWORD_96", "'instanceof'");
		tokenNameToValue.put("KEYWORD_97", "'replaceAll'");
		tokenNameToValue.put("KEYWORD_98", "'startsWith'");
		tokenNameToValue.put("KEYWORD_99", "'containsKey'");
		tokenNameToValue.put("KEYWORD_100", "'toLowerCase'");
		tokenNameToValue.put("KEYWORD_101", "'toUpperCase'");
		tokenNameToValue.put("KEYWORD_102", "'containsEntry'");
		tokenNameToValue.put("KEYWORD_103", "'containsValue'");
		tokenNameToValue.put("KEYWORD_104", "'java.lang.Byte'");
		tokenNameToValue.put("KEYWORD_105", "'java.lang.Long'");
		tokenNameToValue.put("KEYWORD_106", "'java.lang.Float'");
		tokenNameToValue.put("KEYWORD_107", "'java.lang.Short'");
		tokenNameToValue.put("KEYWORD_108", "'equalsIgnoreCase'");
		tokenNameToValue.put("KEYWORD_109", "'java.lang.Double'");
		tokenNameToValue.put("KEYWORD_110", "'java.lang.String'");
		tokenNameToValue.put("KEYWORD_111", "'java.lang.Boolean'");
		tokenNameToValue.put("KEYWORD_112", "'java.lang.Integer'");
		tokenNameToValue.put("KEYWORD_113", "'java.lang.Math.abs'");
		tokenNameToValue.put("KEYWORD_114", "'java.lang.Math.cos'");
		tokenNameToValue.put("KEYWORD_115", "'java.lang.Math.exp'");
		tokenNameToValue.put("KEYWORD_116", "'java.lang.Math.log'");
		tokenNameToValue.put("KEYWORD_117", "'java.lang.Math.sin'");
		tokenNameToValue.put("KEYWORD_118", "'java.lang.Math.tan'");
		tokenNameToValue.put("KEYWORD_119", "'java.lang.Character'");
		tokenNameToValue.put("KEYWORD_120", "'java.lang.Math.acos'");
		tokenNameToValue.put("KEYWORD_121", "'java.lang.Math.asin'");
		tokenNameToValue.put("KEYWORD_122", "'java.lang.Math.atan'");
		tokenNameToValue.put("KEYWORD_123", "'java.lang.Math.ceil'");
		tokenNameToValue.put("KEYWORD_124", "'java.lang.Math.sqrt'");
		tokenNameToValue.put("KEYWORD_125", "'JDOHelper.getVersion'");
		tokenNameToValue.put("KEYWORD_126", "'java.lang.Math.floor'");
		tokenNameToValue.put("KEYWORD_127", "'JDOHelper.getObjectId'");
		tokenNameToValue.put("KEYWORD_128", "'javax.jdo.JDOHelper.getVersion'");
		tokenNameToValue.put("KEYWORD_129", "'javax.jdo.JDOHelper.getObjectId'");
 	}
 	
    public void setGrammarAccess(JDOQLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }

	@Override
    protected String getValueForTokenName(String tokenName) {
    	String result = tokenNameToValue.get(tokenName);
    	if (result == null)
    		result = tokenName;
    	return result;
    }
}




// Entry rule entryRuleSingleStringJDOQL
entryRuleSingleStringJDOQL 
:
{ before(grammarAccess.getSingleStringJDOQLRule()); }
	 ruleSingleStringJDOQL
{ after(grammarAccess.getSingleStringJDOQLRule()); } 
	 EOF 
;

// Rule SingleStringJDOQL
ruleSingleStringJDOQL 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSingleStringJDOQLAccess().getGroup()); }
(rule__SingleStringJDOQL__Group__0)
{ after(grammarAccess.getSingleStringJDOQLAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelectClause
entryRuleSelectClause 
:
{ before(grammarAccess.getSelectClauseRule()); }
	 ruleSelectClause
{ after(grammarAccess.getSelectClauseRule()); } 
	 EOF 
;

// Rule SelectClause
ruleSelectClause 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSelectClauseAccess().getGroup()); }
(rule__SelectClause__Group__0)
{ after(grammarAccess.getSelectClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResultClause
entryRuleResultClause 
:
{ before(grammarAccess.getResultClauseRule()); }
	 ruleResultClause
{ after(grammarAccess.getResultClauseRule()); } 
	 EOF 
;

// Rule ResultClause
ruleResultClause 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getResultClauseAccess().getGroup()); }
(rule__ResultClause__Group__0)
{ after(grammarAccess.getResultClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntoClause
entryRuleIntoClause 
:
{ before(grammarAccess.getIntoClauseRule()); }
	 ruleIntoClause
{ after(grammarAccess.getIntoClauseRule()); } 
	 EOF 
;

// Rule IntoClause
ruleIntoClause 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getIntoClauseAccess().getGroup()); }
(rule__IntoClause__Group__0)
{ after(grammarAccess.getIntoClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResultSpec
entryRuleResultSpec 
:
{ before(grammarAccess.getResultSpecRule()); }
	 ruleResultSpec
{ after(grammarAccess.getResultSpecRule()); } 
	 EOF 
;

// Rule ResultSpec
ruleResultSpec 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getResultSpecAccess().getGroup()); }
(rule__ResultSpec__Group__0)
{ after(grammarAccess.getResultSpecAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResultNaming
entryRuleResultNaming 
:
{ before(grammarAccess.getResultNamingRule()); }
	 ruleResultNaming
{ after(grammarAccess.getResultNamingRule()); } 
	 EOF 
;

// Rule ResultNaming
ruleResultNaming 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getResultNamingAccess().getGroup()); }
(rule__ResultNaming__Group__0)
{ after(grammarAccess.getResultNamingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFromClause
entryRuleFromClause 
:
{ before(grammarAccess.getFromClauseRule()); }
	 ruleFromClause
{ after(grammarAccess.getFromClauseRule()); } 
	 EOF 
;

// Rule FromClause
ruleFromClause 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFromClauseAccess().getGroup()); }
(rule__FromClause__Group__0)
{ after(grammarAccess.getFromClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhereClause
entryRuleWhereClause 
:
{ before(grammarAccess.getWhereClauseRule()); }
	 ruleWhereClause
{ after(grammarAccess.getWhereClauseRule()); } 
	 EOF 
;

// Rule WhereClause
ruleWhereClause 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getWhereClauseAccess().getGroup()); }
(rule__WhereClause__Group__0)
{ after(grammarAccess.getWhereClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariablesClause
entryRuleVariablesClause 
:
{ before(grammarAccess.getVariablesClauseRule()); }
	 ruleVariablesClause
{ after(grammarAccess.getVariablesClauseRule()); } 
	 EOF 
;

// Rule VariablesClause
ruleVariablesClause 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getVariablesClauseAccess().getGroup()); }
(rule__VariablesClause__Group__0)
{ after(grammarAccess.getVariablesClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration 
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup()); }
(rule__VariableDeclaration__Group__0)
{ after(grammarAccess.getVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableName
entryRuleVariableName 
:
{ before(grammarAccess.getVariableNameRule()); }
	 ruleVariableName
{ after(grammarAccess.getVariableNameRule()); } 
	 EOF 
;

// Rule VariableName
ruleVariableName 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getVariableNameAccess().getIDTerminalRuleCall()); }
	RULE_ID
{ after(grammarAccess.getVariableNameAccess().getIDTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParametersClause
entryRuleParametersClause 
:
{ before(grammarAccess.getParametersClauseRule()); }
	 ruleParametersClause
{ after(grammarAccess.getParametersClauseRule()); } 
	 EOF 
;

// Rule ParametersClause
ruleParametersClause 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getParametersClauseAccess().getGroup()); }
(rule__ParametersClause__Group__0)
{ after(grammarAccess.getParametersClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterDeclaration
entryRuleParameterDeclaration 
:
{ before(grammarAccess.getParameterDeclarationRule()); }
	 ruleParameterDeclaration
{ after(grammarAccess.getParameterDeclarationRule()); } 
	 EOF 
;

// Rule ParameterDeclaration
ruleParameterDeclaration 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getParameterDeclarationAccess().getGroup()); }
(rule__ParameterDeclaration__Group__0)
{ after(grammarAccess.getParameterDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclaredParameterName
entryRuleDeclaredParameterName 
:
{ before(grammarAccess.getDeclaredParameterNameRule()); }
	 ruleDeclaredParameterName
{ after(grammarAccess.getDeclaredParameterNameRule()); } 
	 EOF 
;

// Rule DeclaredParameterName
ruleDeclaredParameterName 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getDeclaredParameterNameAccess().getParameterNameParserRuleCall()); }
	ruleParameterName
{ after(grammarAccess.getDeclaredParameterNameAccess().getParameterNameParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterName
entryRuleParameterName 
:
{ before(grammarAccess.getParameterNameRule()); }
	 ruleParameterName
{ after(grammarAccess.getParameterNameRule()); } 
	 EOF 
;

// Rule ParameterName
ruleParameterName 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getParameterNameAccess().getIDTerminalRuleCall()); }
	RULE_ID
{ after(grammarAccess.getParameterNameAccess().getIDTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportClause
entryRuleImportClause 
:
{ before(grammarAccess.getImportClauseRule()); }
	 ruleImportClause
{ after(grammarAccess.getImportClauseRule()); } 
	 EOF 
;

// Rule ImportClause
ruleImportClause 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getImportClauseAccess().getGroup()); }
(rule__ImportClause__Group__0)
{ after(grammarAccess.getImportClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportDeclaration
entryRuleImportDeclaration 
:
{ before(grammarAccess.getImportDeclarationRule()); }
	 ruleImportDeclaration
{ after(grammarAccess.getImportDeclarationRule()); } 
	 EOF 
;

// Rule ImportDeclaration
ruleImportDeclaration 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getImportDeclarationAccess().getGroup()); }
(rule__ImportDeclaration__Group__0)
{ after(grammarAccess.getImportDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGroupByClause
entryRuleGroupByClause 
:
{ before(grammarAccess.getGroupByClauseRule()); }
	 ruleGroupByClause
{ after(grammarAccess.getGroupByClauseRule()); } 
	 EOF 
;

// Rule GroupByClause
ruleGroupByClause 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getGroupByClauseAccess().getGroup()); }
(rule__GroupByClause__Group__0)
{ after(grammarAccess.getGroupByClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHavingClause
entryRuleHavingClause 
:
{ before(grammarAccess.getHavingClauseRule()); }
	 ruleHavingClause
{ after(grammarAccess.getHavingClauseRule()); } 
	 EOF 
;

// Rule HavingClause
ruleHavingClause 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getHavingClauseAccess().getGroup()); }
(rule__HavingClause__Group__0)
{ after(grammarAccess.getHavingClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrderByClause
entryRuleOrderByClause 
:
{ before(grammarAccess.getOrderByClauseRule()); }
	 ruleOrderByClause
{ after(grammarAccess.getOrderByClauseRule()); } 
	 EOF 
;

// Rule OrderByClause
ruleOrderByClause 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getOrderByClauseAccess().getGroup()); }
(rule__OrderByClause__Group__0)
{ after(grammarAccess.getOrderByClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrderBySpec
entryRuleOrderBySpec 
:
{ before(grammarAccess.getOrderBySpecRule()); }
	 ruleOrderBySpec
{ after(grammarAccess.getOrderBySpecRule()); } 
	 EOF 
;

// Rule OrderBySpec
ruleOrderBySpec 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getOrderBySpecAccess().getGroup()); }
(rule__OrderBySpec__Group__0)
{ after(grammarAccess.getOrderBySpecAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRangeClause
entryRuleRangeClause 
:
{ before(grammarAccess.getRangeClauseRule()); }
	 ruleRangeClause
{ after(grammarAccess.getRangeClauseRule()); } 
	 EOF 
;

// Rule RangeClause
ruleRangeClause 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRangeClauseAccess().getGroup()); }
(rule__RangeClause__Group__0)
{ after(grammarAccess.getRangeClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditionalOrExpression
entryRuleConditionalOrExpression 
:
{ before(grammarAccess.getConditionalOrExpressionRule()); }
	 ruleConditionalOrExpression
{ after(grammarAccess.getConditionalOrExpressionRule()); } 
	 EOF 
;

// Rule ConditionalOrExpression
ruleConditionalOrExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getConditionalOrExpressionAccess().getGroup()); }
(rule__ConditionalOrExpression__Group__0)
{ after(grammarAccess.getConditionalOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditionalAndExpression
entryRuleConditionalAndExpression 
:
{ before(grammarAccess.getConditionalAndExpressionRule()); }
	 ruleConditionalAndExpression
{ after(grammarAccess.getConditionalAndExpressionRule()); } 
	 EOF 
;

// Rule ConditionalAndExpression
ruleConditionalAndExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getConditionalAndExpressionAccess().getGroup()); }
(rule__ConditionalAndExpression__Group__0)
{ after(grammarAccess.getConditionalAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleOrExpression
entryRuleSimpleOrExpression 
:
{ before(grammarAccess.getSimpleOrExpressionRule()); }
	 ruleSimpleOrExpression
{ after(grammarAccess.getSimpleOrExpressionRule()); } 
	 EOF 
;

// Rule SimpleOrExpression
ruleSimpleOrExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSimpleOrExpressionAccess().getGroup()); }
(rule__SimpleOrExpression__Group__0)
{ after(grammarAccess.getSimpleOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleAndExpression
entryRuleSimpleAndExpression 
:
{ before(grammarAccess.getSimpleAndExpressionRule()); }
	 ruleSimpleAndExpression
{ after(grammarAccess.getSimpleAndExpressionRule()); } 
	 EOF 
;

// Rule SimpleAndExpression
ruleSimpleAndExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSimpleAndExpressionAccess().getGroup()); }
(rule__SimpleAndExpression__Group__0)
{ after(grammarAccess.getSimpleAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComparisonOperatorExpression
entryRuleComparisonOperatorExpression 
:
{ before(grammarAccess.getComparisonOperatorExpressionRule()); }
	 ruleComparisonOperatorExpression
{ after(grammarAccess.getComparisonOperatorExpressionRule()); } 
	 EOF 
;

// Rule ComparisonOperatorExpression
ruleComparisonOperatorExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getComparisonOperatorExpressionAccess().getGroup()); }
(rule__ComparisonOperatorExpression__Group__0)
{ after(grammarAccess.getComparisonOperatorExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdditionExpression
entryRuleAdditionExpression 
:
{ before(grammarAccess.getAdditionExpressionRule()); }
	 ruleAdditionExpression
{ after(grammarAccess.getAdditionExpressionRule()); } 
	 EOF 
;

// Rule AdditionExpression
ruleAdditionExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getAdditionExpressionAccess().getGroup()); }
(rule__AdditionExpression__Group__0)
{ after(grammarAccess.getAdditionExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplicationExpression
entryRuleMultiplicationExpression 
:
{ before(grammarAccess.getMultiplicationExpressionRule()); }
	 ruleMultiplicationExpression
{ after(grammarAccess.getMultiplicationExpressionRule()); } 
	 EOF 
;

// Rule MultiplicationExpression
ruleMultiplicationExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getMultiplicationExpressionAccess().getGroup()); }
(rule__MultiplicationExpression__Group__0)
{ after(grammarAccess.getMultiplicationExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression 
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
(rule__UnaryExpression__Alternatives)
{ after(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldAccessExpression
entryRuleFieldAccessExpression 
:
{ before(grammarAccess.getFieldAccessExpressionRule()); }
	 ruleFieldAccessExpression
{ after(grammarAccess.getFieldAccessExpressionRule()); } 
	 EOF 
;

// Rule FieldAccessExpression
ruleFieldAccessExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFieldAccessExpressionAccess().getAlternatives()); }
(rule__FieldAccessExpression__Alternatives)
{ after(grammarAccess.getFieldAccessExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterOrFieldOrMethodExpression
entryRuleParameterOrFieldOrMethodExpression 
:
{ before(grammarAccess.getParameterOrFieldOrMethodExpressionRule()); }
	 ruleParameterOrFieldOrMethodExpression
{ after(grammarAccess.getParameterOrFieldOrMethodExpressionRule()); } 
	 EOF 
;

// Rule ParameterOrFieldOrMethodExpression
ruleParameterOrFieldOrMethodExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getAlternatives()); }
(rule__ParameterOrFieldOrMethodExpression__Alternatives)
{ after(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldOrMethodExpression
entryRuleFieldOrMethodExpression 
:
{ before(grammarAccess.getFieldOrMethodExpressionRule()); }
	 ruleFieldOrMethodExpression
{ after(grammarAccess.getFieldOrMethodExpressionRule()); } 
	 EOF 
;

// Rule FieldOrMethodExpression
ruleFieldOrMethodExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFieldOrMethodExpressionAccess().getAlternatives()); }
(rule__FieldOrMethodExpression__Alternatives)
{ after(grammarAccess.getFieldOrMethodExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStaticMethodExpression
entryRuleStaticMethodExpression 
:
{ before(grammarAccess.getStaticMethodExpressionRule()); }
	 ruleStaticMethodExpression
{ after(grammarAccess.getStaticMethodExpressionRule()); } 
	 EOF 
;

// Rule StaticMethodExpression
ruleStaticMethodExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getAlternatives()); }
(rule__StaticMethodExpression__Alternatives)
{ after(grammarAccess.getStaticMethodExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodExpression
entryRuleMethodExpression 
:
{ before(grammarAccess.getMethodExpressionRule()); }
	 ruleMethodExpression
{ after(grammarAccess.getMethodExpressionRule()); } 
	 EOF 
;

// Rule MethodExpression
ruleMethodExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getMethodExpressionAccess().getAlternatives()); }
(rule__MethodExpression__Alternatives)
{ after(grammarAccess.getMethodExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParenthesesExpression
entryRuleParenthesesExpression 
:
{ before(grammarAccess.getParenthesesExpressionRule()); }
	 ruleParenthesesExpression
{ after(grammarAccess.getParenthesesExpressionRule()); } 
	 EOF 
;

// Rule ParenthesesExpression
ruleParenthesesExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getParenthesesExpressionAccess().getGroup()); }
(rule__ParenthesesExpression__Group__0)
{ after(grammarAccess.getParenthesesExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimitiveType
entryRulePrimitiveType 
:
{ before(grammarAccess.getPrimitiveTypeRule()); }
	 rulePrimitiveType
{ after(grammarAccess.getPrimitiveTypeRule()); } 
	 EOF 
;

// Rule PrimitiveType
rulePrimitiveType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPrimitiveTypeAccess().getAlternatives()); }
(rule__PrimitiveType__Alternatives)
{ after(grammarAccess.getPrimitiveTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumericType
entryRuleNumericType 
:
{ before(grammarAccess.getNumericTypeRule()); }
	 ruleNumericType
{ after(grammarAccess.getNumericTypeRule()); } 
	 EOF 
;

// Rule NumericType
ruleNumericType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNumericTypeAccess().getAlternatives()); }
(rule__NumericType__Alternatives)
{ after(grammarAccess.getNumericTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegralType
entryRuleIntegralType 
:
{ before(grammarAccess.getIntegralTypeRule()); }
	 ruleIntegralType
{ after(grammarAccess.getIntegralTypeRule()); } 
	 EOF 
;

// Rule IntegralType
ruleIntegralType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getIntegralTypeAccess().getAlternatives()); }
(rule__IntegralType__Alternatives)
{ after(grammarAccess.getIntegralTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFloatingPointType
entryRuleFloatingPointType 
:
{ before(grammarAccess.getFloatingPointTypeRule()); }
	 ruleFloatingPointType
{ after(grammarAccess.getFloatingPointTypeRule()); } 
	 EOF 
;

// Rule FloatingPointType
ruleFloatingPointType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFloatingPointTypeAccess().getAlternatives()); }
(rule__FloatingPointType__Alternatives)
{ after(grammarAccess.getFloatingPointTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerLiteral
entryRuleIntegerLiteral 
:
{ before(grammarAccess.getIntegerLiteralRule()); }
	 ruleIntegerLiteral
{ after(grammarAccess.getIntegerLiteralRule()); } 
	 EOF 
;

// Rule IntegerLiteral
ruleIntegerLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getIntegerLiteralAccess().getINTTerminalRuleCall()); }
	RULE_INT
{ after(grammarAccess.getIntegerLiteralAccess().getINTTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLiteral
entryRuleStringLiteral 
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getStringLiteralAccess().getSTRINGTerminalRuleCall()); }
	RULE_STRING
{ after(grammarAccess.getStringLiteralAccess().getSTRINGTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral 
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getBooleanLiteralAccess().getAlternatives()); }
(rule__BooleanLiteral__Alternatives)
{ after(grammarAccess.getBooleanLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNullLiteral
entryRuleNullLiteral 
:
{ before(grammarAccess.getNullLiteralRule()); }
	 ruleNullLiteral
{ after(grammarAccess.getNullLiteralRule()); } 
	 EOF 
;

// Rule NullLiteral
ruleNullLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNullLiteralAccess().getNullKeyword()); }

	KEYWORD_39 

{ after(grammarAccess.getNullLiteralAccess().getNullKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedIdentifier
entryRuleQualifiedIdentifier 
:
{ before(grammarAccess.getQualifiedIdentifierRule()); }
	 ruleQualifiedIdentifier
{ after(grammarAccess.getQualifiedIdentifierRule()); } 
	 EOF 
;

// Rule QualifiedIdentifier
ruleQualifiedIdentifier 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getQualifiedIdentifierAccess().getAlternatives()); }
(rule__QualifiedIdentifier__Alternatives)
{ after(grammarAccess.getQualifiedIdentifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCandidateClassName
entryRuleCandidateClassName 
:
{ before(grammarAccess.getCandidateClassNameRule()); }
	 ruleCandidateClassName
{ after(grammarAccess.getCandidateClassNameRule()); } 
	 EOF 
;

// Rule CandidateClassName
ruleCandidateClassName 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getCandidateClassNameAccess().getQualifiedIdentifierParserRuleCall()); }
	ruleQualifiedIdentifier
{ after(grammarAccess.getCandidateClassNameAccess().getQualifiedIdentifierParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassOrInterfaceName
entryRuleClassOrInterfaceName 
:
{ before(grammarAccess.getClassOrInterfaceNameRule()); }
	 ruleClassOrInterfaceName
{ after(grammarAccess.getClassOrInterfaceNameRule()); } 
	 EOF 
;

// Rule ClassOrInterfaceName
ruleClassOrInterfaceName 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getClassOrInterfaceNameAccess().getQualifiedIdentifierParserRuleCall()); }
	ruleQualifiedIdentifier
{ after(grammarAccess.getClassOrInterfaceNameAccess().getQualifiedIdentifierParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule OrderByDirection
ruleOrderByDirection
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderByDirectionAccess().getAlternatives()); }
(rule__OrderByDirection__Alternatives)
{ after(grammarAccess.getOrderByDirectionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule UnaryOperator
ruleUnaryOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
(rule__UnaryOperator__Alternatives)
{ after(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule AdditionOperator
ruleAdditionOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionOperatorAccess().getAlternatives()); }
(rule__AdditionOperator__Alternatives)
{ after(grammarAccess.getAdditionOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule MultiplicationOperator
ruleMultiplicationOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationOperatorAccess().getAlternatives()); }
(rule__MultiplicationOperator__Alternatives)
{ after(grammarAccess.getMultiplicationOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ComparisonOperator
ruleComparisonOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonOperatorAccess().getAlternatives()); }
(rule__ComparisonOperator__Alternatives)
{ after(grammarAccess.getComparisonOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__UnaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_0()); }
(rule__UnaryExpression__Group_0__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_1()); }
(rule__UnaryExpression__Group_1__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAccessExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccessExpressionAccess().getStaticMethodExpressionParserRuleCall_0()); }
	ruleStaticMethodExpression
{ after(grammarAccess.getFieldAccessExpressionAccess().getStaticMethodExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFieldAccessExpressionAccess().getGroup_1()); }
(rule__FieldAccessExpression__Group_1__0)
{ after(grammarAccess.getFieldAccessExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterOrFieldOrMethodExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getLiteralAssignment_0()); }
(rule__ParameterOrFieldOrMethodExpression__LiteralAssignment_0)
{ after(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getLiteralAssignment_0()); }
)

    |(
{ before(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getThisAssignment_1()); }
(rule__ParameterOrFieldOrMethodExpression__ThisAssignment_1)
{ after(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getThisAssignment_1()); }
)

    |(
{ before(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getIdAssignment_2()); }
(rule__ParameterOrFieldOrMethodExpression__IdAssignment_2)
{ after(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getIdAssignment_2()); }
)

    |(
{ before(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getGroup_3()); }
(rule__ParameterOrFieldOrMethodExpression__Group_3__0)
{ after(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getParenthesesExpressionParserRuleCall_4()); }
	ruleParenthesesExpression
{ after(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getParenthesesExpressionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getMethodAssignment_5()); }
(rule__ParameterOrFieldOrMethodExpression__MethodAssignment_5)
{ after(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getMethodAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldOrMethodExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldOrMethodExpressionAccess().getLiteralAssignment_0()); }
(rule__FieldOrMethodExpression__LiteralAssignment_0)
{ after(grammarAccess.getFieldOrMethodExpressionAccess().getLiteralAssignment_0()); }
)

    |(
{ before(grammarAccess.getFieldOrMethodExpressionAccess().getThisAssignment_1()); }
(rule__FieldOrMethodExpression__ThisAssignment_1)
{ after(grammarAccess.getFieldOrMethodExpressionAccess().getThisAssignment_1()); }
)

    |(
{ before(grammarAccess.getFieldOrMethodExpressionAccess().getIdAssignment_2()); }
(rule__FieldOrMethodExpression__IdAssignment_2)
{ after(grammarAccess.getFieldOrMethodExpressionAccess().getIdAssignment_2()); }
)

    |(
{ before(grammarAccess.getFieldOrMethodExpressionAccess().getParenthesesExpressionParserRuleCall_3()); }
	ruleParenthesesExpression
{ after(grammarAccess.getFieldOrMethodExpressionAccess().getParenthesesExpressionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getFieldOrMethodExpressionAccess().getMethodAssignment_4()); }
(rule__FieldOrMethodExpression__MethodAssignment_4)
{ after(grammarAccess.getFieldOrMethodExpressionAccess().getMethodAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_0()); }
(rule__StaticMethodExpression__Group_0__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_1()); }
(rule__StaticMethodExpression__Group_1__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_2()); }
(rule__StaticMethodExpression__Group_2__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_3()); }
(rule__StaticMethodExpression__Group_3__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_4()); }
(rule__StaticMethodExpression__Group_4__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_5()); }
(rule__StaticMethodExpression__Group_5__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_6()); }
(rule__StaticMethodExpression__Group_6__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_7()); }
(rule__StaticMethodExpression__Group_7__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_8()); }
(rule__StaticMethodExpression__Group_8__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_9()); }
(rule__StaticMethodExpression__Group_9__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_9()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_10()); }
(rule__StaticMethodExpression__Group_10__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_10()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_11()); }
(rule__StaticMethodExpression__Group_11__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_11()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_12()); }
(rule__StaticMethodExpression__Group_12__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_12()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_13()); }
(rule__StaticMethodExpression__Group_13__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_13()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_14()); }
(rule__StaticMethodExpression__Group_14__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_14()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_15()); }
(rule__StaticMethodExpression__Group_15__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_15()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_16()); }
(rule__StaticMethodExpression__Group_16__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_16()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_17()); }
(rule__StaticMethodExpression__Group_17__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_17()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_18()); }
(rule__StaticMethodExpression__Group_18__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_18()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_19()); }
(rule__StaticMethodExpression__Group_19__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_19()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_20()); }
(rule__StaticMethodExpression__Group_20__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_20()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_21()); }
(rule__StaticMethodExpression__Group_21__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_21()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_22()); }
(rule__StaticMethodExpression__Group_22__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_22()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_23()); }
(rule__StaticMethodExpression__Group_23__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_23()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_24()); }
(rule__StaticMethodExpression__Group_24__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_24()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_25()); }
(rule__StaticMethodExpression__Group_25__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_25()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_26()); }
(rule__StaticMethodExpression__Group_26__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_26()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_27()); }
(rule__StaticMethodExpression__Group_27__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_27()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_28()); }
(rule__StaticMethodExpression__Group_28__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_28()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_29()); }
(rule__StaticMethodExpression__Group_29__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_29()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_30()); }
(rule__StaticMethodExpression__Group_30__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_30()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_31()); }
(rule__StaticMethodExpression__Group_31__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_31()); }
)

    |(
{ before(grammarAccess.getStaticMethodExpressionAccess().getGroup_32()); }
(rule__StaticMethodExpression__Group_32__0)
{ after(grammarAccess.getStaticMethodExpressionAccess().getGroup_32()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getGroup_0()); }
(rule__MethodExpression__Group_0__0)
{ after(grammarAccess.getMethodExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getMethodExpressionAccess().getGroup_1()); }
(rule__MethodExpression__Group_1__0)
{ after(grammarAccess.getMethodExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getMethodExpressionAccess().getGroup_2()); }
(rule__MethodExpression__Group_2__0)
{ after(grammarAccess.getMethodExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getMethodExpressionAccess().getGroup_3()); }
(rule__MethodExpression__Group_3__0)
{ after(grammarAccess.getMethodExpressionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getMethodExpressionAccess().getGroup_4()); }
(rule__MethodExpression__Group_4__0)
{ after(grammarAccess.getMethodExpressionAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getMethodExpressionAccess().getGroup_5()); }
(rule__MethodExpression__Group_5__0)
{ after(grammarAccess.getMethodExpressionAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getMethodExpressionAccess().getGroup_6()); }
(rule__MethodExpression__Group_6__0)
{ after(grammarAccess.getMethodExpressionAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getMethodExpressionAccess().getGroup_7()); }
(rule__MethodExpression__Group_7__0)
{ after(grammarAccess.getMethodExpressionAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getMethodExpressionAccess().getGroup_8()); }
(rule__MethodExpression__Group_8__0)
{ after(grammarAccess.getMethodExpressionAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getMethodExpressionAccess().getGroup_9()); }
(rule__MethodExpression__Group_9__0)
{ after(grammarAccess.getMethodExpressionAccess().getGroup_9()); }
)

    |(
{ before(grammarAccess.getMethodExpressionAccess().getGroup_10()); }
(rule__MethodExpression__Group_10__0)
{ after(grammarAccess.getMethodExpressionAccess().getGroup_10()); }
)

    |(
{ before(grammarAccess.getMethodExpressionAccess().getGroup_11()); }
(rule__MethodExpression__Group_11__0)
{ after(grammarAccess.getMethodExpressionAccess().getGroup_11()); }
)

    |(
{ before(grammarAccess.getMethodExpressionAccess().getGroup_12()); }
(rule__MethodExpression__Group_12__0)
{ after(grammarAccess.getMethodExpressionAccess().getGroup_12()); }
)

    |(
{ before(grammarAccess.getMethodExpressionAccess().getGroup_13()); }
(rule__MethodExpression__Group_13__0)
{ after(grammarAccess.getMethodExpressionAccess().getGroup_13()); }
)

    |(
{ before(grammarAccess.getMethodExpressionAccess().getGroup_14()); }
(rule__MethodExpression__Group_14__0)
{ after(grammarAccess.getMethodExpressionAccess().getGroup_14()); }
)

    |(
{ before(grammarAccess.getMethodExpressionAccess().getGroup_15()); }
(rule__MethodExpression__Group_15__0)
{ after(grammarAccess.getMethodExpressionAccess().getGroup_15()); }
)

    |(
{ before(grammarAccess.getMethodExpressionAccess().getGroup_16()); }
(rule__MethodExpression__Group_16__0)
{ after(grammarAccess.getMethodExpressionAccess().getGroup_16()); }
)

    |(
{ before(grammarAccess.getMethodExpressionAccess().getGroup_17()); }
(rule__MethodExpression__Group_17__0)
{ after(grammarAccess.getMethodExpressionAccess().getGroup_17()); }
)

    |(
{ before(grammarAccess.getMethodExpressionAccess().getGroup_18()); }
(rule__MethodExpression__Group_18__0)
{ after(grammarAccess.getMethodExpressionAccess().getGroup_18()); }
)

    |(
{ before(grammarAccess.getMethodExpressionAccess().getGroup_19()); }
(rule__MethodExpression__Group_19__0)
{ after(grammarAccess.getMethodExpressionAccess().getGroup_19()); }
)

    |(
{ before(grammarAccess.getMethodExpressionAccess().getGroup_20()); }
(rule__MethodExpression__Group_20__0)
{ after(grammarAccess.getMethodExpressionAccess().getGroup_20()); }
)

    |(
{ before(grammarAccess.getMethodExpressionAccess().getGroup_21()); }
(rule__MethodExpression__Group_21__0)
{ after(grammarAccess.getMethodExpressionAccess().getGroup_21()); }
)

    |(
{ before(grammarAccess.getMethodExpressionAccess().getGroup_22()); }
(rule__MethodExpression__Group_22__0)
{ after(grammarAccess.getMethodExpressionAccess().getGroup_22()); }
)

    |(
{ before(grammarAccess.getMethodExpressionAccess().getGroup_23()); }
(rule__MethodExpression__Group_23__0)
{ after(grammarAccess.getMethodExpressionAccess().getGroup_23()); }
)

    |(
{ before(grammarAccess.getMethodExpressionAccess().getGroup_24()); }
(rule__MethodExpression__Group_24__0)
{ after(grammarAccess.getMethodExpressionAccess().getGroup_24()); }
)

    |(
{ before(grammarAccess.getMethodExpressionAccess().getGroup_25()); }
(rule__MethodExpression__Group_25__0)
{ after(grammarAccess.getMethodExpressionAccess().getGroup_25()); }
)

    |(
{ before(grammarAccess.getMethodExpressionAccess().getGroup_26()); }
(rule__MethodExpression__Group_26__0)
{ after(grammarAccess.getMethodExpressionAccess().getGroup_26()); }
)

    |(
{ before(grammarAccess.getMethodExpressionAccess().getGroup_27()); }
(rule__MethodExpression__Group_27__0)
{ after(grammarAccess.getMethodExpressionAccess().getGroup_27()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getPrimitiveTypeParserRuleCall_0()); }
	rulePrimitiveType
{ after(grammarAccess.getTypeAccess().getPrimitiveTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getClassOrInterfaceNameParserRuleCall_1()); }
	ruleClassOrInterfaceName
{ after(grammarAccess.getTypeAccess().getClassOrInterfaceNameParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getNumericTypeParserRuleCall_0()); }
	ruleNumericType
{ after(grammarAccess.getPrimitiveTypeAccess().getNumericTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeAccess().getBooleanKeyword_1()); }

	KEYWORD_64 

{ after(grammarAccess.getPrimitiveTypeAccess().getBooleanKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericTypeAccess().getIntegralTypeParserRuleCall_0()); }
	ruleIntegralType
{ after(grammarAccess.getNumericTypeAccess().getIntegralTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNumericTypeAccess().getFloatingPointTypeParserRuleCall_1()); }
	ruleFloatingPointType
{ after(grammarAccess.getNumericTypeAccess().getFloatingPointTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegralType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegralTypeAccess().getByteKeyword_0()); }

	KEYWORD_36 

{ after(grammarAccess.getIntegralTypeAccess().getByteKeyword_0()); }
)

    |(
{ before(grammarAccess.getIntegralTypeAccess().getShortKeyword_1()); }

	KEYWORD_52 

{ after(grammarAccess.getIntegralTypeAccess().getShortKeyword_1()); }
)

    |(
{ before(grammarAccess.getIntegralTypeAccess().getIntKeyword_2()); }

	KEYWORD_29 

{ after(grammarAccess.getIntegralTypeAccess().getIntKeyword_2()); }
)

    |(
{ before(grammarAccess.getIntegralTypeAccess().getLongKeyword_3()); }

	KEYWORD_38 

{ after(grammarAccess.getIntegralTypeAccess().getLongKeyword_3()); }
)

    |(
{ before(grammarAccess.getIntegralTypeAccess().getCharKeyword_4()); }

	KEYWORD_37 

{ after(grammarAccess.getIntegralTypeAccess().getCharKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingPointType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatingPointTypeAccess().getFloatKeyword_0()); }

	KEYWORD_50 

{ after(grammarAccess.getFloatingPointTypeAccess().getFloatKeyword_0()); }
)

    |(
{ before(grammarAccess.getFloatingPointTypeAccess().getDoubleKeyword_1()); }

	KEYWORD_57 

{ after(grammarAccess.getFloatingPointTypeAccess().getDoubleKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getTrueKeyword_0()); }

	KEYWORD_43 

{ after(grammarAccess.getBooleanLiteralAccess().getTrueKeyword_0()); }
)

    |(
{ before(grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1()); }

	KEYWORD_49 

{ after(grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getIntegerLiteralParserRuleCall_0()); }
	ruleIntegerLiteral
{ after(grammarAccess.getLiteralAccess().getIntegerLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_1()); }
	ruleBooleanLiteral
{ after(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_2()); }
	ruleStringLiteral
{ after(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getNullLiteralParserRuleCall_3()); }
	ruleNullLiteral
{ after(grammarAccess.getLiteralAccess().getNullLiteralParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdentifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedIdentifierAccess().getJavaLangBooleanKeyword_0()); }

	KEYWORD_111 

{ after(grammarAccess.getQualifiedIdentifierAccess().getJavaLangBooleanKeyword_0()); }
)

    |(
{ before(grammarAccess.getQualifiedIdentifierAccess().getJavaLangByteKeyword_1()); }

	KEYWORD_104 

{ after(grammarAccess.getQualifiedIdentifierAccess().getJavaLangByteKeyword_1()); }
)

    |(
{ before(grammarAccess.getQualifiedIdentifierAccess().getJavaLangCharacterKeyword_2()); }

	KEYWORD_119 

{ after(grammarAccess.getQualifiedIdentifierAccess().getJavaLangCharacterKeyword_2()); }
)

    |(
{ before(grammarAccess.getQualifiedIdentifierAccess().getJavaLangDoubleKeyword_3()); }

	KEYWORD_109 

{ after(grammarAccess.getQualifiedIdentifierAccess().getJavaLangDoubleKeyword_3()); }
)

    |(
{ before(grammarAccess.getQualifiedIdentifierAccess().getJavaLangFloatKeyword_4()); }

	KEYWORD_106 

{ after(grammarAccess.getQualifiedIdentifierAccess().getJavaLangFloatKeyword_4()); }
)

    |(
{ before(grammarAccess.getQualifiedIdentifierAccess().getJavaLangIntegerKeyword_5()); }

	KEYWORD_112 

{ after(grammarAccess.getQualifiedIdentifierAccess().getJavaLangIntegerKeyword_5()); }
)

    |(
{ before(grammarAccess.getQualifiedIdentifierAccess().getJavaLangLongKeyword_6()); }

	KEYWORD_105 

{ after(grammarAccess.getQualifiedIdentifierAccess().getJavaLangLongKeyword_6()); }
)

    |(
{ before(grammarAccess.getQualifiedIdentifierAccess().getJavaLangShortKeyword_7()); }

	KEYWORD_107 

{ after(grammarAccess.getQualifiedIdentifierAccess().getJavaLangShortKeyword_7()); }
)

    |(
{ before(grammarAccess.getQualifiedIdentifierAccess().getJavaLangStringKeyword_8()); }

	KEYWORD_110 

{ after(grammarAccess.getQualifiedIdentifierAccess().getJavaLangStringKeyword_8()); }
)

    |(
{ before(grammarAccess.getQualifiedIdentifierAccess().getGroup_9()); }
(rule__QualifiedIdentifier__Group_9__0)
{ after(grammarAccess.getQualifiedIdentifierAccess().getGroup_9()); }
)

    |(
{ before(grammarAccess.getQualifiedIdentifierAccess().getGroup_10()); }
(rule__QualifiedIdentifier__Group_10__0)
{ after(grammarAccess.getQualifiedIdentifierAccess().getGroup_10()); }
)

    |(
{ before(grammarAccess.getQualifiedIdentifierAccess().getGroup_11()); }
(rule__QualifiedIdentifier__Group_11__0)
{ after(grammarAccess.getQualifiedIdentifierAccess().getGroup_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrderByDirection__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderByDirectionAccess().getAscEnumLiteralDeclaration_0()); }
(	KEYWORD_26
)
{ after(grammarAccess.getOrderByDirectionAccess().getAscEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getOrderByDirectionAccess().getAscendingEnumLiteralDeclaration_1()); }
(	KEYWORD_82
)
{ after(grammarAccess.getOrderByDirectionAccess().getAscendingEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getOrderByDirectionAccess().getDescEnumLiteralDeclaration_2()); }
(	KEYWORD_33
)
{ after(grammarAccess.getOrderByDirectionAccess().getDescEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getOrderByDirectionAccess().getDescendingEnumLiteralDeclaration_3()); }
(	KEYWORD_92
)
{ after(grammarAccess.getOrderByDirectionAccess().getDescendingEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperatorAccess().getPositiveEnumLiteralDeclaration_0()); }
(	KEYWORD_7
)
{ after(grammarAccess.getUnaryOperatorAccess().getPositiveEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getUnaryOperatorAccess().getNegativeEnumLiteralDeclaration_1()); }
(	KEYWORD_9
)
{ after(grammarAccess.getUnaryOperatorAccess().getNegativeEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getUnaryOperatorAccess().getBitwiseNotEnumLiteralDeclaration_2()); }
(	KEYWORD_17
)
{ after(grammarAccess.getUnaryOperatorAccess().getBitwiseNotEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getUnaryOperatorAccess().getLogicalNotEnumLiteralDeclaration_3()); }
(	KEYWORD_1
)
{ after(grammarAccess.getUnaryOperatorAccess().getLogicalNotEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionOperatorAccess().getAddEnumLiteralDeclaration_0()); }
(	KEYWORD_7
)
{ after(grammarAccess.getAdditionOperatorAccess().getAddEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getAdditionOperatorAccess().getSubtractEnumLiteralDeclaration_1()); }
(	KEYWORD_9
)
{ after(grammarAccess.getAdditionOperatorAccess().getSubtractEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationOperatorAccess().getMultiplyEnumLiteralDeclaration_0()); }
(	KEYWORD_6
)
{ after(grammarAccess.getMultiplicationOperatorAccess().getMultiplyEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getMultiplicationOperatorAccess().getDivideEnumLiteralDeclaration_1()); }
(	KEYWORD_11
)
{ after(grammarAccess.getMultiplicationOperatorAccess().getDivideEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getMultiplicationOperatorAccess().getModuloEnumLiteralDeclaration_2()); }
(	KEYWORD_2
)
{ after(grammarAccess.getMultiplicationOperatorAccess().getModuloEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonOperatorAccess().getLessThenEnumLiteralDeclaration_0()); }
(	KEYWORD_14
)
{ after(grammarAccess.getComparisonOperatorAccess().getLessThenEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getComparisonOperatorAccess().getGreaterThenEnumLiteralDeclaration_1()); }
(	KEYWORD_15
)
{ after(grammarAccess.getComparisonOperatorAccess().getGreaterThenEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getComparisonOperatorAccess().getLessEqualEnumLiteralDeclaration_2()); }
(	KEYWORD_20
)
{ after(grammarAccess.getComparisonOperatorAccess().getLessEqualEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getComparisonOperatorAccess().getGreaterEqualEnumLiteralDeclaration_3()); }
(	KEYWORD_22
)
{ after(grammarAccess.getComparisonOperatorAccess().getGreaterEqualEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getComparisonOperatorAccess().getEqualEnumLiteralDeclaration_4()); }
(	KEYWORD_21
)
{ after(grammarAccess.getComparisonOperatorAccess().getEqualEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getComparisonOperatorAccess().getNotEqualEnumLiteralDeclaration_5()); }
(	KEYWORD_18
)
{ after(grammarAccess.getComparisonOperatorAccess().getNotEqualEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getComparisonOperatorAccess().getInstanceofEnumLiteralDeclaration_6()); }
(	KEYWORD_96
)
{ after(grammarAccess.getComparisonOperatorAccess().getInstanceofEnumLiteralDeclaration_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__SingleStringJDOQL__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleStringJDOQL__Group__0__Impl
	rule__SingleStringJDOQL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleStringJDOQL__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleStringJDOQLAccess().getSelectClauseAssignment_0()); }
(rule__SingleStringJDOQL__SelectClauseAssignment_0)
{ after(grammarAccess.getSingleStringJDOQLAccess().getSelectClauseAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleStringJDOQL__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleStringJDOQL__Group__1__Impl
	rule__SingleStringJDOQL__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleStringJDOQL__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleStringJDOQLAccess().getFromClauseAssignment_1()); }
(rule__SingleStringJDOQL__FromClauseAssignment_1)
{ after(grammarAccess.getSingleStringJDOQLAccess().getFromClauseAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleStringJDOQL__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleStringJDOQL__Group__2__Impl
	rule__SingleStringJDOQL__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleStringJDOQL__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleStringJDOQLAccess().getWhereClauseAssignment_2()); }
(rule__SingleStringJDOQL__WhereClauseAssignment_2)?
{ after(grammarAccess.getSingleStringJDOQLAccess().getWhereClauseAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleStringJDOQL__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleStringJDOQL__Group__3__Impl
	rule__SingleStringJDOQL__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleStringJDOQL__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleStringJDOQLAccess().getVariablesClauseAssignment_3()); }
(rule__SingleStringJDOQL__VariablesClauseAssignment_3)?
{ after(grammarAccess.getSingleStringJDOQLAccess().getVariablesClauseAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleStringJDOQL__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleStringJDOQL__Group__4__Impl
	rule__SingleStringJDOQL__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleStringJDOQL__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleStringJDOQLAccess().getParametersClauseAssignment_4()); }
(rule__SingleStringJDOQL__ParametersClauseAssignment_4)?
{ after(grammarAccess.getSingleStringJDOQLAccess().getParametersClauseAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleStringJDOQL__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleStringJDOQL__Group__5__Impl
	rule__SingleStringJDOQL__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleStringJDOQL__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleStringJDOQLAccess().getImportClauseAssignment_5()); }
(rule__SingleStringJDOQL__ImportClauseAssignment_5)?
{ after(grammarAccess.getSingleStringJDOQLAccess().getImportClauseAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleStringJDOQL__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleStringJDOQL__Group__6__Impl
	rule__SingleStringJDOQL__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleStringJDOQL__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleStringJDOQLAccess().getGroupByClauseAssignment_6()); }
(rule__SingleStringJDOQL__GroupByClauseAssignment_6)?
{ after(grammarAccess.getSingleStringJDOQLAccess().getGroupByClauseAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleStringJDOQL__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleStringJDOQL__Group__7__Impl
	rule__SingleStringJDOQL__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleStringJDOQL__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleStringJDOQLAccess().getOrderByClauseAssignment_7()); }
(rule__SingleStringJDOQL__OrderByClauseAssignment_7)?
{ after(grammarAccess.getSingleStringJDOQLAccess().getOrderByClauseAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleStringJDOQL__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleStringJDOQL__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleStringJDOQL__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleStringJDOQLAccess().getRangeClauseAssignment_8()); }
(rule__SingleStringJDOQL__RangeClauseAssignment_8)?
{ after(grammarAccess.getSingleStringJDOQLAccess().getRangeClauseAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__SelectClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectClause__Group__0__Impl
	rule__SelectClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectClauseAccess().getSelectClauseAction_0()); }
(

)
{ after(grammarAccess.getSelectClauseAccess().getSelectClauseAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectClause__Group__1__Impl
	rule__SelectClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectClauseAccess().getSELECTKeyword_1()); }

	KEYWORD_54 

{ after(grammarAccess.getSelectClauseAccess().getSELECTKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectClause__Group__2__Impl
	rule__SelectClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectClauseAccess().getIsUniqueAssignment_2()); }
(rule__SelectClause__IsUniqueAssignment_2)?
{ after(grammarAccess.getSelectClauseAccess().getIsUniqueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectClause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectClause__Group__3__Impl
	rule__SelectClause__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectClause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectClauseAccess().getResultClauseAssignment_3()); }
(rule__SelectClause__ResultClauseAssignment_3)?
{ after(grammarAccess.getSelectClauseAccess().getResultClauseAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectClause__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectClause__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectClause__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectClauseAccess().getIntoClauseAssignment_4()); }
(rule__SelectClause__IntoClauseAssignment_4)?
{ after(grammarAccess.getSelectClauseAccess().getIntoClauseAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ResultClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultClause__Group__0__Impl
	rule__ResultClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultClauseAccess().getIsDistinctAssignment_0()); }
(rule__ResultClause__IsDistinctAssignment_0)?
{ after(grammarAccess.getResultClauseAccess().getIsDistinctAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResultClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultClause__Group__1__Impl
	rule__ResultClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultClauseAccess().getResultSpecsAssignment_1()); }
(rule__ResultClause__ResultSpecsAssignment_1)
{ after(grammarAccess.getResultClauseAccess().getResultSpecsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResultClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultClauseAccess().getGroup_2()); }
(rule__ResultClause__Group_2__0)*
{ after(grammarAccess.getResultClauseAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ResultClause__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultClause__Group_2__0__Impl
	rule__ResultClause__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultClause__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultClauseAccess().getCommaKeyword_2_0()); }

	KEYWORD_8 

{ after(grammarAccess.getResultClauseAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResultClause__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultClause__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultClause__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultClauseAccess().getResultSpecsAssignment_2_1()); }
(rule__ResultClause__ResultSpecsAssignment_2_1)
{ after(grammarAccess.getResultClauseAccess().getResultSpecsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IntoClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntoClause__Group__0__Impl
	rule__IntoClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntoClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntoClauseAccess().getINTOKeyword_0()); }

	KEYWORD_35 

{ after(grammarAccess.getIntoClauseAccess().getINTOKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntoClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntoClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntoClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntoClauseAccess().getResultClassNameAssignment_1()); }
(rule__IntoClause__ResultClassNameAssignment_1)
{ after(grammarAccess.getIntoClauseAccess().getResultClassNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ResultSpec__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultSpec__Group__0__Impl
	rule__ResultSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultSpec__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultSpecAccess().getConditionalOrExpressionParserRuleCall_0()); }
	ruleConditionalOrExpression
{ after(grammarAccess.getResultSpecAccess().getConditionalOrExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResultSpec__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultSpec__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultSpec__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultSpecAccess().getResultNamingAssignment_1()); }
(rule__ResultSpec__ResultNamingAssignment_1)?
{ after(grammarAccess.getResultSpecAccess().getResultNamingAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ResultNaming__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultNaming__Group__0__Impl
	rule__ResultNaming__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultNaming__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultNamingAccess().getASKeyword_0()); }

	KEYWORD_23 

{ after(grammarAccess.getResultNamingAccess().getASKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResultNaming__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultNaming__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultNaming__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultNamingAccess().getIdentifierAssignment_1()); }
(rule__ResultNaming__IdentifierAssignment_1)
{ after(grammarAccess.getResultNamingAccess().getIdentifierAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FromClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FromClause__Group__0__Impl
	rule__FromClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FromClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromClauseAccess().getFROMKeyword_0()); }

	KEYWORD_34 

{ after(grammarAccess.getFromClauseAccess().getFROMKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FromClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FromClause__Group__1__Impl
	rule__FromClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FromClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromClauseAccess().getCandidateClassNameAssignment_1()); }
(rule__FromClause__CandidateClassNameAssignment_1)
{ after(grammarAccess.getFromClauseAccess().getCandidateClassNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FromClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FromClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FromClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromClauseAccess().getGroup_2()); }
(rule__FromClause__Group_2__0)?
{ after(grammarAccess.getFromClauseAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FromClause__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FromClause__Group_2__0__Impl
	rule__FromClause__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FromClause__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromClauseAccess().getIsExcludeSubclassesAssignment_2_0()); }
(rule__FromClause__IsExcludeSubclassesAssignment_2_0)
{ after(grammarAccess.getFromClauseAccess().getIsExcludeSubclassesAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FromClause__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FromClause__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FromClause__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromClauseAccess().getSUBCLASSESKeyword_2_1()); }

	KEYWORD_95 

{ after(grammarAccess.getFromClauseAccess().getSUBCLASSESKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WhereClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhereClause__Group__0__Impl
	rule__WhereClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhereClauseAccess().getWHEREKeyword_0()); }

	KEYWORD_47 

{ after(grammarAccess.getWhereClauseAccess().getWHEREKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhereClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhereClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhereClauseAccess().getFilterAssignment_1()); }
(rule__WhereClause__FilterAssignment_1)
{ after(grammarAccess.getWhereClauseAccess().getFilterAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariablesClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariablesClause__Group__0__Impl
	rule__VariablesClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariablesClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesClauseAccess().getVARIABLESKeyword_0()); }

	KEYWORD_88 

{ after(grammarAccess.getVariablesClauseAccess().getVARIABLESKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariablesClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariablesClause__Group__1__Impl
	rule__VariablesClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariablesClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesClauseAccess().getVariableDeclarationsAssignment_1()); }
(rule__VariablesClause__VariableDeclarationsAssignment_1)
{ after(grammarAccess.getVariablesClauseAccess().getVariableDeclarationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariablesClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariablesClause__Group__2__Impl
	rule__VariablesClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariablesClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesClauseAccess().getGroup_2()); }
(rule__VariablesClause__Group_2__0)*
{ after(grammarAccess.getVariablesClauseAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariablesClause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariablesClause__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariablesClause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesClauseAccess().getSemicolonKeyword_3()); }
(
	KEYWORD_13 
)?
{ after(grammarAccess.getVariablesClauseAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__VariablesClause__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariablesClause__Group_2__0__Impl
	rule__VariablesClause__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariablesClause__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesClauseAccess().getSemicolonKeyword_2_0()); }

	KEYWORD_13 

{ after(grammarAccess.getVariablesClauseAccess().getSemicolonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariablesClause__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariablesClause__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariablesClause__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesClauseAccess().getVariableDeclarationsAssignment_2_1()); }
(rule__VariablesClause__VariableDeclarationsAssignment_2_1)
{ after(grammarAccess.getVariablesClauseAccess().getVariableDeclarationsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__0__Impl
	rule__VariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_0()); }
(rule__VariableDeclaration__TypeAssignment_0)
{ after(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getVariableNameAssignment_1()); }
(rule__VariableDeclaration__VariableNameAssignment_1)
{ after(grammarAccess.getVariableDeclarationAccess().getVariableNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParametersClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParametersClause__Group__0__Impl
	rule__ParametersClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersClauseAccess().getPARAMETERSKeyword_0()); }

	KEYWORD_94 

{ after(grammarAccess.getParametersClauseAccess().getPARAMETERSKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParametersClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParametersClause__Group__1__Impl
	rule__ParametersClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersClauseAccess().getParameterDeclarationsAssignment_1()); }
(rule__ParametersClause__ParameterDeclarationsAssignment_1)
{ after(grammarAccess.getParametersClauseAccess().getParameterDeclarationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParametersClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParametersClause__Group__2__Impl
	rule__ParametersClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersClauseAccess().getGroup_2()); }
(rule__ParametersClause__Group_2__0)*
{ after(grammarAccess.getParametersClauseAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParametersClause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParametersClause__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersClause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersClauseAccess().getCommaKeyword_3()); }
(
	KEYWORD_8 
)?
{ after(grammarAccess.getParametersClauseAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ParametersClause__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParametersClause__Group_2__0__Impl
	rule__ParametersClause__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersClause__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersClauseAccess().getCommaKeyword_2_0()); }

	KEYWORD_8 

{ after(grammarAccess.getParametersClauseAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParametersClause__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParametersClause__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersClause__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersClauseAccess().getParameterDeclarationsAssignment_2_1()); }
(rule__ParametersClause__ParameterDeclarationsAssignment_2_1)
{ after(grammarAccess.getParametersClauseAccess().getParameterDeclarationsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDeclaration__Group__0__Impl
	rule__ParameterDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getTypeAssignment_0()); }
(rule__ParameterDeclaration__TypeAssignment_0)
{ after(grammarAccess.getParameterDeclarationAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getDeclaredParameterNameAssignment_1()); }
(rule__ParameterDeclaration__DeclaredParameterNameAssignment_1)
{ after(grammarAccess.getParameterDeclarationAccess().getDeclaredParameterNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImportClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportClause__Group__0__Impl
	rule__ImportClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportClauseAccess().getImportDeclarationsAssignment_0()); }
(rule__ImportClause__ImportDeclarationsAssignment_0)
{ after(grammarAccess.getImportClauseAccess().getImportDeclarationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportClause__Group__1__Impl
	rule__ImportClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportClauseAccess().getGroup_1()); }
(rule__ImportClause__Group_1__0)*
{ after(grammarAccess.getImportClauseAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportClauseAccess().getSemicolonKeyword_2()); }
(
	KEYWORD_13 
)?
{ after(grammarAccess.getImportClauseAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ImportClause__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportClause__Group_1__0__Impl
	rule__ImportClause__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportClauseAccess().getSemicolonKeyword_1_0()); }

	KEYWORD_13 

{ after(grammarAccess.getImportClauseAccess().getSemicolonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportClause__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportClause__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportClauseAccess().getImportDeclarationsAssignment_1_1()); }
(rule__ImportClause__ImportDeclarationsAssignment_1_1)
{ after(grammarAccess.getImportClauseAccess().getImportDeclarationsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImportDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportDeclaration__Group__0__Impl
	rule__ImportDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getImportKeyword_0()); }

	KEYWORD_60 

{ after(grammarAccess.getImportDeclarationAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getQualifiedIdentifierParserRuleCall_1()); }
	ruleQualifiedIdentifier
{ after(grammarAccess.getImportDeclarationAccess().getQualifiedIdentifierParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GroupByClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupByClause__Group__0__Impl
	rule__GroupByClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByClauseAccess().getGROUPKeyword_0()); }

	KEYWORD_44 

{ after(grammarAccess.getGroupByClauseAccess().getGROUPKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupByClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupByClause__Group__1__Impl
	rule__GroupByClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByClauseAccess().getBYKeyword_1()); }

	KEYWORD_24 

{ after(grammarAccess.getGroupByClauseAccess().getBYKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupByClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupByClause__Group__2__Impl
	rule__GroupByClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByClauseAccess().getGroupingAssignment_2()); }
(rule__GroupByClause__GroupingAssignment_2)
{ after(grammarAccess.getGroupByClauseAccess().getGroupingAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupByClause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupByClause__Group__3__Impl
	rule__GroupByClause__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByClause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByClauseAccess().getGroup_3()); }
(rule__GroupByClause__Group_3__0)*
{ after(grammarAccess.getGroupByClauseAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupByClause__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupByClause__Group__4__Impl
	rule__GroupByClause__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByClause__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByClauseAccess().getCommaKeyword_4()); }
(
	KEYWORD_8 
)?
{ after(grammarAccess.getGroupByClauseAccess().getCommaKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupByClause__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupByClause__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByClause__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByClauseAccess().getHavingClauseAssignment_5()); }
(rule__GroupByClause__HavingClauseAssignment_5)?
{ after(grammarAccess.getGroupByClauseAccess().getHavingClauseAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__GroupByClause__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupByClause__Group_3__0__Impl
	rule__GroupByClause__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByClause__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByClauseAccess().getCommaKeyword_3_0()); }

	KEYWORD_8 

{ after(grammarAccess.getGroupByClauseAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupByClause__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupByClause__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByClause__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByClauseAccess().getGroupingAssignment_3_1()); }
(rule__GroupByClause__GroupingAssignment_3_1)
{ after(grammarAccess.getGroupByClauseAccess().getGroupingAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__HavingClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HavingClause__Group__0__Impl
	rule__HavingClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HavingClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHavingClauseAccess().getHAVINGKeyword_0()); }

	KEYWORD_53 

{ after(grammarAccess.getHavingClauseAccess().getHAVINGKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HavingClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HavingClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HavingClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHavingClauseAccess().getHavingAssignment_1()); }
(rule__HavingClause__HavingAssignment_1)
{ after(grammarAccess.getHavingClauseAccess().getHavingAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrderByClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderByClause__Group__0__Impl
	rule__OrderByClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderByClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderByClauseAccess().getORDERKeyword_0()); }

	KEYWORD_45 

{ after(grammarAccess.getOrderByClauseAccess().getORDERKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrderByClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderByClause__Group__1__Impl
	rule__OrderByClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderByClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderByClauseAccess().getBYKeyword_1()); }

	KEYWORD_24 

{ after(grammarAccess.getOrderByClauseAccess().getBYKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrderByClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderByClause__Group__2__Impl
	rule__OrderByClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderByClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderByClauseAccess().getOrderingAssignment_2()); }
(rule__OrderByClause__OrderingAssignment_2)
{ after(grammarAccess.getOrderByClauseAccess().getOrderingAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrderByClause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderByClause__Group__3__Impl
	rule__OrderByClause__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderByClause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderByClauseAccess().getGroup_3()); }
(rule__OrderByClause__Group_3__0)*
{ after(grammarAccess.getOrderByClauseAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrderByClause__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderByClause__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderByClause__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderByClauseAccess().getCommaKeyword_4()); }
(
	KEYWORD_8 
)?
{ after(grammarAccess.getOrderByClauseAccess().getCommaKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__OrderByClause__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderByClause__Group_3__0__Impl
	rule__OrderByClause__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderByClause__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderByClauseAccess().getCommaKeyword_3_0()); }

	KEYWORD_8 

{ after(grammarAccess.getOrderByClauseAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrderByClause__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderByClause__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderByClause__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderByClauseAccess().getOrderingAssignment_3_1()); }
(rule__OrderByClause__OrderingAssignment_3_1)
{ after(grammarAccess.getOrderByClauseAccess().getOrderingAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrderBySpec__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderBySpec__Group__0__Impl
	rule__OrderBySpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderBySpec__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderBySpecAccess().getConditionalOrExpressionParserRuleCall_0()); }
	ruleConditionalOrExpression
{ after(grammarAccess.getOrderBySpecAccess().getConditionalOrExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrderBySpec__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderBySpec__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderBySpec__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderBySpecAccess().getDirectionAssignment_1()); }
(rule__OrderBySpec__DirectionAssignment_1)
{ after(grammarAccess.getOrderBySpecAccess().getDirectionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RangeClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeClause__Group__0__Impl
	rule__RangeClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeClauseAccess().getRANGEKeyword_0()); }

	KEYWORD_46 

{ after(grammarAccess.getRangeClauseAccess().getRANGEKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeClause__Group__1__Impl
	rule__RangeClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeClauseAccess().getStartAssignment_1()); }
(rule__RangeClause__StartAssignment_1)
{ after(grammarAccess.getRangeClauseAccess().getStartAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeClause__Group__2__Impl
	rule__RangeClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeClauseAccess().getCommaKeyword_2()); }

	KEYWORD_8 

{ after(grammarAccess.getRangeClauseAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeClause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeClause__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeClauseAccess().getEndAssignment_3()); }
(rule__RangeClause__EndAssignment_3)
{ after(grammarAccess.getRangeClauseAccess().getEndAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ConditionalOrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalOrExpression__Group__0__Impl
	rule__ConditionalOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalOrExpressionAccess().getConditionalAndExpressionParserRuleCall_0()); }
	ruleConditionalAndExpression
{ after(grammarAccess.getConditionalOrExpressionAccess().getConditionalAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalOrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalOrExpressionAccess().getGroup_1()); }
(rule__ConditionalOrExpression__Group_1__0)*
{ after(grammarAccess.getConditionalOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConditionalOrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalOrExpression__Group_1__0__Impl
	rule__ConditionalOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalOrExpressionAccess().getConditionalOrExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getConditionalOrExpressionAccess().getConditionalOrExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalOrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalOrExpression__Group_1__1__Impl
	rule__ConditionalOrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_1()); }

	KEYWORD_25 

{ after(grammarAccess.getConditionalOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalOrExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalOrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalOrExpressionAccess().getRightAssignment_1_2()); }
(rule__ConditionalOrExpression__RightAssignment_1_2)
{ after(grammarAccess.getConditionalOrExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConditionalAndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalAndExpression__Group__0__Impl
	rule__ConditionalAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAndExpressionAccess().getSimpleOrExpressionParserRuleCall_0()); }
	ruleSimpleOrExpression
{ after(grammarAccess.getConditionalAndExpressionAccess().getSimpleOrExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalAndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAndExpressionAccess().getGroup_1()); }
(rule__ConditionalAndExpression__Group_1__0)*
{ after(grammarAccess.getConditionalAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConditionalAndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalAndExpression__Group_1__0__Impl
	rule__ConditionalAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAndExpressionAccess().getConditionalAndExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getConditionalAndExpressionAccess().getConditionalAndExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalAndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalAndExpression__Group_1__1__Impl
	rule__ConditionalAndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAndExpressionAccess().getAmpersandAmpersandKeyword_1_1()); }

	KEYWORD_19 

{ after(grammarAccess.getConditionalAndExpressionAccess().getAmpersandAmpersandKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalAndExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalAndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAndExpressionAccess().getRightAssignment_1_2()); }
(rule__ConditionalAndExpression__RightAssignment_1_2)
{ after(grammarAccess.getConditionalAndExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SimpleOrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleOrExpression__Group__0__Impl
	rule__SimpleOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleOrExpressionAccess().getSimpleAndExpressionParserRuleCall_0()); }
	ruleSimpleAndExpression
{ after(grammarAccess.getSimpleOrExpressionAccess().getSimpleAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleOrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleOrExpressionAccess().getGroup_1()); }
(rule__SimpleOrExpression__Group_1__0)*
{ after(grammarAccess.getSimpleOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleOrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleOrExpression__Group_1__0__Impl
	rule__SimpleOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleOrExpressionAccess().getSimpleOrExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getSimpleOrExpressionAccess().getSimpleOrExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleOrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleOrExpression__Group_1__1__Impl
	rule__SimpleOrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleOrExpressionAccess().getVerticalLineKeyword_1_1()); }

	KEYWORD_16 

{ after(grammarAccess.getSimpleOrExpressionAccess().getVerticalLineKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleOrExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleOrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOrExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleOrExpressionAccess().getRightAssignment_1_2()); }
(rule__SimpleOrExpression__RightAssignment_1_2)
{ after(grammarAccess.getSimpleOrExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SimpleAndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleAndExpression__Group__0__Impl
	rule__SimpleAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleAndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleAndExpressionAccess().getComparisonOperatorExpressionParserRuleCall_0()); }
	ruleComparisonOperatorExpression
{ after(grammarAccess.getSimpleAndExpressionAccess().getComparisonOperatorExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleAndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleAndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleAndExpressionAccess().getGroup_1()); }
(rule__SimpleAndExpression__Group_1__0)*
{ after(grammarAccess.getSimpleAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleAndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleAndExpression__Group_1__0__Impl
	rule__SimpleAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleAndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleAndExpressionAccess().getSimpleAndExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getSimpleAndExpressionAccess().getSimpleAndExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleAndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleAndExpression__Group_1__1__Impl
	rule__SimpleAndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleAndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleAndExpressionAccess().getAmpersandKeyword_1_1()); }

	KEYWORD_3 

{ after(grammarAccess.getSimpleAndExpressionAccess().getAmpersandKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleAndExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleAndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleAndExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleAndExpressionAccess().getRightAssignment_1_2()); }
(rule__SimpleAndExpression__RightAssignment_1_2)
{ after(grammarAccess.getSimpleAndExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ComparisonOperatorExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComparisonOperatorExpression__Group__0__Impl
	rule__ComparisonOperatorExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperatorExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonOperatorExpressionAccess().getAdditionExpressionParserRuleCall_0()); }
	ruleAdditionExpression
{ after(grammarAccess.getComparisonOperatorExpressionAccess().getAdditionExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonOperatorExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComparisonOperatorExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperatorExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonOperatorExpressionAccess().getGroup_1()); }
(rule__ComparisonOperatorExpression__Group_1__0)*
{ after(grammarAccess.getComparisonOperatorExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ComparisonOperatorExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComparisonOperatorExpression__Group_1__0__Impl
	rule__ComparisonOperatorExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperatorExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonOperatorExpressionAccess().getComparisonOperatorExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getComparisonOperatorExpressionAccess().getComparisonOperatorExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonOperatorExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComparisonOperatorExpression__Group_1__1__Impl
	rule__ComparisonOperatorExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperatorExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonOperatorExpressionAccess().getOperatorAssignment_1_1()); }
(rule__ComparisonOperatorExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getComparisonOperatorExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonOperatorExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComparisonOperatorExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperatorExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonOperatorExpressionAccess().getRightAssignment_1_2()); }
(rule__ComparisonOperatorExpression__RightAssignment_1_2)
{ after(grammarAccess.getComparisonOperatorExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AdditionExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionExpression__Group__0__Impl
	rule__AdditionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionExpressionAccess().getMultiplicationExpressionParserRuleCall_0()); }
	ruleMultiplicationExpression
{ after(grammarAccess.getAdditionExpressionAccess().getMultiplicationExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionExpressionAccess().getGroup_1()); }
(rule__AdditionExpression__Group_1__0)*
{ after(grammarAccess.getAdditionExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditionExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionExpression__Group_1__0__Impl
	rule__AdditionExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionExpressionAccess().getAdditionExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAdditionExpressionAccess().getAdditionExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionExpression__Group_1__1__Impl
	rule__AdditionExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionExpressionAccess().getOperatorAssignment_1_1()); }
(rule__AdditionExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getAdditionExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionExpressionAccess().getRightAssignment_1_2()); }
(rule__AdditionExpression__RightAssignment_1_2)
{ after(grammarAccess.getAdditionExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MultiplicationExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicationExpression__Group__0__Impl
	rule__MultiplicationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
	ruleUnaryExpression
{ after(grammarAccess.getMultiplicationExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicationExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationExpressionAccess().getGroup_1()); }
(rule__MultiplicationExpression__Group_1__0)*
{ after(grammarAccess.getMultiplicationExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicationExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicationExpression__Group_1__0__Impl
	rule__MultiplicationExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationExpressionAccess().getMultiplicationExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getMultiplicationExpressionAccess().getMultiplicationExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicationExpression__Group_1__1__Impl
	rule__MultiplicationExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationExpressionAccess().getOperatorAssignment_1_1()); }
(rule__MultiplicationExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getMultiplicationExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicationExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationExpressionAccess().getRightAssignment_1_2()); }
(rule__MultiplicationExpression__RightAssignment_1_2)
{ after(grammarAccess.getMultiplicationExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_0__0__Impl
	rule__UnaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getLeftParenthesisKeyword_0_0()); }

	KEYWORD_4 

{ after(grammarAccess.getUnaryExpressionAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_0__1__Impl
	rule__UnaryExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getCastTypeAssignment_0_1()); }
(rule__UnaryExpression__CastTypeAssignment_0_1)
{ after(grammarAccess.getUnaryExpressionAccess().getCastTypeAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_0__2__Impl
	rule__UnaryExpression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getRightParenthesisKeyword_0_2()); }

	KEYWORD_5 

{ after(grammarAccess.getUnaryExpressionAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getRightAssignment_0_3()); }
(rule__UnaryExpression__RightAssignment_0_3)
{ after(grammarAccess.getUnaryExpressionAccess().getRightAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__UnaryExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_1__0__Impl
	rule__UnaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getUnaryOperatorAssignment_1_0()); }
(rule__UnaryExpression__UnaryOperatorAssignment_1_0)?
{ after(grammarAccess.getUnaryExpressionAccess().getUnaryOperatorAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getRightAssignment_1_1()); }
(rule__UnaryExpression__RightAssignment_1_1)
{ after(grammarAccess.getUnaryExpressionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FieldAccessExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldAccessExpression__Group_1__0__Impl
	rule__FieldAccessExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAccessExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccessExpressionAccess().getParameterOrFieldOrMethodExpressionParserRuleCall_1_0()); }
	ruleParameterOrFieldOrMethodExpression
{ after(grammarAccess.getFieldAccessExpressionAccess().getParameterOrFieldOrMethodExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldAccessExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldAccessExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAccessExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccessExpressionAccess().getGroup_1_1()); }
(rule__FieldAccessExpression__Group_1_1__0)*
{ after(grammarAccess.getFieldAccessExpressionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FieldAccessExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldAccessExpression__Group_1_1__0__Impl
	rule__FieldAccessExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAccessExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccessExpressionAccess().getFieldAccessExpressionLeftAction_1_1_0()); }
(

)
{ after(grammarAccess.getFieldAccessExpressionAccess().getFieldAccessExpressionLeftAction_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldAccessExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldAccessExpression__Group_1_1__1__Impl
	rule__FieldAccessExpression__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAccessExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccessExpressionAccess().getFullStopKeyword_1_1_1()); }

	KEYWORD_10 

{ after(grammarAccess.getFieldAccessExpressionAccess().getFullStopKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldAccessExpression__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldAccessExpression__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAccessExpression__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccessExpressionAccess().getRightAssignment_1_1_2()); }
(rule__FieldAccessExpression__RightAssignment_1_1_2)
{ after(grammarAccess.getFieldAccessExpressionAccess().getRightAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ParameterOrFieldOrMethodExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterOrFieldOrMethodExpression__Group_3__0__Impl
	rule__ParameterOrFieldOrMethodExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterOrFieldOrMethodExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getColonKeyword_3_0()); }

	KEYWORD_12 

{ after(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getColonKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterOrFieldOrMethodExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterOrFieldOrMethodExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterOrFieldOrMethodExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getParameterNameAssignment_3_1()); }
(rule__ParameterOrFieldOrMethodExpression__ParameterNameAssignment_3_1)
{ after(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getParameterNameAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StaticMethodExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_0__0__Impl
	rule__StaticMethodExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_0__1__Impl
	rule__StaticMethodExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getMathAbsKeyword_0_1()); }

	KEYWORD_72 

{ after(grammarAccess.getStaticMethodExpressionAccess().getMathAbsKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_0__2__Impl
	rule__StaticMethodExpression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_0_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_0__3__Impl
	rule__StaticMethodExpression__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_0_3()); }
(rule__StaticMethodExpression__NumberAssignment_0_3)
{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_0_4()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticMethodExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_1__0__Impl
	rule__StaticMethodExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_1_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_1__1__Impl
	rule__StaticMethodExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getMathSqrtKeyword_1_1()); }

	KEYWORD_87 

{ after(grammarAccess.getStaticMethodExpressionAccess().getMathSqrtKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_1__2__Impl
	rule__StaticMethodExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_1_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_1__3__Impl
	rule__StaticMethodExpression__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_1_3()); }
(rule__StaticMethodExpression__NumberAssignment_1_3)
{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_1_4()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticMethodExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_2__0__Impl
	rule__StaticMethodExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_2_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_2__1__Impl
	rule__StaticMethodExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getMathCosKeyword_2_1()); }

	KEYWORD_73 

{ after(grammarAccess.getStaticMethodExpressionAccess().getMathCosKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_2__2__Impl
	rule__StaticMethodExpression__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_2_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_2__3__Impl
	rule__StaticMethodExpression__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_2_3()); }
(rule__StaticMethodExpression__NumberAssignment_2_3)
{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_2_4()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticMethodExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_3__0__Impl
	rule__StaticMethodExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_3_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_3__1__Impl
	rule__StaticMethodExpression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getMathSinKeyword_3_1()); }

	KEYWORD_76 

{ after(grammarAccess.getStaticMethodExpressionAccess().getMathSinKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_3__2__Impl
	rule__StaticMethodExpression__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_3_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_3__3__Impl
	rule__StaticMethodExpression__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_3_3()); }
(rule__StaticMethodExpression__NumberAssignment_3_3)
{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_3_4()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticMethodExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_4__0__Impl
	rule__StaticMethodExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_4_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_4__1__Impl
	rule__StaticMethodExpression__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getMathTanKeyword_4_1()); }

	KEYWORD_77 

{ after(grammarAccess.getStaticMethodExpressionAccess().getMathTanKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_4__2__Impl
	rule__StaticMethodExpression__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_4_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_4__3__Impl
	rule__StaticMethodExpression__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_4_3()); }
(rule__StaticMethodExpression__NumberAssignment_4_3)
{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_4_4()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticMethodExpression__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_5__0__Impl
	rule__StaticMethodExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_5_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_5__1__Impl
	rule__StaticMethodExpression__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getMathAcosKeyword_5_1()); }

	KEYWORD_83 

{ after(grammarAccess.getStaticMethodExpressionAccess().getMathAcosKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_5__2__Impl
	rule__StaticMethodExpression__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_5_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_5__3__Impl
	rule__StaticMethodExpression__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_5_3()); }
(rule__StaticMethodExpression__NumberAssignment_5_3)
{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_5_4()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticMethodExpression__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_6__0__Impl
	rule__StaticMethodExpression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_6_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_6__1__Impl
	rule__StaticMethodExpression__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getMathAsinKeyword_6_1()); }

	KEYWORD_84 

{ after(grammarAccess.getStaticMethodExpressionAccess().getMathAsinKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_6__2__Impl
	rule__StaticMethodExpression__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_6_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_6__3__Impl
	rule__StaticMethodExpression__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_6_3()); }
(rule__StaticMethodExpression__NumberAssignment_6_3)
{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_6__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_6__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_6__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_6_4()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_6_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticMethodExpression__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_7__0__Impl
	rule__StaticMethodExpression__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_7_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_7__1__Impl
	rule__StaticMethodExpression__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getMathAtanKeyword_7_1()); }

	KEYWORD_85 

{ after(grammarAccess.getStaticMethodExpressionAccess().getMathAtanKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_7__2__Impl
	rule__StaticMethodExpression__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_7_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_7__3__Impl
	rule__StaticMethodExpression__Group_7__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_7__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_7_3()); }
(rule__StaticMethodExpression__NumberAssignment_7_3)
{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_7_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_7__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_7__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_7__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_7_4()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_7_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticMethodExpression__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_8__0__Impl
	rule__StaticMethodExpression__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_8_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_8__1__Impl
	rule__StaticMethodExpression__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getMathCeilKeyword_8_1()); }

	KEYWORD_86 

{ after(grammarAccess.getStaticMethodExpressionAccess().getMathCeilKeyword_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_8__2__Impl
	rule__StaticMethodExpression__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_8_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_8__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_8__3__Impl
	rule__StaticMethodExpression__Group_8__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_8__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_8_3()); }
(rule__StaticMethodExpression__NumberAssignment_8_3)
{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_8_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_8__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_8__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_8__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_8_4()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_8_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticMethodExpression__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_9__0__Impl
	rule__StaticMethodExpression__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_9_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_9__1__Impl
	rule__StaticMethodExpression__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getMathExpKeyword_9_1()); }

	KEYWORD_74 

{ after(grammarAccess.getStaticMethodExpressionAccess().getMathExpKeyword_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_9__2__Impl
	rule__StaticMethodExpression__Group_9__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_9_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_9__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_9__3__Impl
	rule__StaticMethodExpression__Group_9__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_9__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_9_3()); }
(rule__StaticMethodExpression__NumberAssignment_9_3)
{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_9_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_9__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_9__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_9__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_9_4()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_9_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticMethodExpression__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_10__0__Impl
	rule__StaticMethodExpression__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_10_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_10__1__Impl
	rule__StaticMethodExpression__Group_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getMathFloorKeyword_10_1()); }

	KEYWORD_93 

{ after(grammarAccess.getStaticMethodExpressionAccess().getMathFloorKeyword_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_10__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_10__2__Impl
	rule__StaticMethodExpression__Group_10__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_10__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_10_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_10_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_10__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_10__3__Impl
	rule__StaticMethodExpression__Group_10__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_10__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_10_3()); }
(rule__StaticMethodExpression__NumberAssignment_10_3)
{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_10_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_10__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_10__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_10__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_10_4()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_10_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticMethodExpression__Group_11__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_11__0__Impl
	rule__StaticMethodExpression__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_11__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_11_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_11__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_11__1__Impl
	rule__StaticMethodExpression__Group_11__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_11__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getMathLogKeyword_11_1()); }

	KEYWORD_75 

{ after(grammarAccess.getStaticMethodExpressionAccess().getMathLogKeyword_11_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_11__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_11__2__Impl
	rule__StaticMethodExpression__Group_11__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_11__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_11_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_11_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_11__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_11__3__Impl
	rule__StaticMethodExpression__Group_11__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_11__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_11_3()); }
(rule__StaticMethodExpression__NumberAssignment_11_3)
{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_11_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_11__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_11__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_11__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_11_4()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_11_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticMethodExpression__Group_12__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_12__0__Impl
	rule__StaticMethodExpression__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_12__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_12_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_12__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_12__1__Impl
	rule__StaticMethodExpression__Group_12__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_12__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathAbsKeyword_12_1()); }

	KEYWORD_113 

{ after(grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathAbsKeyword_12_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_12__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_12__2__Impl
	rule__StaticMethodExpression__Group_12__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_12__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_12_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_12_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_12__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_12__3__Impl
	rule__StaticMethodExpression__Group_12__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_12__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_12_3()); }
(rule__StaticMethodExpression__NumberAssignment_12_3)
{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_12_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_12__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_12__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_12__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_12_4()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_12_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticMethodExpression__Group_13__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_13__0__Impl
	rule__StaticMethodExpression__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_13__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_13_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_13__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_13__1__Impl
	rule__StaticMethodExpression__Group_13__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_13__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathSqrtKeyword_13_1()); }

	KEYWORD_124 

{ after(grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathSqrtKeyword_13_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_13__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_13__2__Impl
	rule__StaticMethodExpression__Group_13__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_13__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_13_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_13_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_13__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_13__3__Impl
	rule__StaticMethodExpression__Group_13__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_13__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_13_3()); }
(rule__StaticMethodExpression__NumberAssignment_13_3)
{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_13_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_13__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_13__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_13__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_13_4()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_13_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticMethodExpression__Group_14__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_14__0__Impl
	rule__StaticMethodExpression__Group_14__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_14__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_14_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_14_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_14__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_14__1__Impl
	rule__StaticMethodExpression__Group_14__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_14__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathCosKeyword_14_1()); }

	KEYWORD_114 

{ after(grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathCosKeyword_14_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_14__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_14__2__Impl
	rule__StaticMethodExpression__Group_14__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_14__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_14_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_14_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_14__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_14__3__Impl
	rule__StaticMethodExpression__Group_14__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_14__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_14_3()); }
(rule__StaticMethodExpression__NumberAssignment_14_3)
{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_14_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_14__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_14__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_14__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_14_4()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_14_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticMethodExpression__Group_15__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_15__0__Impl
	rule__StaticMethodExpression__Group_15__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_15__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_15_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_15_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_15__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_15__1__Impl
	rule__StaticMethodExpression__Group_15__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_15__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathSinKeyword_15_1()); }

	KEYWORD_117 

{ after(grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathSinKeyword_15_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_15__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_15__2__Impl
	rule__StaticMethodExpression__Group_15__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_15__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_15_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_15_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_15__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_15__3__Impl
	rule__StaticMethodExpression__Group_15__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_15__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_15_3()); }
(rule__StaticMethodExpression__NumberAssignment_15_3)
{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_15_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_15__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_15__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_15__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_15_4()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_15_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticMethodExpression__Group_16__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_16__0__Impl
	rule__StaticMethodExpression__Group_16__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_16__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_16_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_16_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_16__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_16__1__Impl
	rule__StaticMethodExpression__Group_16__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_16__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathTanKeyword_16_1()); }

	KEYWORD_118 

{ after(grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathTanKeyword_16_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_16__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_16__2__Impl
	rule__StaticMethodExpression__Group_16__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_16__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_16_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_16_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_16__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_16__3__Impl
	rule__StaticMethodExpression__Group_16__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_16__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_16_3()); }
(rule__StaticMethodExpression__NumberAssignment_16_3)
{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_16_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_16__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_16__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_16__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_16_4()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_16_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticMethodExpression__Group_17__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_17__0__Impl
	rule__StaticMethodExpression__Group_17__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_17__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_17_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_17_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_17__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_17__1__Impl
	rule__StaticMethodExpression__Group_17__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_17__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathAcosKeyword_17_1()); }

	KEYWORD_120 

{ after(grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathAcosKeyword_17_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_17__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_17__2__Impl
	rule__StaticMethodExpression__Group_17__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_17__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_17_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_17_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_17__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_17__3__Impl
	rule__StaticMethodExpression__Group_17__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_17__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_17_3()); }
(rule__StaticMethodExpression__NumberAssignment_17_3)
{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_17_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_17__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_17__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_17__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_17_4()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_17_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticMethodExpression__Group_18__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_18__0__Impl
	rule__StaticMethodExpression__Group_18__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_18__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_18_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_18_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_18__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_18__1__Impl
	rule__StaticMethodExpression__Group_18__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_18__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathAsinKeyword_18_1()); }

	KEYWORD_121 

{ after(grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathAsinKeyword_18_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_18__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_18__2__Impl
	rule__StaticMethodExpression__Group_18__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_18__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_18_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_18_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_18__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_18__3__Impl
	rule__StaticMethodExpression__Group_18__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_18__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_18_3()); }
(rule__StaticMethodExpression__NumberAssignment_18_3)
{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_18_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_18__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_18__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_18__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_18_4()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_18_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticMethodExpression__Group_19__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_19__0__Impl
	rule__StaticMethodExpression__Group_19__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_19__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_19_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_19_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_19__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_19__1__Impl
	rule__StaticMethodExpression__Group_19__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_19__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathAtanKeyword_19_1()); }

	KEYWORD_122 

{ after(grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathAtanKeyword_19_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_19__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_19__2__Impl
	rule__StaticMethodExpression__Group_19__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_19__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_19_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_19_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_19__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_19__3__Impl
	rule__StaticMethodExpression__Group_19__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_19__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_19_3()); }
(rule__StaticMethodExpression__NumberAssignment_19_3)
{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_19_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_19__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_19__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_19__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_19_4()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_19_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticMethodExpression__Group_20__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_20__0__Impl
	rule__StaticMethodExpression__Group_20__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_20__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_20_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_20_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_20__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_20__1__Impl
	rule__StaticMethodExpression__Group_20__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_20__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathCeilKeyword_20_1()); }

	KEYWORD_123 

{ after(grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathCeilKeyword_20_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_20__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_20__2__Impl
	rule__StaticMethodExpression__Group_20__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_20__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_20_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_20_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_20__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_20__3__Impl
	rule__StaticMethodExpression__Group_20__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_20__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_20_3()); }
(rule__StaticMethodExpression__NumberAssignment_20_3)
{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_20_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_20__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_20__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_20__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_20_4()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_20_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticMethodExpression__Group_21__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_21__0__Impl
	rule__StaticMethodExpression__Group_21__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_21__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_21_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_21_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_21__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_21__1__Impl
	rule__StaticMethodExpression__Group_21__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_21__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathExpKeyword_21_1()); }

	KEYWORD_115 

{ after(grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathExpKeyword_21_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_21__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_21__2__Impl
	rule__StaticMethodExpression__Group_21__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_21__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_21_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_21_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_21__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_21__3__Impl
	rule__StaticMethodExpression__Group_21__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_21__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_21_3()); }
(rule__StaticMethodExpression__NumberAssignment_21_3)
{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_21_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_21__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_21__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_21__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_21_4()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_21_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticMethodExpression__Group_22__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_22__0__Impl
	rule__StaticMethodExpression__Group_22__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_22__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_22_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_22_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_22__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_22__1__Impl
	rule__StaticMethodExpression__Group_22__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_22__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathFloorKeyword_22_1()); }

	KEYWORD_126 

{ after(grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathFloorKeyword_22_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_22__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_22__2__Impl
	rule__StaticMethodExpression__Group_22__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_22__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_22_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_22_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_22__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_22__3__Impl
	rule__StaticMethodExpression__Group_22__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_22__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_22_3()); }
(rule__StaticMethodExpression__NumberAssignment_22_3)
{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_22_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_22__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_22__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_22__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_22_4()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_22_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticMethodExpression__Group_23__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_23__0__Impl
	rule__StaticMethodExpression__Group_23__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_23__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_23_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_23_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_23__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_23__1__Impl
	rule__StaticMethodExpression__Group_23__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_23__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathLogKeyword_23_1()); }

	KEYWORD_116 

{ after(grammarAccess.getStaticMethodExpressionAccess().getJavaLangMathLogKeyword_23_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_23__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_23__2__Impl
	rule__StaticMethodExpression__Group_23__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_23__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_23_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_23_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_23__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_23__3__Impl
	rule__StaticMethodExpression__Group_23__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_23__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_23_3()); }
(rule__StaticMethodExpression__NumberAssignment_23_3)
{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberAssignment_23_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_23__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_23__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_23__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_23_4()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_23_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticMethodExpression__Group_24__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_24__0__Impl
	rule__StaticMethodExpression__Group_24__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_24__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_24_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_24_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_24__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_24__1__Impl
	rule__StaticMethodExpression__Group_24__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_24__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getJDOHelperGetObjectIdKeyword_24_1()); }

	KEYWORD_127 

{ after(grammarAccess.getStaticMethodExpressionAccess().getJDOHelperGetObjectIdKeyword_24_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_24__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_24__2__Impl
	rule__StaticMethodExpression__Group_24__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_24__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_24_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_24_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_24__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_24__3__Impl
	rule__StaticMethodExpression__Group_24__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_24__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getPersistableAssignment_24_3()); }
(rule__StaticMethodExpression__PersistableAssignment_24_3)
{ after(grammarAccess.getStaticMethodExpressionAccess().getPersistableAssignment_24_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_24__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_24__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_24__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_24_4()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_24_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticMethodExpression__Group_25__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_25__0__Impl
	rule__StaticMethodExpression__Group_25__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_25__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_25_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_25_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_25__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_25__1__Impl
	rule__StaticMethodExpression__Group_25__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_25__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getJDOHelperGetVersionKeyword_25_1()); }

	KEYWORD_125 

{ after(grammarAccess.getStaticMethodExpressionAccess().getJDOHelperGetVersionKeyword_25_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_25__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_25__2__Impl
	rule__StaticMethodExpression__Group_25__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_25__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_25_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_25_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_25__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_25__3__Impl
	rule__StaticMethodExpression__Group_25__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_25__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getPersistableAssignment_25_3()); }
(rule__StaticMethodExpression__PersistableAssignment_25_3)
{ after(grammarAccess.getStaticMethodExpressionAccess().getPersistableAssignment_25_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_25__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_25__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_25__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_25_4()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_25_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticMethodExpression__Group_26__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_26__0__Impl
	rule__StaticMethodExpression__Group_26__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_26__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_26_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_26_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_26__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_26__1__Impl
	rule__StaticMethodExpression__Group_26__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_26__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getJavaxJdoJDOHelperGetObjectIdKeyword_26_1()); }

	KEYWORD_129 

{ after(grammarAccess.getStaticMethodExpressionAccess().getJavaxJdoJDOHelperGetObjectIdKeyword_26_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_26__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_26__2__Impl
	rule__StaticMethodExpression__Group_26__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_26__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_26_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_26_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_26__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_26__3__Impl
	rule__StaticMethodExpression__Group_26__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_26__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getPersistableAssignment_26_3()); }
(rule__StaticMethodExpression__PersistableAssignment_26_3)
{ after(grammarAccess.getStaticMethodExpressionAccess().getPersistableAssignment_26_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_26__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_26__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_26__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_26_4()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_26_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticMethodExpression__Group_27__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_27__0__Impl
	rule__StaticMethodExpression__Group_27__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_27__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_27_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_27_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_27__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_27__1__Impl
	rule__StaticMethodExpression__Group_27__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_27__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getJavaxJdoJDOHelperGetVersionKeyword_27_1()); }

	KEYWORD_128 

{ after(grammarAccess.getStaticMethodExpressionAccess().getJavaxJdoJDOHelperGetVersionKeyword_27_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_27__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_27__2__Impl
	rule__StaticMethodExpression__Group_27__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_27__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_27_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_27_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_27__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_27__3__Impl
	rule__StaticMethodExpression__Group_27__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_27__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getPersistableAssignment_27_3()); }
(rule__StaticMethodExpression__PersistableAssignment_27_3)
{ after(grammarAccess.getStaticMethodExpressionAccess().getPersistableAssignment_27_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_27__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_27__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_27__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_27_4()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_27_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticMethodExpression__Group_28__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_28__0__Impl
	rule__StaticMethodExpression__Group_28__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_28__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_28_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_28_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_28__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_28__1__Impl
	rule__StaticMethodExpression__Group_28__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_28__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getCountKeyword_28_1()); }

	KEYWORD_48 

{ after(grammarAccess.getStaticMethodExpressionAccess().getCountKeyword_28_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_28__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_28__2__Impl
	rule__StaticMethodExpression__Group_28__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_28__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_28_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_28_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_28__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_28__3__Impl
	rule__StaticMethodExpression__Group_28__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_28__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getIsDistinctAssignment_28_3()); }
(rule__StaticMethodExpression__IsDistinctAssignment_28_3)?
{ after(grammarAccess.getStaticMethodExpressionAccess().getIsDistinctAssignment_28_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_28__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_28__4__Impl
	rule__StaticMethodExpression__Group_28__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_28__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getAggregateArgumentAssignment_28_4()); }
(rule__StaticMethodExpression__AggregateArgumentAssignment_28_4)
{ after(grammarAccess.getStaticMethodExpressionAccess().getAggregateArgumentAssignment_28_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_28__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_28__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_28__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_28_5()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_28_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__StaticMethodExpression__Group_29__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_29__0__Impl
	rule__StaticMethodExpression__Group_29__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_29__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_29_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_29_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_29__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_29__1__Impl
	rule__StaticMethodExpression__Group_29__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_29__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getSumKeyword_29_1()); }

	KEYWORD_32 

{ after(grammarAccess.getStaticMethodExpressionAccess().getSumKeyword_29_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_29__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_29__2__Impl
	rule__StaticMethodExpression__Group_29__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_29__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_29_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_29_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_29__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_29__3__Impl
	rule__StaticMethodExpression__Group_29__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_29__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getIsDistinctAssignment_29_3()); }
(rule__StaticMethodExpression__IsDistinctAssignment_29_3)?
{ after(grammarAccess.getStaticMethodExpressionAccess().getIsDistinctAssignment_29_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_29__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_29__4__Impl
	rule__StaticMethodExpression__Group_29__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_29__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getAggregateArgumentAssignment_29_4()); }
(rule__StaticMethodExpression__AggregateArgumentAssignment_29_4)
{ after(grammarAccess.getStaticMethodExpressionAccess().getAggregateArgumentAssignment_29_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_29__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_29__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_29__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_29_5()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_29_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__StaticMethodExpression__Group_30__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_30__0__Impl
	rule__StaticMethodExpression__Group_30__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_30__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_30_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_30_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_30__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_30__1__Impl
	rule__StaticMethodExpression__Group_30__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_30__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getMinKeyword_30_1()); }

	KEYWORD_31 

{ after(grammarAccess.getStaticMethodExpressionAccess().getMinKeyword_30_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_30__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_30__2__Impl
	rule__StaticMethodExpression__Group_30__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_30__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_30_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_30_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_30__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_30__3__Impl
	rule__StaticMethodExpression__Group_30__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_30__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getAggregateArgumentAssignment_30_3()); }
(rule__StaticMethodExpression__AggregateArgumentAssignment_30_3)
{ after(grammarAccess.getStaticMethodExpressionAccess().getAggregateArgumentAssignment_30_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_30__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_30__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_30__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_30_4()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_30_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticMethodExpression__Group_31__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_31__0__Impl
	rule__StaticMethodExpression__Group_31__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_31__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_31_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_31_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_31__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_31__1__Impl
	rule__StaticMethodExpression__Group_31__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_31__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getMaxKeyword_31_1()); }

	KEYWORD_30 

{ after(grammarAccess.getStaticMethodExpressionAccess().getMaxKeyword_31_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_31__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_31__2__Impl
	rule__StaticMethodExpression__Group_31__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_31__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_31_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_31_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_31__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_31__3__Impl
	rule__StaticMethodExpression__Group_31__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_31__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getAggregateArgumentAssignment_31_3()); }
(rule__StaticMethodExpression__AggregateArgumentAssignment_31_3)
{ after(grammarAccess.getStaticMethodExpressionAccess().getAggregateArgumentAssignment_31_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_31__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_31__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_31__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_31_4()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_31_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StaticMethodExpression__Group_32__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_32__0__Impl
	rule__StaticMethodExpression__Group_32__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_32__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_32_0()); }
(

)
{ after(grammarAccess.getStaticMethodExpressionAccess().getExpressionAction_32_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_32__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_32__1__Impl
	rule__StaticMethodExpression__Group_32__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_32__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getAvgKeyword_32_1()); }

	KEYWORD_27 

{ after(grammarAccess.getStaticMethodExpressionAccess().getAvgKeyword_32_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_32__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_32__2__Impl
	rule__StaticMethodExpression__Group_32__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_32__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_32_2()); }

	KEYWORD_4 

{ after(grammarAccess.getStaticMethodExpressionAccess().getLeftParenthesisKeyword_32_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_32__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_32__3__Impl
	rule__StaticMethodExpression__Group_32__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_32__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getIsDistinctAssignment_32_3()); }
(rule__StaticMethodExpression__IsDistinctAssignment_32_3)?
{ after(grammarAccess.getStaticMethodExpressionAccess().getIsDistinctAssignment_32_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_32__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_32__4__Impl
	rule__StaticMethodExpression__Group_32__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_32__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getAggregateArgumentAssignment_32_4()); }
(rule__StaticMethodExpression__AggregateArgumentAssignment_32_4)
{ after(grammarAccess.getStaticMethodExpressionAccess().getAggregateArgumentAssignment_32_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticMethodExpression__Group_32__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticMethodExpression__Group_32__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__Group_32__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_32_5()); }

	KEYWORD_5 

{ after(grammarAccess.getStaticMethodExpressionAccess().getRightParenthesisKeyword_32_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__MethodExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_0__0__Impl
	rule__MethodExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getMethodExpressionAccess().getExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_0__1__Impl
	rule__MethodExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getContainsKeyword_0_1()); }

	KEYWORD_78 

{ after(grammarAccess.getMethodExpressionAccess().getContainsKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_0__2__Impl
	rule__MethodExpression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_0_2()); }

	KEYWORD_4 

{ after(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_0__3__Impl
	rule__MethodExpression__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getElementAssignment_0_3()); }
(rule__MethodExpression__ElementAssignment_0_3)
{ after(grammarAccess.getMethodExpressionAccess().getElementAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_0_4()); }

	KEYWORD_5 

{ after(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MethodExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_1__0__Impl
	rule__MethodExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getExpressionAction_1_0()); }
(

)
{ after(grammarAccess.getMethodExpressionAccess().getExpressionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_1__1__Impl
	rule__MethodExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getGetKeyword_1_1()); }

	KEYWORD_28 

{ after(grammarAccess.getMethodExpressionAccess().getGetKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_1__2__Impl
	rule__MethodExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_1_2()); }

	KEYWORD_4 

{ after(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_1__3__Impl
	rule__MethodExpression__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getArgAssignment_1_3()); }
(rule__MethodExpression__ArgAssignment_1_3)
{ after(grammarAccess.getMethodExpressionAccess().getArgAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_1_4()); }

	KEYWORD_5 

{ after(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MethodExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_2__0__Impl
	rule__MethodExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getExpressionAction_2_0()); }
(

)
{ after(grammarAccess.getMethodExpressionAccess().getExpressionAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_2__1__Impl
	rule__MethodExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getIsEmptyKeyword_2_1()); }

	KEYWORD_68 

{ after(grammarAccess.getMethodExpressionAccess().getIsEmptyKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_2__2__Impl
	rule__MethodExpression__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_2_2()); }

	KEYWORD_4 

{ after(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_2_3()); }

	KEYWORD_5 

{ after(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MethodExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_3__0__Impl
	rule__MethodExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getExpressionAction_3_0()); }
(

)
{ after(grammarAccess.getMethodExpressionAccess().getExpressionAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_3__1__Impl
	rule__MethodExpression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getSizeKeyword_3_1()); }

	KEYWORD_40 

{ after(grammarAccess.getMethodExpressionAccess().getSizeKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_3__2__Impl
	rule__MethodExpression__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_3_2()); }

	KEYWORD_4 

{ after(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_3_3()); }

	KEYWORD_5 

{ after(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MethodExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_4__0__Impl
	rule__MethodExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getExpressionAction_4_0()); }
(

)
{ after(grammarAccess.getMethodExpressionAccess().getExpressionAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_4__1__Impl
	rule__MethodExpression__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getContainsKeyKeyword_4_1()); }

	KEYWORD_99 

{ after(grammarAccess.getMethodExpressionAccess().getContainsKeyKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_4__2__Impl
	rule__MethodExpression__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_4_2()); }

	KEYWORD_4 

{ after(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_4__3__Impl
	rule__MethodExpression__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getKeyAssignment_4_3()); }
(rule__MethodExpression__KeyAssignment_4_3)
{ after(grammarAccess.getMethodExpressionAccess().getKeyAssignment_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_4_4()); }

	KEYWORD_5 

{ after(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MethodExpression__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_5__0__Impl
	rule__MethodExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getExpressionAction_5_0()); }
(

)
{ after(grammarAccess.getMethodExpressionAccess().getExpressionAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_5__1__Impl
	rule__MethodExpression__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getContainsValueKeyword_5_1()); }

	KEYWORD_103 

{ after(grammarAccess.getMethodExpressionAccess().getContainsValueKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_5__2__Impl
	rule__MethodExpression__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_5_2()); }

	KEYWORD_4 

{ after(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_5__3__Impl
	rule__MethodExpression__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getValueAssignment_5_3()); }
(rule__MethodExpression__ValueAssignment_5_3)
{ after(grammarAccess.getMethodExpressionAccess().getValueAssignment_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_5_4()); }

	KEYWORD_5 

{ after(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MethodExpression__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_6__0__Impl
	rule__MethodExpression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getExpressionAction_6_0()); }
(

)
{ after(grammarAccess.getMethodExpressionAccess().getExpressionAction_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_6__1__Impl
	rule__MethodExpression__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getContainsEntryKeyword_6_1()); }

	KEYWORD_102 

{ after(grammarAccess.getMethodExpressionAccess().getContainsEntryKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_6__2__Impl
	rule__MethodExpression__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_6_2()); }

	KEYWORD_4 

{ after(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_6__3__Impl
	rule__MethodExpression__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getKeyAssignment_6_3()); }
(rule__MethodExpression__KeyAssignment_6_3)
{ after(grammarAccess.getMethodExpressionAccess().getKeyAssignment_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_6__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_6__4__Impl
	rule__MethodExpression__Group_6__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_6__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getCommaKeyword_6_4()); }

	KEYWORD_8 

{ after(grammarAccess.getMethodExpressionAccess().getCommaKeyword_6_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_6__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_6__5__Impl
	rule__MethodExpression__Group_6__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_6__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getValueAssignment_6_5()); }
(rule__MethodExpression__ValueAssignment_6_5)
{ after(grammarAccess.getMethodExpressionAccess().getValueAssignment_6_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_6__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_6__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_6__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_6_6()); }

	KEYWORD_5 

{ after(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_6_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__MethodExpression__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_7__0__Impl
	rule__MethodExpression__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getExpressionAction_7_0()); }
(

)
{ after(grammarAccess.getMethodExpressionAccess().getExpressionAction_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_7__1__Impl
	rule__MethodExpression__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getCharAtKeyword_7_1()); }

	KEYWORD_56 

{ after(grammarAccess.getMethodExpressionAccess().getCharAtKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_7__2__Impl
	rule__MethodExpression__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_7_2()); }

	KEYWORD_4 

{ after(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_7__3__Impl
	rule__MethodExpression__Group_7__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_7__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getIndexAssignment_7_3()); }
(rule__MethodExpression__IndexAssignment_7_3)
{ after(grammarAccess.getMethodExpressionAccess().getIndexAssignment_7_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_7__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_7__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_7__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_7_4()); }

	KEYWORD_5 

{ after(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_7_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MethodExpression__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_8__0__Impl
	rule__MethodExpression__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getExpressionAction_8_0()); }
(

)
{ after(grammarAccess.getMethodExpressionAccess().getExpressionAction_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_8__1__Impl
	rule__MethodExpression__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getEndsWithKeyword_8_1()); }

	KEYWORD_79 

{ after(grammarAccess.getMethodExpressionAccess().getEndsWithKeyword_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_8__2__Impl
	rule__MethodExpression__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_8_2()); }

	KEYWORD_4 

{ after(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_8__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_8__3__Impl
	rule__MethodExpression__Group_8__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_8__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getStringAssignment_8_3()); }
(rule__MethodExpression__StringAssignment_8_3)
{ after(grammarAccess.getMethodExpressionAccess().getStringAssignment_8_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_8__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_8__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_8__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_8_4()); }

	KEYWORD_5 

{ after(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_8_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MethodExpression__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_9__0__Impl
	rule__MethodExpression__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getExpressionAction_9_0()); }
(

)
{ after(grammarAccess.getMethodExpressionAccess().getExpressionAction_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_9__1__Impl
	rule__MethodExpression__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getEqualsKeyword_9_1()); }

	KEYWORD_58 

{ after(grammarAccess.getMethodExpressionAccess().getEqualsKeyword_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_9__2__Impl
	rule__MethodExpression__Group_9__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_9_2()); }

	KEYWORD_4 

{ after(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_9__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_9__3__Impl
	rule__MethodExpression__Group_9__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_9__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getStringAssignment_9_3()); }
(rule__MethodExpression__StringAssignment_9_3)
{ after(grammarAccess.getMethodExpressionAccess().getStringAssignment_9_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_9__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_9__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_9__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_9_4()); }

	KEYWORD_5 

{ after(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_9_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MethodExpression__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_10__0__Impl
	rule__MethodExpression__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getExpressionAction_10_0()); }
(

)
{ after(grammarAccess.getMethodExpressionAccess().getExpressionAction_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_10__1__Impl
	rule__MethodExpression__Group_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getEqualsIgnoreCaseKeyword_10_1()); }

	KEYWORD_108 

{ after(grammarAccess.getMethodExpressionAccess().getEqualsIgnoreCaseKeyword_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_10__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_10__2__Impl
	rule__MethodExpression__Group_10__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_10__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_10_2()); }

	KEYWORD_4 

{ after(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_10_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_10__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_10__3__Impl
	rule__MethodExpression__Group_10__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_10__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getStringAssignment_10_3()); }
(rule__MethodExpression__StringAssignment_10_3)
{ after(grammarAccess.getMethodExpressionAccess().getStringAssignment_10_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_10__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_10__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_10__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_10_4()); }

	KEYWORD_5 

{ after(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_10_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MethodExpression__Group_11__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_11__0__Impl
	rule__MethodExpression__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_11__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getExpressionAction_11_0()); }
(

)
{ after(grammarAccess.getMethodExpressionAccess().getExpressionAction_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_11__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_11__1__Impl
	rule__MethodExpression__Group_11__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_11__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getIndexOfKeyword_11_1()); }

	KEYWORD_67 

{ after(grammarAccess.getMethodExpressionAccess().getIndexOfKeyword_11_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_11__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_11__2__Impl
	rule__MethodExpression__Group_11__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_11__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_11_2()); }

	KEYWORD_4 

{ after(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_11_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_11__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_11__3__Impl
	rule__MethodExpression__Group_11__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_11__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getStringAssignment_11_3()); }
(rule__MethodExpression__StringAssignment_11_3)
{ after(grammarAccess.getMethodExpressionAccess().getStringAssignment_11_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_11__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_11__4__Impl
	rule__MethodExpression__Group_11__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_11__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getGroup_11_4()); }
(rule__MethodExpression__Group_11_4__0)?
{ after(grammarAccess.getMethodExpressionAccess().getGroup_11_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_11__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_11__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_11__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_11_5()); }

	KEYWORD_5 

{ after(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_11_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__MethodExpression__Group_11_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_11_4__0__Impl
	rule__MethodExpression__Group_11_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_11_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getCommaKeyword_11_4_0()); }

	KEYWORD_8 

{ after(grammarAccess.getMethodExpressionAccess().getCommaKeyword_11_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_11_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_11_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_11_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getFromIndexAssignment_11_4_1()); }
(rule__MethodExpression__FromIndexAssignment_11_4_1)
{ after(grammarAccess.getMethodExpressionAccess().getFromIndexAssignment_11_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MethodExpression__Group_12__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_12__0__Impl
	rule__MethodExpression__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_12__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getExpressionAction_12_0()); }
(

)
{ after(grammarAccess.getMethodExpressionAccess().getExpressionAction_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_12__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_12__1__Impl
	rule__MethodExpression__Group_12__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_12__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getLengthKeyword_12_1()); }

	KEYWORD_62 

{ after(grammarAccess.getMethodExpressionAccess().getLengthKeyword_12_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_12__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_12__2__Impl
	rule__MethodExpression__Group_12__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_12__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_12_2()); }

	KEYWORD_4 

{ after(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_12_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_12__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_12__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_12__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_12_3()); }

	KEYWORD_5 

{ after(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_12_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MethodExpression__Group_13__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_13__0__Impl
	rule__MethodExpression__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_13__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getExpressionAction_13_0()); }
(

)
{ after(grammarAccess.getMethodExpressionAccess().getExpressionAction_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_13__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_13__1__Impl
	rule__MethodExpression__Group_13__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_13__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getMatchesKeyword_13_1()); }

	KEYWORD_69 

{ after(grammarAccess.getMethodExpressionAccess().getMatchesKeyword_13_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_13__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_13__2__Impl
	rule__MethodExpression__Group_13__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_13__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_13_2()); }

	KEYWORD_4 

{ after(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_13_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_13__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_13__3__Impl
	rule__MethodExpression__Group_13__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_13__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRegexAssignment_13_3()); }
(rule__MethodExpression__RegexAssignment_13_3)
{ after(grammarAccess.getMethodExpressionAccess().getRegexAssignment_13_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_13__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_13__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_13__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_13_4()); }

	KEYWORD_5 

{ after(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_13_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MethodExpression__Group_14__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_14__0__Impl
	rule__MethodExpression__Group_14__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_14__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getExpressionAction_14_0()); }
(

)
{ after(grammarAccess.getMethodExpressionAccess().getExpressionAction_14_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_14__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_14__1__Impl
	rule__MethodExpression__Group_14__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_14__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getReplaceAllKeyword_14_1()); }

	KEYWORD_97 

{ after(grammarAccess.getMethodExpressionAccess().getReplaceAllKeyword_14_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_14__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_14__2__Impl
	rule__MethodExpression__Group_14__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_14__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_14_2()); }

	KEYWORD_4 

{ after(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_14_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_14__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_14__3__Impl
	rule__MethodExpression__Group_14__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_14__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRegexAssignment_14_3()); }
(rule__MethodExpression__RegexAssignment_14_3)
{ after(grammarAccess.getMethodExpressionAccess().getRegexAssignment_14_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_14__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_14__4__Impl
	rule__MethodExpression__Group_14__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_14__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getCommaKeyword_14_4()); }

	KEYWORD_8 

{ after(grammarAccess.getMethodExpressionAccess().getCommaKeyword_14_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_14__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_14__5__Impl
	rule__MethodExpression__Group_14__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_14__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getReplacementAssignment_14_5()); }
(rule__MethodExpression__ReplacementAssignment_14_5)
{ after(grammarAccess.getMethodExpressionAccess().getReplacementAssignment_14_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_14__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_14__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_14__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_14_6()); }

	KEYWORD_5 

{ after(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_14_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__MethodExpression__Group_15__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_15__0__Impl
	rule__MethodExpression__Group_15__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_15__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getExpressionAction_15_0()); }
(

)
{ after(grammarAccess.getMethodExpressionAccess().getExpressionAction_15_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_15__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_15__1__Impl
	rule__MethodExpression__Group_15__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_15__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getStartsWithKeyword_15_1()); }

	KEYWORD_98 

{ after(grammarAccess.getMethodExpressionAccess().getStartsWithKeyword_15_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_15__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_15__2__Impl
	rule__MethodExpression__Group_15__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_15__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_15_2()); }

	KEYWORD_4 

{ after(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_15_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_15__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_15__3__Impl
	rule__MethodExpression__Group_15__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_15__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getStringAssignment_15_3()); }
(rule__MethodExpression__StringAssignment_15_3)
{ after(grammarAccess.getMethodExpressionAccess().getStringAssignment_15_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_15__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_15__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_15__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_15_4()); }

	KEYWORD_5 

{ after(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_15_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MethodExpression__Group_16__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_16__0__Impl
	rule__MethodExpression__Group_16__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_16__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getExpressionAction_16_0()); }
(

)
{ after(grammarAccess.getMethodExpressionAccess().getExpressionAction_16_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_16__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_16__1__Impl
	rule__MethodExpression__Group_16__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_16__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getSubstringKeyword_16_1()); }

	KEYWORD_91 

{ after(grammarAccess.getMethodExpressionAccess().getSubstringKeyword_16_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_16__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_16__2__Impl
	rule__MethodExpression__Group_16__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_16__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_16_2()); }

	KEYWORD_4 

{ after(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_16_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_16__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_16__3__Impl
	rule__MethodExpression__Group_16__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_16__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getBeginIndexAssignment_16_3()); }
(rule__MethodExpression__BeginIndexAssignment_16_3)
{ after(grammarAccess.getMethodExpressionAccess().getBeginIndexAssignment_16_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_16__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_16__4__Impl
	rule__MethodExpression__Group_16__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_16__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getGroup_16_4()); }
(rule__MethodExpression__Group_16_4__0)?
{ after(grammarAccess.getMethodExpressionAccess().getGroup_16_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_16__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_16__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_16__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_16_5()); }

	KEYWORD_5 

{ after(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_16_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__MethodExpression__Group_16_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_16_4__0__Impl
	rule__MethodExpression__Group_16_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_16_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getCommaKeyword_16_4_0()); }

	KEYWORD_8 

{ after(grammarAccess.getMethodExpressionAccess().getCommaKeyword_16_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_16_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_16_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_16_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getEndIndexAssignment_16_4_1()); }
(rule__MethodExpression__EndIndexAssignment_16_4_1)
{ after(grammarAccess.getMethodExpressionAccess().getEndIndexAssignment_16_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MethodExpression__Group_17__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_17__0__Impl
	rule__MethodExpression__Group_17__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_17__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getExpressionAction_17_0()); }
(

)
{ after(grammarAccess.getMethodExpressionAccess().getExpressionAction_17_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_17__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_17__1__Impl
	rule__MethodExpression__Group_17__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_17__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getToLowerCaseKeyword_17_1()); }

	KEYWORD_100 

{ after(grammarAccess.getMethodExpressionAccess().getToLowerCaseKeyword_17_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_17__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_17__2__Impl
	rule__MethodExpression__Group_17__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_17__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_17_2()); }

	KEYWORD_4 

{ after(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_17_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_17__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_17__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_17__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_17_3()); }

	KEYWORD_5 

{ after(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_17_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MethodExpression__Group_18__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_18__0__Impl
	rule__MethodExpression__Group_18__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_18__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getExpressionAction_18_0()); }
(

)
{ after(grammarAccess.getMethodExpressionAccess().getExpressionAction_18_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_18__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_18__1__Impl
	rule__MethodExpression__Group_18__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_18__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getToUpperCaseKeyword_18_1()); }

	KEYWORD_101 

{ after(grammarAccess.getMethodExpressionAccess().getToUpperCaseKeyword_18_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_18__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_18__2__Impl
	rule__MethodExpression__Group_18__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_18__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_18_2()); }

	KEYWORD_4 

{ after(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_18_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_18__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_18__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_18__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_18_3()); }

	KEYWORD_5 

{ after(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_18_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MethodExpression__Group_19__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_19__0__Impl
	rule__MethodExpression__Group_19__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_19__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getExpressionAction_19_0()); }
(

)
{ after(grammarAccess.getMethodExpressionAccess().getExpressionAction_19_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_19__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_19__1__Impl
	rule__MethodExpression__Group_19__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_19__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getTrimKeyword_19_1()); }

	KEYWORD_42 

{ after(grammarAccess.getMethodExpressionAccess().getTrimKeyword_19_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_19__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_19__2__Impl
	rule__MethodExpression__Group_19__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_19__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_19_2()); }

	KEYWORD_4 

{ after(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_19_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_19__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_19__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_19__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_19_3()); }

	KEYWORD_5 

{ after(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_19_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MethodExpression__Group_20__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_20__0__Impl
	rule__MethodExpression__Group_20__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_20__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getExpressionAction_20_0()); }
(

)
{ after(grammarAccess.getMethodExpressionAccess().getExpressionAction_20_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_20__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_20__1__Impl
	rule__MethodExpression__Group_20__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_20__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getGetDayKeyword_20_1()); }

	KEYWORD_59 

{ after(grammarAccess.getMethodExpressionAccess().getGetDayKeyword_20_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_20__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_20__2__Impl
	rule__MethodExpression__Group_20__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_20__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_20_2()); }

	KEYWORD_4 

{ after(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_20_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_20__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_20__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_20__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_20_3()); }

	KEYWORD_5 

{ after(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_20_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MethodExpression__Group_21__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_21__0__Impl
	rule__MethodExpression__Group_21__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_21__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getExpressionAction_21_0()); }
(

)
{ after(grammarAccess.getMethodExpressionAccess().getExpressionAction_21_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_21__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_21__1__Impl
	rule__MethodExpression__Group_21__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_21__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getGetMonthKeyword_21_1()); }

	KEYWORD_80 

{ after(grammarAccess.getMethodExpressionAccess().getGetMonthKeyword_21_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_21__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_21__2__Impl
	rule__MethodExpression__Group_21__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_21__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_21_2()); }

	KEYWORD_4 

{ after(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_21_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_21__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_21__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_21__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_21_3()); }

	KEYWORD_5 

{ after(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_21_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MethodExpression__Group_22__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_22__0__Impl
	rule__MethodExpression__Group_22__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_22__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getExpressionAction_22_0()); }
(

)
{ after(grammarAccess.getMethodExpressionAccess().getExpressionAction_22_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_22__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_22__1__Impl
	rule__MethodExpression__Group_22__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_22__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getGetYearKeyword_22_1()); }

	KEYWORD_66 

{ after(grammarAccess.getMethodExpressionAccess().getGetYearKeyword_22_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_22__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_22__2__Impl
	rule__MethodExpression__Group_22__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_22__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_22_2()); }

	KEYWORD_4 

{ after(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_22_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_22__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_22__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_22__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_22_3()); }

	KEYWORD_5 

{ after(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_22_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MethodExpression__Group_23__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_23__0__Impl
	rule__MethodExpression__Group_23__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_23__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getExpressionAction_23_0()); }
(

)
{ after(grammarAccess.getMethodExpressionAccess().getExpressionAction_23_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_23__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_23__1__Impl
	rule__MethodExpression__Group_23__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_23__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getGetHourKeyword_23_1()); }

	KEYWORD_65 

{ after(grammarAccess.getMethodExpressionAccess().getGetHourKeyword_23_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_23__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_23__2__Impl
	rule__MethodExpression__Group_23__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_23__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_23_2()); }

	KEYWORD_4 

{ after(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_23_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_23__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_23__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_23__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_23_3()); }

	KEYWORD_5 

{ after(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_23_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MethodExpression__Group_24__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_24__0__Impl
	rule__MethodExpression__Group_24__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_24__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getExpressionAction_24_0()); }
(

)
{ after(grammarAccess.getMethodExpressionAccess().getExpressionAction_24_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_24__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_24__1__Impl
	rule__MethodExpression__Group_24__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_24__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getGetMinuteKeyword_24_1()); }

	KEYWORD_89 

{ after(grammarAccess.getMethodExpressionAccess().getGetMinuteKeyword_24_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_24__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_24__2__Impl
	rule__MethodExpression__Group_24__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_24__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_24_2()); }

	KEYWORD_4 

{ after(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_24_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_24__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_24__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_24__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_24_3()); }

	KEYWORD_5 

{ after(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_24_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MethodExpression__Group_25__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_25__0__Impl
	rule__MethodExpression__Group_25__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_25__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getExpressionAction_25_0()); }
(

)
{ after(grammarAccess.getMethodExpressionAccess().getExpressionAction_25_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_25__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_25__1__Impl
	rule__MethodExpression__Group_25__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_25__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getGetSecondKeyword_25_1()); }

	KEYWORD_90 

{ after(grammarAccess.getMethodExpressionAccess().getGetSecondKeyword_25_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_25__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_25__2__Impl
	rule__MethodExpression__Group_25__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_25__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_25_2()); }

	KEYWORD_4 

{ after(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_25_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_25__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_25__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_25__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_25_3()); }

	KEYWORD_5 

{ after(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_25_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MethodExpression__Group_26__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_26__0__Impl
	rule__MethodExpression__Group_26__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_26__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getExpressionAction_26_0()); }
(

)
{ after(grammarAccess.getMethodExpressionAccess().getExpressionAction_26_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_26__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_26__1__Impl
	rule__MethodExpression__Group_26__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_26__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getOrdinalKeyword_26_1()); }

	KEYWORD_70 

{ after(grammarAccess.getMethodExpressionAccess().getOrdinalKeyword_26_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_26__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_26__2__Impl
	rule__MethodExpression__Group_26__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_26__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_26_2()); }

	KEYWORD_4 

{ after(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_26_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_26__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_26__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_26__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_26_3()); }

	KEYWORD_5 

{ after(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_26_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MethodExpression__Group_27__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_27__0__Impl
	rule__MethodExpression__Group_27__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_27__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getExpressionAction_27_0()); }
(

)
{ after(grammarAccess.getMethodExpressionAccess().getExpressionAction_27_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_27__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_27__1__Impl
	rule__MethodExpression__Group_27__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_27__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getToStringKeyword_27_1()); }

	KEYWORD_81 

{ after(grammarAccess.getMethodExpressionAccess().getToStringKeyword_27_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_27__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_27__2__Impl
	rule__MethodExpression__Group_27__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_27__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_27_2()); }

	KEYWORD_4 

{ after(grammarAccess.getMethodExpressionAccess().getLeftParenthesisKeyword_27_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpression__Group_27__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodExpression__Group_27__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__Group_27__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_27_3()); }

	KEYWORD_5 

{ after(grammarAccess.getMethodExpressionAccess().getRightParenthesisKeyword_27_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ParenthesesExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesesExpression__Group__0__Impl
	rule__ParenthesesExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesesExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesesExpressionAccess().getLeftParenthesisKeyword_0()); }

	KEYWORD_4 

{ after(grammarAccess.getParenthesesExpressionAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesesExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesesExpression__Group__1__Impl
	rule__ParenthesesExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesesExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesesExpressionAccess().getConditionalOrExpressionParserRuleCall_1()); }
	ruleConditionalOrExpression
{ after(grammarAccess.getParenthesesExpressionAccess().getConditionalOrExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesesExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesesExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesesExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesesExpressionAccess().getRightParenthesisKeyword_2()); }

	KEYWORD_5 

{ after(grammarAccess.getParenthesesExpressionAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualifiedIdentifier__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedIdentifier__Group_9__0__Impl
	rule__QualifiedIdentifier__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdentifier__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedIdentifierAccess().getJavaKeyword_9_0()); }

	KEYWORD_51 

{ after(grammarAccess.getQualifiedIdentifierAccess().getJavaKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedIdentifier__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedIdentifier__Group_9__1__Impl
	rule__QualifiedIdentifier__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdentifier__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedIdentifierAccess().getIDTerminalRuleCall_9_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedIdentifierAccess().getIDTerminalRuleCall_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedIdentifier__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedIdentifier__Group_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdentifier__Group_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedIdentifierAccess().getGroup_9_2()); }
(rule__QualifiedIdentifier__Group_9_2__0)*
{ after(grammarAccess.getQualifiedIdentifierAccess().getGroup_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualifiedIdentifier__Group_9_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedIdentifier__Group_9_2__0__Impl
	rule__QualifiedIdentifier__Group_9_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdentifier__Group_9_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedIdentifierAccess().getFullStopKeyword_9_2_0()); }

	KEYWORD_10 

{ after(grammarAccess.getQualifiedIdentifierAccess().getFullStopKeyword_9_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedIdentifier__Group_9_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedIdentifier__Group_9_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdentifier__Group_9_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedIdentifierAccess().getIDTerminalRuleCall_9_2_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedIdentifierAccess().getIDTerminalRuleCall_9_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedIdentifier__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedIdentifier__Group_10__0__Impl
	rule__QualifiedIdentifier__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdentifier__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedIdentifierAccess().getJavaxKeyword_10_0()); }

	KEYWORD_61 

{ after(grammarAccess.getQualifiedIdentifierAccess().getJavaxKeyword_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedIdentifier__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedIdentifier__Group_10__1__Impl
	rule__QualifiedIdentifier__Group_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdentifier__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedIdentifierAccess().getIDTerminalRuleCall_10_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedIdentifierAccess().getIDTerminalRuleCall_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedIdentifier__Group_10__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedIdentifier__Group_10__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdentifier__Group_10__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedIdentifierAccess().getGroup_10_2()); }
(rule__QualifiedIdentifier__Group_10_2__0)*
{ after(grammarAccess.getQualifiedIdentifierAccess().getGroup_10_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualifiedIdentifier__Group_10_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedIdentifier__Group_10_2__0__Impl
	rule__QualifiedIdentifier__Group_10_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdentifier__Group_10_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedIdentifierAccess().getFullStopKeyword_10_2_0()); }

	KEYWORD_10 

{ after(grammarAccess.getQualifiedIdentifierAccess().getFullStopKeyword_10_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedIdentifier__Group_10_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedIdentifier__Group_10_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdentifier__Group_10_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedIdentifierAccess().getIDTerminalRuleCall_10_2_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedIdentifierAccess().getIDTerminalRuleCall_10_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedIdentifier__Group_11__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedIdentifier__Group_11__0__Impl
	rule__QualifiedIdentifier__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdentifier__Group_11__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedIdentifierAccess().getIDTerminalRuleCall_11_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedIdentifierAccess().getIDTerminalRuleCall_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedIdentifier__Group_11__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedIdentifier__Group_11__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdentifier__Group_11__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedIdentifierAccess().getGroup_11_1()); }
(rule__QualifiedIdentifier__Group_11_1__0)*
{ after(grammarAccess.getQualifiedIdentifierAccess().getGroup_11_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedIdentifier__Group_11_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedIdentifier__Group_11_1__0__Impl
	rule__QualifiedIdentifier__Group_11_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdentifier__Group_11_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedIdentifierAccess().getFullStopKeyword_11_1_0()); }

	KEYWORD_10 

{ after(grammarAccess.getQualifiedIdentifierAccess().getFullStopKeyword_11_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedIdentifier__Group_11_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedIdentifier__Group_11_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdentifier__Group_11_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedIdentifierAccess().getIDTerminalRuleCall_11_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedIdentifierAccess().getIDTerminalRuleCall_11_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__SingleStringJDOQL__SelectClauseAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleStringJDOQLAccess().getSelectClauseSelectClauseParserRuleCall_0_0()); }
	ruleSelectClause{ after(grammarAccess.getSingleStringJDOQLAccess().getSelectClauseSelectClauseParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleStringJDOQL__FromClauseAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleStringJDOQLAccess().getFromClauseFromClauseParserRuleCall_1_0()); }
	ruleFromClause{ after(grammarAccess.getSingleStringJDOQLAccess().getFromClauseFromClauseParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleStringJDOQL__WhereClauseAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleStringJDOQLAccess().getWhereClauseWhereClauseParserRuleCall_2_0()); }
	ruleWhereClause{ after(grammarAccess.getSingleStringJDOQLAccess().getWhereClauseWhereClauseParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleStringJDOQL__VariablesClauseAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleStringJDOQLAccess().getVariablesClauseVariablesClauseParserRuleCall_3_0()); }
	ruleVariablesClause{ after(grammarAccess.getSingleStringJDOQLAccess().getVariablesClauseVariablesClauseParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleStringJDOQL__ParametersClauseAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleStringJDOQLAccess().getParametersClauseParametersClauseParserRuleCall_4_0()); }
	ruleParametersClause{ after(grammarAccess.getSingleStringJDOQLAccess().getParametersClauseParametersClauseParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleStringJDOQL__ImportClauseAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleStringJDOQLAccess().getImportClauseImportClauseParserRuleCall_5_0()); }
	ruleImportClause{ after(grammarAccess.getSingleStringJDOQLAccess().getImportClauseImportClauseParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleStringJDOQL__GroupByClauseAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleStringJDOQLAccess().getGroupByClauseGroupByClauseParserRuleCall_6_0()); }
	ruleGroupByClause{ after(grammarAccess.getSingleStringJDOQLAccess().getGroupByClauseGroupByClauseParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleStringJDOQL__OrderByClauseAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleStringJDOQLAccess().getOrderByClauseOrderByClauseParserRuleCall_7_0()); }
	ruleOrderByClause{ after(grammarAccess.getSingleStringJDOQLAccess().getOrderByClauseOrderByClauseParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleStringJDOQL__RangeClauseAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleStringJDOQLAccess().getRangeClauseRangeClauseParserRuleCall_8_0()); }
	ruleRangeClause{ after(grammarAccess.getSingleStringJDOQLAccess().getRangeClauseRangeClauseParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectClause__IsUniqueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectClauseAccess().getIsUniqueUNIQUEKeyword_2_0()); }
(
{ before(grammarAccess.getSelectClauseAccess().getIsUniqueUNIQUEKeyword_2_0()); }

	KEYWORD_55 

{ after(grammarAccess.getSelectClauseAccess().getIsUniqueUNIQUEKeyword_2_0()); }
)

{ after(grammarAccess.getSelectClauseAccess().getIsUniqueUNIQUEKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectClause__ResultClauseAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectClauseAccess().getResultClauseResultClauseParserRuleCall_3_0()); }
	ruleResultClause{ after(grammarAccess.getSelectClauseAccess().getResultClauseResultClauseParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectClause__IntoClauseAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectClauseAccess().getIntoClauseIntoClauseParserRuleCall_4_0()); }
	ruleIntoClause{ after(grammarAccess.getSelectClauseAccess().getIntoClauseIntoClauseParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResultClause__IsDistinctAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultClauseAccess().getIsDistinctDISTINCTKeyword_0_0()); }
(
{ before(grammarAccess.getResultClauseAccess().getIsDistinctDISTINCTKeyword_0_0()); }

	KEYWORD_71 

{ after(grammarAccess.getResultClauseAccess().getIsDistinctDISTINCTKeyword_0_0()); }
)

{ after(grammarAccess.getResultClauseAccess().getIsDistinctDISTINCTKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResultClause__ResultSpecsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultClauseAccess().getResultSpecsResultSpecParserRuleCall_1_0()); }
	ruleResultSpec{ after(grammarAccess.getResultClauseAccess().getResultSpecsResultSpecParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResultClause__ResultSpecsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultClauseAccess().getResultSpecsResultSpecParserRuleCall_2_1_0()); }
	ruleResultSpec{ after(grammarAccess.getResultClauseAccess().getResultSpecsResultSpecParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntoClause__ResultClassNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntoClauseAccess().getResultClassNameClassOrInterfaceNameParserRuleCall_1_0()); }
	ruleClassOrInterfaceName{ after(grammarAccess.getIntoClauseAccess().getResultClassNameClassOrInterfaceNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResultSpec__ResultNamingAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultSpecAccess().getResultNamingResultNamingParserRuleCall_1_0()); }
	ruleResultNaming{ after(grammarAccess.getResultSpecAccess().getResultNamingResultNamingParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResultNaming__IdentifierAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultNamingAccess().getIdentifierIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getResultNamingAccess().getIdentifierIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FromClause__CandidateClassNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromClauseAccess().getCandidateClassNameCandidateClassNameParserRuleCall_1_0()); }
	ruleCandidateClassName{ after(grammarAccess.getFromClauseAccess().getCandidateClassNameCandidateClassNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FromClause__IsExcludeSubclassesAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromClauseAccess().getIsExcludeSubclassesEXCLUDEKeyword_2_0_0()); }
(
{ before(grammarAccess.getFromClauseAccess().getIsExcludeSubclassesEXCLUDEKeyword_2_0_0()); }

	KEYWORD_63 

{ after(grammarAccess.getFromClauseAccess().getIsExcludeSubclassesEXCLUDEKeyword_2_0_0()); }
)

{ after(grammarAccess.getFromClauseAccess().getIsExcludeSubclassesEXCLUDEKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__FilterAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhereClauseAccess().getFilterConditionalOrExpressionParserRuleCall_1_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getWhereClauseAccess().getFilterConditionalOrExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariablesClause__VariableDeclarationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesClauseAccess().getVariableDeclarationsVariableDeclarationParserRuleCall_1_0()); }
	ruleVariableDeclaration{ after(grammarAccess.getVariablesClauseAccess().getVariableDeclarationsVariableDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariablesClause__VariableDeclarationsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesClauseAccess().getVariableDeclarationsVariableDeclarationParserRuleCall_2_1_0()); }
	ruleVariableDeclaration{ after(grammarAccess.getVariablesClauseAccess().getVariableDeclarationsVariableDeclarationParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getTypeTypeParserRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getVariableDeclarationAccess().getTypeTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__VariableNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getVariableNameVariableNameParserRuleCall_1_0()); }
	ruleVariableName{ after(grammarAccess.getVariableDeclarationAccess().getVariableNameVariableNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersClause__ParameterDeclarationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersClauseAccess().getParameterDeclarationsParameterDeclarationParserRuleCall_1_0()); }
	ruleParameterDeclaration{ after(grammarAccess.getParametersClauseAccess().getParameterDeclarationsParameterDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersClause__ParameterDeclarationsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersClauseAccess().getParameterDeclarationsParameterDeclarationParserRuleCall_2_1_0()); }
	ruleParameterDeclaration{ after(grammarAccess.getParametersClauseAccess().getParameterDeclarationsParameterDeclarationParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getTypeTypeParserRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getParameterDeclarationAccess().getTypeTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__DeclaredParameterNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getDeclaredParameterNameDeclaredParameterNameParserRuleCall_1_0()); }
	ruleDeclaredParameterName{ after(grammarAccess.getParameterDeclarationAccess().getDeclaredParameterNameDeclaredParameterNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__ImportDeclarationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportClauseAccess().getImportDeclarationsImportDeclarationParserRuleCall_0_0()); }
	ruleImportDeclaration{ after(grammarAccess.getImportClauseAccess().getImportDeclarationsImportDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__ImportDeclarationsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportClauseAccess().getImportDeclarationsImportDeclarationParserRuleCall_1_1_0()); }
	ruleImportDeclaration{ after(grammarAccess.getImportClauseAccess().getImportDeclarationsImportDeclarationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByClause__GroupingAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByClauseAccess().getGroupingConditionalOrExpressionParserRuleCall_2_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getGroupByClauseAccess().getGroupingConditionalOrExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByClause__GroupingAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByClauseAccess().getGroupingConditionalOrExpressionParserRuleCall_3_1_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getGroupByClauseAccess().getGroupingConditionalOrExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupByClause__HavingClauseAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupByClauseAccess().getHavingClauseHavingClauseParserRuleCall_5_0()); }
	ruleHavingClause{ after(grammarAccess.getGroupByClauseAccess().getHavingClauseHavingClauseParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HavingClause__HavingAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHavingClauseAccess().getHavingConditionalOrExpressionParserRuleCall_1_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getHavingClauseAccess().getHavingConditionalOrExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrderByClause__OrderingAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderByClauseAccess().getOrderingOrderBySpecParserRuleCall_2_0()); }
	ruleOrderBySpec{ after(grammarAccess.getOrderByClauseAccess().getOrderingOrderBySpecParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrderByClause__OrderingAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderByClauseAccess().getOrderingOrderBySpecParserRuleCall_3_1_0()); }
	ruleOrderBySpec{ after(grammarAccess.getOrderByClauseAccess().getOrderingOrderBySpecParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrderBySpec__DirectionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderBySpecAccess().getDirectionOrderByDirectionEnumRuleCall_1_0()); }
	ruleOrderByDirection{ after(grammarAccess.getOrderBySpecAccess().getDirectionOrderByDirectionEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__StartAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeClauseAccess().getStartConditionalOrExpressionParserRuleCall_1_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getRangeClauseAccess().getStartConditionalOrExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__EndAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeClauseAccess().getEndConditionalOrExpressionParserRuleCall_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getRangeClauseAccess().getEndConditionalOrExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalOrExpressionAccess().getRightConditionalAndExpressionParserRuleCall_1_2_0()); }
	ruleConditionalAndExpression{ after(grammarAccess.getConditionalOrExpressionAccess().getRightConditionalAndExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAndExpressionAccess().getRightSimpleOrExpressionParserRuleCall_1_2_0()); }
	ruleSimpleOrExpression{ after(grammarAccess.getConditionalAndExpressionAccess().getRightSimpleOrExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOrExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleOrExpressionAccess().getRightSimpleAndExpressionParserRuleCall_1_2_0()); }
	ruleSimpleAndExpression{ after(grammarAccess.getSimpleOrExpressionAccess().getRightSimpleAndExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleAndExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleAndExpressionAccess().getRightComparisonOperatorExpressionParserRuleCall_1_2_0()); }
	ruleComparisonOperatorExpression{ after(grammarAccess.getSimpleAndExpressionAccess().getRightComparisonOperatorExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperatorExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonOperatorExpressionAccess().getOperatorComparisonOperatorEnumRuleCall_1_1_0()); }
	ruleComparisonOperator{ after(grammarAccess.getComparisonOperatorExpressionAccess().getOperatorComparisonOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperatorExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonOperatorExpressionAccess().getRightAdditionExpressionParserRuleCall_1_2_0()); }
	ruleAdditionExpression{ after(grammarAccess.getComparisonOperatorExpressionAccess().getRightAdditionExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionExpressionAccess().getOperatorAdditionOperatorEnumRuleCall_1_1_0()); }
	ruleAdditionOperator{ after(grammarAccess.getAdditionExpressionAccess().getOperatorAdditionOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionExpressionAccess().getRightMultiplicationExpressionParserRuleCall_1_2_0()); }
	ruleMultiplicationExpression{ after(grammarAccess.getAdditionExpressionAccess().getRightMultiplicationExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationExpressionAccess().getOperatorMultiplicationOperatorEnumRuleCall_1_1_0()); }
	ruleMultiplicationOperator{ after(grammarAccess.getMultiplicationExpressionAccess().getOperatorMultiplicationOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationExpressionAccess().getRightUnaryExpressionParserRuleCall_1_2_0()); }
	ruleUnaryExpression{ after(grammarAccess.getMultiplicationExpressionAccess().getRightUnaryExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__CastTypeAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getCastTypeTypeParserRuleCall_0_1_0()); }
	ruleType{ after(grammarAccess.getUnaryExpressionAccess().getCastTypeTypeParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__RightAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getRightFieldAccessExpressionParserRuleCall_0_3_0()); }
	ruleFieldAccessExpression{ after(grammarAccess.getUnaryExpressionAccess().getRightFieldAccessExpressionParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__UnaryOperatorAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getUnaryOperatorUnaryOperatorEnumRuleCall_1_0_0()); }
	ruleUnaryOperator{ after(grammarAccess.getUnaryExpressionAccess().getUnaryOperatorUnaryOperatorEnumRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getRightFieldAccessExpressionParserRuleCall_1_1_0()); }
	ruleFieldAccessExpression{ after(grammarAccess.getUnaryExpressionAccess().getRightFieldAccessExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAccessExpression__RightAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccessExpressionAccess().getRightFieldOrMethodExpressionParserRuleCall_1_1_2_0()); }
	ruleFieldOrMethodExpression{ after(grammarAccess.getFieldAccessExpressionAccess().getRightFieldOrMethodExpressionParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterOrFieldOrMethodExpression__LiteralAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getLiteralLiteralParserRuleCall_0_0()); }
	ruleLiteral{ after(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getLiteralLiteralParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterOrFieldOrMethodExpression__ThisAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getThisThisKeyword_1_0()); }
(
{ before(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getThisThisKeyword_1_0()); }

	KEYWORD_41 

{ after(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getThisThisKeyword_1_0()); }
)

{ after(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getThisThisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterOrFieldOrMethodExpression__IdAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getIdIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getIdIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterOrFieldOrMethodExpression__ParameterNameAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getParameterNameParameterNameParserRuleCall_3_1_0()); }
	ruleParameterName{ after(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getParameterNameParameterNameParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterOrFieldOrMethodExpression__MethodAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getMethodMethodExpressionParserRuleCall_5_0()); }
	ruleMethodExpression{ after(grammarAccess.getParameterOrFieldOrMethodExpressionAccess().getMethodMethodExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldOrMethodExpression__LiteralAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldOrMethodExpressionAccess().getLiteralLiteralParserRuleCall_0_0()); }
	ruleLiteral{ after(grammarAccess.getFieldOrMethodExpressionAccess().getLiteralLiteralParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldOrMethodExpression__ThisAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldOrMethodExpressionAccess().getThisThisKeyword_1_0()); }
(
{ before(grammarAccess.getFieldOrMethodExpressionAccess().getThisThisKeyword_1_0()); }

	KEYWORD_41 

{ after(grammarAccess.getFieldOrMethodExpressionAccess().getThisThisKeyword_1_0()); }
)

{ after(grammarAccess.getFieldOrMethodExpressionAccess().getThisThisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldOrMethodExpression__IdAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldOrMethodExpressionAccess().getIdIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getFieldOrMethodExpressionAccess().getIdIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldOrMethodExpression__MethodAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldOrMethodExpressionAccess().getMethodMethodExpressionParserRuleCall_4_0()); }
	ruleMethodExpression{ after(grammarAccess.getFieldOrMethodExpressionAccess().getMethodMethodExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__NumberAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_0_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__NumberAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_1_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__NumberAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_2_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__NumberAssignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_3_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__NumberAssignment_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_4_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__NumberAssignment_5_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_5_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__NumberAssignment_6_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_6_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__NumberAssignment_7_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_7_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_7_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__NumberAssignment_8_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_8_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_8_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__NumberAssignment_9_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_9_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_9_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__NumberAssignment_10_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_10_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_10_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__NumberAssignment_11_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_11_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_11_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__NumberAssignment_12_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_12_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_12_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__NumberAssignment_13_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_13_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_13_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__NumberAssignment_14_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_14_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_14_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__NumberAssignment_15_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_15_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_15_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__NumberAssignment_16_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_16_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_16_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__NumberAssignment_17_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_17_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_17_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__NumberAssignment_18_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_18_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_18_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__NumberAssignment_19_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_19_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_19_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__NumberAssignment_20_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_20_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_20_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__NumberAssignment_21_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_21_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_21_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__NumberAssignment_22_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_22_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_22_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__NumberAssignment_23_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_23_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getNumberConditionalOrExpressionParserRuleCall_23_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__PersistableAssignment_24_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getPersistableConditionalOrExpressionParserRuleCall_24_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getPersistableConditionalOrExpressionParserRuleCall_24_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__PersistableAssignment_25_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getPersistableConditionalOrExpressionParserRuleCall_25_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getPersistableConditionalOrExpressionParserRuleCall_25_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__PersistableAssignment_26_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getPersistableConditionalOrExpressionParserRuleCall_26_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getPersistableConditionalOrExpressionParserRuleCall_26_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__PersistableAssignment_27_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getPersistableConditionalOrExpressionParserRuleCall_27_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getPersistableConditionalOrExpressionParserRuleCall_27_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__IsDistinctAssignment_28_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getIsDistinctDISTINCTKeyword_28_3_0()); }
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getIsDistinctDISTINCTKeyword_28_3_0()); }

	KEYWORD_71 

{ after(grammarAccess.getStaticMethodExpressionAccess().getIsDistinctDISTINCTKeyword_28_3_0()); }
)

{ after(grammarAccess.getStaticMethodExpressionAccess().getIsDistinctDISTINCTKeyword_28_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__AggregateArgumentAssignment_28_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getAggregateArgumentConditionalOrExpressionParserRuleCall_28_4_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getAggregateArgumentConditionalOrExpressionParserRuleCall_28_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__IsDistinctAssignment_29_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getIsDistinctDISTINCTKeyword_29_3_0()); }
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getIsDistinctDISTINCTKeyword_29_3_0()); }

	KEYWORD_71 

{ after(grammarAccess.getStaticMethodExpressionAccess().getIsDistinctDISTINCTKeyword_29_3_0()); }
)

{ after(grammarAccess.getStaticMethodExpressionAccess().getIsDistinctDISTINCTKeyword_29_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__AggregateArgumentAssignment_29_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getAggregateArgumentConditionalOrExpressionParserRuleCall_29_4_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getAggregateArgumentConditionalOrExpressionParserRuleCall_29_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__AggregateArgumentAssignment_30_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getAggregateArgumentConditionalOrExpressionParserRuleCall_30_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getAggregateArgumentConditionalOrExpressionParserRuleCall_30_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__AggregateArgumentAssignment_31_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getAggregateArgumentConditionalOrExpressionParserRuleCall_31_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getAggregateArgumentConditionalOrExpressionParserRuleCall_31_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__IsDistinctAssignment_32_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getIsDistinctDISTINCTKeyword_32_3_0()); }
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getIsDistinctDISTINCTKeyword_32_3_0()); }

	KEYWORD_71 

{ after(grammarAccess.getStaticMethodExpressionAccess().getIsDistinctDISTINCTKeyword_32_3_0()); }
)

{ after(grammarAccess.getStaticMethodExpressionAccess().getIsDistinctDISTINCTKeyword_32_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticMethodExpression__AggregateArgumentAssignment_32_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticMethodExpressionAccess().getAggregateArgumentConditionalOrExpressionParserRuleCall_32_4_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getStaticMethodExpressionAccess().getAggregateArgumentConditionalOrExpressionParserRuleCall_32_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__ElementAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getElementConditionalOrExpressionParserRuleCall_0_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getMethodExpressionAccess().getElementConditionalOrExpressionParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__ArgAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getArgConditionalOrExpressionParserRuleCall_1_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getMethodExpressionAccess().getArgConditionalOrExpressionParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__KeyAssignment_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getKeyConditionalOrExpressionParserRuleCall_4_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getMethodExpressionAccess().getKeyConditionalOrExpressionParserRuleCall_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__ValueAssignment_5_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getValueConditionalOrExpressionParserRuleCall_5_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getMethodExpressionAccess().getValueConditionalOrExpressionParserRuleCall_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__KeyAssignment_6_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getKeyConditionalOrExpressionParserRuleCall_6_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getMethodExpressionAccess().getKeyConditionalOrExpressionParserRuleCall_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__ValueAssignment_6_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getValueConditionalOrExpressionParserRuleCall_6_5_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getMethodExpressionAccess().getValueConditionalOrExpressionParserRuleCall_6_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__IndexAssignment_7_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getIndexConditionalOrExpressionParserRuleCall_7_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getMethodExpressionAccess().getIndexConditionalOrExpressionParserRuleCall_7_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__StringAssignment_8_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getStringConditionalOrExpressionParserRuleCall_8_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getMethodExpressionAccess().getStringConditionalOrExpressionParserRuleCall_8_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__StringAssignment_9_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getStringConditionalOrExpressionParserRuleCall_9_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getMethodExpressionAccess().getStringConditionalOrExpressionParserRuleCall_9_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__StringAssignment_10_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getStringConditionalOrExpressionParserRuleCall_10_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getMethodExpressionAccess().getStringConditionalOrExpressionParserRuleCall_10_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__StringAssignment_11_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getStringConditionalOrExpressionParserRuleCall_11_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getMethodExpressionAccess().getStringConditionalOrExpressionParserRuleCall_11_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__FromIndexAssignment_11_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getFromIndexConditionalOrExpressionParserRuleCall_11_4_1_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getMethodExpressionAccess().getFromIndexConditionalOrExpressionParserRuleCall_11_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__RegexAssignment_13_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRegexConditionalOrExpressionParserRuleCall_13_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getMethodExpressionAccess().getRegexConditionalOrExpressionParserRuleCall_13_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__RegexAssignment_14_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getRegexConditionalOrExpressionParserRuleCall_14_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getMethodExpressionAccess().getRegexConditionalOrExpressionParserRuleCall_14_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__ReplacementAssignment_14_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getReplacementConditionalOrExpressionParserRuleCall_14_5_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getMethodExpressionAccess().getReplacementConditionalOrExpressionParserRuleCall_14_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__StringAssignment_15_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getStringConditionalOrExpressionParserRuleCall_15_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getMethodExpressionAccess().getStringConditionalOrExpressionParserRuleCall_15_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__BeginIndexAssignment_16_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getBeginIndexConditionalOrExpressionParserRuleCall_16_3_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getMethodExpressionAccess().getBeginIndexConditionalOrExpressionParserRuleCall_16_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpression__EndIndexAssignment_16_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodExpressionAccess().getEndIndexConditionalOrExpressionParserRuleCall_16_4_1_0()); }
	ruleConditionalOrExpression{ after(grammarAccess.getMethodExpressionAccess().getEndIndexConditionalOrExpressionParserRuleCall_16_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


